{"version":3,"file":"default-node_modules_angular_fire_fesm2015_angular-fire-compat-database_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASoC,QAAT,CAAkBC,KAAlB,EAAyB;EACrB,OAAO,OAAOA,KAAP,KAAiB,QAAxB;AACH;;AACD,SAASC,sBAAT,CAAgCD,KAAhC,EAAuC;EACnC,OAAO,OAAOA,KAAK,CAACE,SAAb,KAA2B,UAAlC;AACH;;AACD,SAASC,KAAT,CAAeC,GAAf,EAAoB;EAChB,OAAOA,GAAG,KAAKC,SAAR,IAAqBD,GAAG,KAAK,IAApC;AACH;;AACD,SAASE,aAAT,CAAuBN,KAAvB,EAA8B;EAC1B,OAAO,OAAOA,KAAK,CAACO,GAAb,KAAqB,UAA5B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,MAAT,CAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;EAC/B;EACA,OAAOJ,aAAa,CAACI,OAAD,CAAb,GAAyBA,OAAzB,GACDD,QAAQ,CAACE,GAAT,CAAaD,OAAb,CADN;AAEH;;AACD,SAASE,mBAAT,CAA6BC,IAA7B,EAAmCC,KAAnC,EAA0C;EACtC,IAAIf,QAAQ,CAACc,IAAD,CAAZ,EAAoB;IAChB,OAAOC,KAAK,CAACC,UAAN,EAAP;EACH,CAFD,MAGK,IAAIT,aAAa,CAACO,IAAD,CAAjB,EAAyB;IAC1B,OAAOC,KAAK,CAACE,YAAN,EAAP;EACH,CAFI,MAGA,IAAIf,sBAAsB,CAACY,IAAD,CAA1B,EAAkC;IACnC,OAAOC,KAAK,CAACG,YAAN,EAAP;EACH;;EACD,MAAM,IAAIC,KAAJ,CAAW,kDAAiD,OAAOL,IAAK,EAAxE,CAAN;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,OAAT,CAAiBR,GAAjB,EAAsBS,KAAtB,EAA6BC,UAAU,GAAG,IAA1C,EAAgDC,SAAS,GAAGpD,gDAA5D,EAA4E;EACxE,OAAO,IAAIC,4CAAJ,CAAeoD,UAAU,IAAI;IAChC,IAAIC,EAAE,GAAG,IAAT;IACAA,EAAE,GAAGb,GAAG,CAACU,UAAD,CAAH,CAAgBD,KAAhB,EAAuB,CAACK,QAAD,EAAWC,OAAX,KAAuB;MAC/CJ,SAAS,CAACK,QAAV,CAAmB,MAAM;QACrBJ,UAAU,CAACK,IAAX,CAAgB;UAAEH,QAAF;UAAYC;QAAZ,CAAhB;MACH,CAFD;;MAGA,IAAIL,UAAU,KAAK,MAAnB,EAA2B;QACvBC,SAAS,CAACK,QAAV,CAAmB,MAAMJ,UAAU,CAACM,QAAX,EAAzB;MACH;IACJ,CAPI,EAOFC,GAAG,IAAI;MACNR,SAAS,CAACK,QAAV,CAAmB,MAAMJ,UAAU,CAACQ,KAAX,CAAiBD,GAAjB,CAAzB;IACH,CATI,CAAL;;IAUA,IAAIT,UAAU,KAAK,IAAnB,EAAyB;MACrB,OAAO;QACHW,WAAW,GAAG;UACV,IAAIR,EAAE,IAAI,IAAV,EAAgB;YACZb,GAAG,CAACsB,GAAJ,CAAQb,KAAR,EAAeI,EAAf;UACH;QACJ;;MALE,CAAP;IAOH,CARD,MASK;MACD,OAAO;QACHQ,WAAW,GAAG,CACb;;MAFE,CAAP;IAIH;EACJ,CA3BM,EA2BJE,IA3BI,CA2BC5D,mDAAG,CAAC6D,OAAO,IAAI;IACnB,MAAM;MAAEV,QAAF;MAAYC;IAAZ,IAAwBS,OAA9B;IACA,IAAIC,GAAG,GAAG,IAAV;;IACA,IAAIX,QAAQ,CAACY,MAAT,EAAJ,EAAuB;MACnBD,GAAG,GAAGX,QAAQ,CAACW,GAAf;IACH;;IACD,OAAO;MAAEE,IAAI,EAAElB,KAAR;MAAee,OAAO,EAAEV,QAAxB;MAAkCC,OAAlC;MAA2CU;IAA3C,CAAP;EACH,CAPU,CA3BJ,EAkCH7D,qDAAK,EAlCF,CAAP;AAmCH;;AAED,SAASgE,WAAT,CAAqB5B,GAArB,EAA0B6B,MAA1B,EAAkClB,SAAlC,EAA6C;EACzC,OAAOH,OAAO,CAACR,GAAD,EAAM,OAAN,EAAe,MAAf,EAAuBW,SAAvB,CAAP,CAAyCY,IAAzC,CAA8C1D,yDAAS,CAACiE,cAAc,IAAI;IAC7E,MAAMC,WAAW,GAAG,CAACtE,wCAAE,CAACqE,cAAD,CAAH,CAApB;IACAD,MAAM,CAACG,OAAP,CAAevB,KAAK,IAAIsB,WAAW,CAACE,IAAZ,CAAiBzB,OAAO,CAACR,GAAD,EAAMS,KAAN,EAAa,IAAb,EAAmBE,SAAnB,CAAxB,CAAxB;IACA,OAAOjD,2CAAK,CAAC,GAAGqE,WAAJ,CAAL,CAAsBR,IAAtB,CAA2BzD,qDAAI,CAACoE,SAAD,EAAY,EAAZ,CAA/B,CAAP;EACH,CAJ6D,CAAvD,EAIHnE,qEAAoB,EAJjB,CAAP;AAKH;;AACD,SAASoE,WAAT,CAAqBC,OAArB,EAA8BX,GAA9B,EAAmC;EAC/B,MAAMY,GAAG,GAAGD,OAAO,CAACE,MAApB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;IAC1B,IAAIH,OAAO,CAACG,CAAD,CAAP,CAAWf,OAAX,CAAmBC,GAAnB,KAA2BA,GAA/B,EAAoC;MAChC,OAAOc,CAAP;IACH;EACJ;;EACD,OAAO,CAAC,CAAR;AACH;;AACD,SAASC,aAAT,CAAuBJ,OAAvB,EAAgCrB,OAAhC,EAAyC;EACrC,IAAIvB,KAAK,CAACuB,OAAD,CAAT,EAAoB;IAChB,OAAO,CAAP;EACH,CAFD,MAGK;IACD,MAAMwB,CAAC,GAAGJ,WAAW,CAACC,OAAD,EAAUrB,OAAV,CAArB;;IACA,IAAIwB,CAAC,KAAK,CAAC,CAAX,EAAc;MACV,OAAOH,OAAO,CAACE,MAAf;IACH,CAFD,MAGK;MACD,OAAOC,CAAC,GAAG,CAAX;IACH;EACJ;AACJ;;AACD,SAASL,SAAT,CAAmBO,OAAnB,EAA4BC,MAA5B,EAAoC;EAChC,MAAM;IAAElB,OAAF;IAAWT,OAAX;IAAoBU;EAApB,IAA4BiB,MAAlC;EACA,MAAMC,kBAAkB,GAAGR,WAAW,CAACM,OAAD,EAAUhB,GAAV,CAAtC;EACA,MAAMmB,wBAAwB,GAAGJ,aAAa,CAACC,OAAD,EAAU1B,OAAV,CAA9C;;EACA,QAAQ2B,MAAM,CAACf,IAAf;IACI,KAAK,OAAL;MACI,IAAIe,MAAM,CAAClB,OAAP,IAAkBkB,MAAM,CAAClB,OAAP,CAAeE,MAAf,EAAtB,EAA+C;QAC3C,IAAIX,OAAO,GAAG,IAAd;QACA2B,MAAM,CAAClB,OAAP,CAAeQ,OAAf,CAAuBR,OAAO,IAAI;UAC9B,MAAMkB,MAAM,GAAG;YAAElB,OAAF;YAAWG,IAAI,EAAE,OAAjB;YAA0BZ,OAA1B;YAAmCU,GAAG,EAAED,OAAO,CAACC;UAAhD,CAAf;UACAV,OAAO,GAAGS,OAAO,CAACC,GAAlB;UACAgB,OAAO,GAAG,CAAC,GAAGA,OAAJ,EAAaC,MAAb,CAAV;UACA,OAAO,KAAP;QACH,CALD;MAMH;;MACD,OAAOD,OAAP;;IACJ,KAAK,aAAL;MACI,IAAIE,kBAAkB,GAAG,CAAC,CAA1B,EAA6B;QACzB;QACA,MAAME,QAAQ,GAAGJ,OAAO,CAACE,kBAAkB,GAAG,CAAtB,CAAxB;;QACA,IAAI,CAACE,QAAQ,IAAIA,QAAQ,CAACpB,GAArB,IAA4B,IAA7B,MAAuCV,OAA3C,EAAoD;UAChD0B,OAAO,GAAGA,OAAO,CAACK,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACvB,OAAF,CAAUC,GAAV,KAAkBD,OAAO,CAACC,GAA9C,CAAV;UACAgB,OAAO,CAACO,MAAR,CAAeJ,wBAAf,EAAyC,CAAzC,EAA4CF,MAA5C;QACH;MACJ,CAPD,MAQK,IAAI3B,OAAO,IAAI,IAAf,EAAqB;QACtB,OAAO,CAAC2B,MAAD,EAAS,GAAGD,OAAZ,CAAP;MACH,CAFI,MAGA;QACDA,OAAO,GAAGA,OAAO,CAACQ,KAAR,EAAV;QACAR,OAAO,CAACO,MAAR,CAAeJ,wBAAf,EAAyC,CAAzC,EAA4CF,MAA5C;MACH;;MACD,OAAOD,OAAP;;IACJ,KAAK,eAAL;MACI,OAAOA,OAAO,CAACK,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACvB,OAAF,CAAUC,GAAV,KAAkBD,OAAO,CAACC,GAA9C,CAAP;;IACJ,KAAK,eAAL;MACI,OAAOgB,OAAO,CAAC9E,GAAR,CAAYoF,CAAC,IAAIA,CAAC,CAACvB,OAAF,CAAUC,GAAV,KAAkBA,GAAlB,GAAwBiB,MAAxB,GAAiCK,CAAlD,CAAP;;IACJ,KAAK,aAAL;MACI,IAAIJ,kBAAkB,GAAG,CAAC,CAA1B,EAA6B;QACzB,MAAMO,IAAI,GAAGT,OAAO,CAACO,MAAR,CAAeL,kBAAf,EAAmC,CAAnC,EAAsC,CAAtC,CAAb;QACAF,OAAO,GAAGA,OAAO,CAACQ,KAAR,EAAV;QACAR,OAAO,CAACO,MAAR,CAAeJ,wBAAf,EAAyC,CAAzC,EAA4CM,IAA5C;QACA,OAAOT,OAAP;MACH;;MACD,OAAOA,OAAP;IACJ;;IACA;MACI,OAAOA,OAAP;EA3CR;AA6CH;;AAED,SAASU,mBAAT,CAA6BtB,MAA7B,EAAqC;EACjC,IAAIrC,KAAK,CAACqC,MAAD,CAAL,IAAiBA,MAAM,CAACS,MAAP,KAAkB,CAAvC,EAA0C;IACtCT,MAAM,GAAG,CAAC,aAAD,EAAgB,eAAhB,EAAiC,eAAjC,EAAkD,aAAlD,CAAT;EACH;;EACD,OAAOA,MAAP;AACH;;AAED,SAASuB,eAAT,CAAyBC,KAAzB,EAAgCxB,MAAhC,EAAwClB,SAAxC,EAAmD;EAC/CkB,MAAM,GAAGsB,mBAAmB,CAACtB,MAAD,CAA5B;EACA,OAAOD,WAAW,CAACyB,KAAD,EAAQxB,MAAR,EAAgBlB,SAAhB,CAAlB;AACH;;AAED,SAAS2C,YAAT,CAAsBD,KAAtB,EAA6BxB,MAA7B,EAAqClB,SAArC,EAAgD;EAC5CkB,MAAM,GAAGsB,mBAAmB,CAACtB,MAAD,CAA5B;EACA,MAAME,WAAW,GAAGF,MAAM,CAAClE,GAAP,CAAW8C,KAAK,IAAID,OAAO,CAAC6C,KAAD,EAAQ5C,KAAR,EAAe,IAAf,EAAqBE,SAArB,CAA3B,CAApB;EACA,OAAOjD,2CAAK,CAAC,GAAGqE,WAAJ,CAAZ;AACH;;AAED,SAASwB,UAAT,CAAoBF,KAApB,EAA2BxB,MAA3B,EAAmClB,SAAnC,EAA8C;EAC1C,MAAM6C,WAAW,GAAGF,YAAY,CAACD,KAAD,EAAQxB,MAAR,CAAZ,CACfN,IADe,CACVzD,qDAAI,CAAC,CAAC2E,OAAD,EAAUC,MAAV,KAAqB,CAAC,GAAGD,OAAJ,EAAaC,MAAb,CAAtB,EAA4C,EAA5C,CADM,CAApB;EAEA,OAAOe,aAAa,CAACJ,KAAD,EAAQG,WAAR,EAAqB7C,SAArB,CAApB;AACH;;AACD,SAAS+C,UAAT,CAAoBL,KAApB,EAA2B1C,SAA3B,EAAsC;EAClC;EACA;EACA;EACA,OAAOH,OAAO,CAAC6C,KAAD,EAAQ,OAAR,EAAiB,IAAjB,EAAuB1C,SAAvB,CAAP,CACFY,IADE,CACG5D,mDAAG,CAACuF,IAAI,IAAI;IAClB;IACA,IAAIS,aAAJ,CAFkB,CAGlB;;IACAT,IAAI,CAAC1B,OAAL,CAAaQ,OAAb,CAAqB4B,KAAK,IAAI;MAC1BD,aAAa,GAAGC,KAAK,CAACnC,GAAtB;MACA,OAAO,KAAP;IACH,CAHD,EAJkB,CAQlB;;IACA,OAAO;MAAEyB,IAAF;MAAQS;IAAR,CAAP;EACH,CAVY,CADN,CAAP;AAYH;;AACD,SAASF,aAAT,CAAuBJ,KAAvB,EAA8BQ,OAA9B,EAAuClD,SAAvC,EAAkD;EAC9C,MAAMmD,OAAO,GAAGJ,UAAU,CAACL,KAAD,EAAQ1C,SAAR,CAA1B;EACA,OAAOmD,OAAO,CACTvC,IADE,CACGvD,+DAAc,CAAC6F,OAAD,CADjB,EAEP;EACA;EACAlG,mDAAG,CAAC,CAAC,CAACoG,MAAD,EAASC,OAAT,CAAD,KAAuB;IACvB;IACA,MAAML,aAAa,GAAGI,MAAM,CAACJ,aAA7B,CAFuB,CAGvB;;IACA,MAAMM,UAAU,GAAGD,OAAO,CAACrG,GAAR,CAAYuG,IAAI,IAAIA,IAAI,CAACzC,GAAzB,CAAnB;IACA,OAAO;MAAEuC,OAAF;MAAWL,aAAX;MAA0BM;IAA1B,CAAP;EACH,CANE,CAJI,EAWP;EACA;EACA;EACAhG,0DAAS,CAACkG,IAAI,IAAIA,IAAI,CAACF,UAAL,CAAgBG,OAAhB,CAAwBD,IAAI,CAACR,aAA7B,MAAgD,CAAC,CAA1D,CAdF,EAeP;EACA;EACAhG,mDAAG,CAACwG,IAAI,IAAIA,IAAI,CAACH,OAAd,CAjBI,CAAP;AAkBH;;AAED,SAASK,yBAAT,CAAmCrE,GAAnC,EAAwCsE,SAAxC,EAAmD;EAC/C,OAAO,SAASC,aAAT,CAAuBrE,IAAvB,EAA6Bb,KAA7B,EAAoC;IACvC,OAAOY,mBAAmB,CAACC,IAAD,EAAO;MAC7BE,UAAU,EAAE,MAAMJ,GAAG,CAAC4D,KAAJ,CAAU1D,IAAV,EAAgBoE,SAAhB,EAA2BjF,KAA3B,CADW;MAE7BgB,YAAY,EAAE,MAAMH,IAAI,CAACoE,SAAD,CAAJ,CAAgBjF,KAAhB,CAFS;MAG7BiB,YAAY,EAAE,MAAMJ,IAAI,CAACF,GAAL,CAASsE,SAAT,EAAoBjF,KAApB;IAHS,CAAP,CAA1B;EAKH,CAND;AAOH,EAED;AACA;;;AACA,SAASmF,kBAAT,CAA4BxE,GAA5B,EAAiC;EAC7B,OAAO,SAASyE,MAAT,CAAgBvE,IAAhB,EAAsB;IACzB,IAAI,CAACA,IAAL,EAAW;MACP,OAAOF,GAAG,CAACyE,MAAJ,EAAP;IACH;;IACD,OAAOxE,mBAAmB,CAACC,IAAD,EAAO;MAC7BE,UAAU,EAAE,MAAMJ,GAAG,CAAC4D,KAAJ,CAAU1D,IAAV,EAAgBuE,MAAhB,EADW;MAE7BpE,YAAY,EAAE,MAAMH,IAAI,CAACuE,MAAL,EAFS;MAG7BnE,YAAY,EAAE,MAAMJ,IAAI,CAACF,GAAL,CAASyE,MAAT;IAHS,CAAP,CAA1B;EAKH,CATD;AAUH;;AAED,SAASC,mBAAT,CAA6BrB,KAA7B,EAAoCsB,UAApC,EAAgD;EAC5C,MAAMC,uBAAuB,GAAGD,UAAU,CAACE,UAAX,CAAsBC,cAAtD;EACA,MAAMC,SAAS,GAAGJ,UAAU,CAACE,UAAX,CAAsBG,MAAtB,CAA6BC,GAA7B,CAAiC,MAAM5B,KAAK,CAACrD,GAA7C,CAAlB;EACA,OAAO;IACHqD,KADG;IAEH6B,MAAM,EAAEb,yBAAyB,CAACU,SAAD,EAAY,QAAZ,CAF9B;IAGHnF,GAAG,EAAEyE,yBAAyB,CAACU,SAAD,EAAY,KAAZ,CAH3B;IAIH9C,IAAI,EAAGiB,IAAD,IAAU6B,SAAS,CAAC9C,IAAV,CAAeiB,IAAf,CAJb;IAKHuB,MAAM,EAAED,kBAAkB,CAACO,SAAD,CALvB;;IAMH3B,eAAe,CAACvB,MAAD,EAAS;MACpB,OAAOuB,eAAe,CAACC,KAAD,EAAQxB,MAAR,EAAgB+C,uBAAhB,CAAf,CAAwDrD,IAAxD,CAA6DpD,kEAA7D,CAAP;IACH,CARE;;IASHmF,YAAY,CAACzB,MAAD,EAAS;MACjB,OAAOyB,YAAY,CAACD,KAAD,EAAQxB,MAAR,EAAgB+C,uBAAhB,CAAZ,CAAqDrD,IAArD,CAA0DpD,kEAA1D,CAAP;IACH,CAXE;;IAYHoF,UAAU,CAAC1B,MAAD,EAAS;MACf,OAAO0B,UAAU,CAACF,KAAD,EAAQxB,MAAR,EAAgB+C,uBAAhB,CAAV,CAAmDrD,IAAnD,CAAwDpD,kEAAxD,CAAP;IACH,CAdE;;IAeHgH,YAAY,CAACtD,MAAD,EAASuD,OAAT,EAAkB;MAC1B,MAAMC,gBAAgB,GAAGjC,eAAe,CAACC,KAAD,EAAQxB,MAAR,EAAgB+C,uBAAhB,CAAxC;MACA,OAAOS,gBAAgB,CAAC9D,IAAjB,CAAsB5D,mDAAG,CAACqG,OAAO,IAAIA,OAAO,CAACrG,GAAR,CAAY2H,CAAC,IAAI;QACzD,IAAIF,OAAO,IAAIA,OAAO,CAACG,OAAvB,EAAgC;UAC5B,OAAOC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,CAAC,CAAC9D,OAAF,CAAUkE,GAAV,EAAlB,CAAd,EAAkD;YACrD,CAACN,OAAO,CAACG,OAAT,GAAmBD,CAAC,CAAC7D;UADgC,CAAlD,CAAP;QAGH,CAJD,MAKK;UACD,OAAO6D,CAAC,CAAC9D,OAAF,CAAUkE,GAAV,EAAP;QACH;MACJ,CAT2C,CAAZ,CAAzB,EASFvH,kEATE,CAAP;IAUH;;EA3BE,CAAP;AA6BH;;AAED,SAASwH,2BAAT,CAAqCtC,KAArC,EAA4C1C,SAA5C,EAAuD;EACnD,OAAO,SAASyC,eAAT,GAA2B;IAC9B,OAAO5C,OAAO,CAAC6C,KAAD,EAAQ,OAAR,EAAiB,IAAjB,EAAuB1C,SAAvB,CAAd;EACH,CAFD;AAGH;;AAED,SAASiF,qBAAT,CAA+BvC,KAA/B,EAAsCsB,UAAtC,EAAkD;EAC9C,OAAO;IACHtB,KADG;;IAEHD,eAAe,GAAG;MACd,OAAOuC,2BAA2B,CAACtC,KAAD,EAAQsB,UAAU,CAACE,UAAX,CAAsBC,cAA9B,CAA3B,GAA2EvD,IAA3E,CAAgFpD,kEAAhF,CAAP;IACH,CAJE;;IAKH+G,MAAM,CAAChC,IAAD,EAAO;MAAE,OAAOG,KAAK,CAACrD,GAAN,CAAUkF,MAAV,CAAiBhC,IAAjB,CAAP;IAAgC,CAL5C;;IAMHtD,GAAG,CAACsD,IAAD,EAAO;MAAE,OAAOG,KAAK,CAACrD,GAAN,CAAUJ,GAAV,CAAcsD,IAAd,CAAP;IAA6B,CANtC;;IAOHuB,MAAM,GAAG;MAAE,OAAOpB,KAAK,CAACrD,GAAN,CAAUyE,MAAV,EAAP;IAA4B,CAPpC;;IAQHU,YAAY,GAAG;MACX,MAAME,gBAAgB,GAAGM,2BAA2B,CAACtC,KAAD,EAAQsB,UAAU,CAACE,UAAX,CAAsBC,cAA9B,CAA3B,EAAzB;MACA,OAAOO,gBAAgB,CAAC9D,IAAjB,CAAsBpD,kEAAtB,EAA8CR,mDAAG,CAAC+E,MAAM,IAAIA,MAAM,CAAClB,OAAP,CAAeE,MAAf,KAA0BgB,MAAM,CAAClB,OAAP,CAAekE,GAAf,EAA1B,GAAiD,IAA5D,CAAjD,CAAP;IACH;;EAXE,CAAP;AAaH;;AAED,MAAMG,GAAG,GAAG,IAAI5I,0DAAJ,CAAmB,kCAAnB,CAAZ;AACA,MAAM0B,YAAY,GAAG,IAAI1B,0DAAJ,CAAmB,oCAAnB,CAArB;;AACA,MAAM6I,mBAAN,CAA0B;EACtBC,WAAW,CAACX,OAAD,EAAUY,IAAV,EAAgBC,WAAhB,EACX;EACAC,UAFW,EAECC,IAFD,EAEOtB,UAFP,EAEmBuB,YAFnB,EAEiC;EAC5CC,IAHW,EAGLC,eAHK,EAGYC,YAHZ,EAG0B;EACrCC,QAJW,EAIDC,YAJC,EAIaC,iBAJb,EAIgCC,WAJhC,EAI6CC,kBAJ7C,EAIiE;IACxE,KAAK/B,UAAL,GAAkBA,UAAlB;IACA,MAAMgC,WAAW,GAAGT,YAApB;IACA,MAAMU,GAAG,GAAGzI,6EAAmB,CAAC+G,OAAD,EAAUe,IAAV,EAAgBH,IAAhB,CAA/B;;IACA,IAAIK,IAAJ,EAAU;MACN3H,2EAAY,CAACoI,GAAD,EAAMX,IAAN,EAAYG,eAAZ,EAA6BE,QAA7B,EAAuCC,YAAvC,EAAqDC,iBAArD,EAAwEH,YAAxE,EAAsFI,WAAtF,CAAZ;IACH;;IACD,KAAK7G,QAAL,GAAgBxB,wEAAc,CAAE,GAAEwI,GAAG,CAACd,IAAK,aAAYC,WAAY,EAArC,EAAwC,qBAAxC,EAA+Da,GAAG,CAACd,IAAnE,EAAyE,MAAM;MACzG,MAAMlG,QAAQ,GAAGqG,IAAI,CAACY,iBAAL,CAAuB,MAAMD,GAAG,CAAChH,QAAJ,CAAamG,WAAW,IAAIvG,SAA5B,CAA7B,CAAjB;;MACA,IAAImH,WAAJ,EAAiB;QACb/G,QAAQ,CAAC+G,WAAT,CAAqB,GAAGA,WAAxB;MACH;;MACD,OAAO/G,QAAP;IACH,CAN6B,EAM3B,CAAC+G,WAAD,CAN2B,CAA9B;EAOH;;EACDG,IAAI,CAACC,SAAD,EAAYC,OAAZ,EAAqB;IACrB,MAAMlH,GAAG,GAAG,KAAK6E,UAAL,CAAgBG,MAAhB,CAAuB+B,iBAAvB,CAAyC,MAAMlH,MAAM,CAAC,KAAKC,QAAN,EAAgBmH,SAAhB,CAArD,CAAZ;IACA,IAAI5D,KAAK,GAAGrD,GAAZ;;IACA,IAAIkH,OAAJ,EAAa;MACT7D,KAAK,GAAG6D,OAAO,CAAClH,GAAD,CAAf;IACH;;IACD,OAAO0E,mBAAmB,CAACrB,KAAD,EAAQ,IAAR,CAA1B;EACH;;EACD8D,MAAM,CAACF,SAAD,EAAY;IACd,MAAMjH,GAAG,GAAG,KAAK6E,UAAL,CAAgBG,MAAhB,CAAuB+B,iBAAvB,CAAyC,MAAMlH,MAAM,CAAC,KAAKC,QAAN,EAAgBmH,SAAhB,CAArD,CAAZ;IACA,OAAOrB,qBAAqB,CAAC5F,GAAD,EAAM,IAAN,CAA5B;EACH;;EACDoH,YAAY,GAAG;IACX,MAAMpH,GAAG,GAAG,KAAK6E,UAAL,CAAgBG,MAAhB,CAAuB+B,iBAAvB,CAAyC,MAAM,KAAKjH,QAAL,CAAcE,GAAd,EAA/C,CAAZ;IACA,OAAOA,GAAG,CAACiC,IAAJ,GAAWR,GAAlB;EACH;;AAnCqB;;AAqC1BqE,mBAAmB,CAACuB,IAApB;EAAA,iBAAgHvB,mBAAhH,EAAsG9I,uDAAtG,CAAqJuB,mEAArJ,GAAsGvB,uDAAtG,CAAkLwB,oEAAlL,MAAsGxB,uDAAtG,CAAgO6I,GAAhO,MAAsG7I,uDAAtG,CAAgQE,uDAAhQ,GAAsGF,uDAAtG,CAAwRA,kDAAxR,GAAsGA,uDAAtG,CAA8SkB,qEAA9S,GAAsGlB,uDAAtG,CAAoV2B,YAApV,MAAsG3B,uDAAtG,CAA6XyB,uEAA7X,MAAsGzB,uDAAtG,CAA4a4B,oEAA5a,MAAsG5B,uDAAtG,CAAud6B,gEAAvd,MAAsG7B,uDAAtG,CAA4f8B,iEAA5f,MAAsG9B,uDAAtG,CAAkiB+B,qEAAliB,MAAsG/B,uDAAtG,CAA4kBgC,2EAA5kB,MAAsGhC,uDAAtG,CAA4nBiC,mEAA5nB,MAAsGjC,uDAAtG,CAAoqBkC,uEAApqB;AAAA;;AACA4G,mBAAmB,CAAC4B,KAApB,kBADsG1K,iEACtG;EAAA,OAAoH8I,mBAApH;EAAA,SAAoHA,mBAApH;EAAA,YAAqJ;AAArJ;;AACA;EAAA,mDAFsG9I,gEAEtG,CAA2F8I,mBAA3F,EAA4H,CAAC;IACjHnE,IAAI,EAAExE,sDAD2G;IAEjHwK,IAAI,EAAE,CAAC;MACCC,UAAU,EAAE;IADb,CAAD;EAF2G,CAAD,CAA5H,EAK4B,YAAY;IAAE,OAAO,CAAC;MAAEjG,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAC9DlG,IAAI,EAAEvE,kDADwD;QAE9DuK,IAAI,EAAE,CAACpJ,mEAAD;MAFwD,CAAD;IAA/B,CAAD,EAG3B;MAAEoD,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAClClG,IAAI,EAAEtE,oDAAQA;MADoB,CAAD,EAElC;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAACnJ,oEAAD;MAFP,CAFkC;IAA/B,CAH2B,EAQ3B;MAAEmD,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAClClG,IAAI,EAAEtE,oDAAQA;MADoB,CAAD,EAElC;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAAC9B,GAAD;MAFP,CAFkC;IAA/B,CAR2B,EAa3B;MAAElE,IAAI,EAAE6D,MAAR;MAAgBqC,UAAU,EAAE,CAAC;QAC/BlG,IAAI,EAAEvE,kDADyB;QAE/BuK,IAAI,EAAE,CAACzK,uDAAD;MAFyB,CAAD;IAA5B,CAb2B,EAgB3B;MAAEyE,IAAI,EAAE3E,kDAASsK;IAAjB,CAhB2B,EAgBN;MAAE3F,IAAI,EAAEzD,qEAAyBqJ;IAAjC,CAhBM,EAgB+B;MAAE5F,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAC5FlG,IAAI,EAAEtE,oDAAQA;MAD8E,CAAD,EAE5F;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAAChJ,YAAD;MAFP,CAF4F;IAA/B,CAhB/B,EAqB3B;MAAEgD,IAAI,EAAElD,uEAAR;MAA4BoJ,UAAU,EAAE,CAAC;QAC3ClG,IAAI,EAAEtE,oDAAQA;MAD6B,CAAD;IAAxC,CArB2B,EAuB3B;MAAEsE,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAClClG,IAAI,EAAEtE,oDAAQA;MADoB,CAAD,EAElC;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAAC/I,oEAAD;MAFP,CAFkC;IAA/B,CAvB2B,EA4B3B;MAAE+C,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAClClG,IAAI,EAAEtE,oDAAQA;MADoB,CAAD,EAElC;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAAC9I,gEAAD;MAFP,CAFkC;IAA/B,CA5B2B,EAiC3B;MAAE8C,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAClClG,IAAI,EAAEtE,oDAAQA;MADoB,CAAD,EAElC;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAAC7I,iEAAD;MAFP,CAFkC;IAA/B,CAjC2B,EAsC3B;MAAE6C,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAClClG,IAAI,EAAEtE,oDAAQA;MADoB,CAAD,EAElC;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAAC5I,qEAAD;MAFP,CAFkC;IAA/B,CAtC2B,EA2C3B;MAAE4C,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAClClG,IAAI,EAAEtE,oDAAQA;MADoB,CAAD,EAElC;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAAC3I,2EAAD;MAFP,CAFkC;IAA/B,CA3C2B,EAgD3B;MAAE2C,IAAI,EAAEjC,SAAR;MAAmBmI,UAAU,EAAE,CAAC;QAClClG,IAAI,EAAEtE,oDAAQA;MADoB,CAAD,EAElC;QACCsE,IAAI,EAAEvE,kDADP;QAECuK,IAAI,EAAE,CAAC1I,mEAAD;MAFP,CAFkC;IAA/B,CAhD2B,EAqD3B;MAAE0C,IAAI,EAAEzC,uEAAR;MAA8B2I,UAAU,EAAE,CAAC;QAC7ClG,IAAI,EAAEtE,oDAAQA;MAD+B,CAAD;IAA1C,CArD2B,CAAP;EAuDlB,CA5DxB;AAAA;;AA8DA,MAAMyK,yBAAN,CAAgC;EAC5B/B,WAAW,GAAG;IACV5G,2EAAA,CAAyB,aAAzB,EAAwCf,wDAAxC,EAAsD,aAAtD;EACH;;AAH2B;;AAKhC0J,yBAAyB,CAACT,IAA1B;EAAA,iBAAsHS,yBAAtH;AAAA;;AACAA,yBAAyB,CAACG,IAA1B,kBAtEsGjL,+DAsEtG;EAAA,MAAuH8K;AAAvH;AACAA,yBAAyB,CAACI,IAA1B,kBAvEsGlL,+DAuEtG;EAAA,WAA6J,CAAC8I,mBAAD;AAA7J;;AACA;EAAA,mDAxEsG9I,gEAwEtG,CAA2F8K,yBAA3F,EAAkI,CAAC;IACvHnG,IAAI,EAAErE,oDADiH;IAEvHqK,IAAI,EAAE,CAAC;MACCQ,SAAS,EAAE,CAACrC,mBAAD;IADZ,CAAD;EAFiH,CAAD,CAAlI,EAK4B,YAAY;IAAE,OAAO,EAAP;EAAY,CALtD;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACvbA;AACA;AACA;AACA;AACA;AAEA,MAAME,IAAI,GAAG,2BAAb;AACA,MAAMmF,OAAO,GAAG,OAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,IAAIF,oDAAJ,CAAW,2BAAX,CAAlB;;AACA,MAAMG,IAAI,GAAG,UAAUC,GAAV,EAAe;EACxB,MAAMC,OAAO,GAAG,uBAAuBD,GAAvC;EACAF,SAAS,CAACC,IAAV,CAAeE,OAAf;AACH,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAG,UAAUC,MAAV,EAAkBC,YAAlB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgD;EACpE,IAAIA,QAAQ,IAAID,IAAI,KAAKjM,SAAzB,EAAoC;IAChC;EACH;;EACD,IAAI,OAAOiM,IAAP,KAAgB,SAApB,EAA+B;IAC3B,MAAM,IAAIpL,KAAJ,CAAUsK,2DAAW,CAACY,MAAD,EAASC,YAAT,CAAX,GAAoC,oBAA9C,CAAN;EACH;AACJ,CAPD;;AAQA,MAAMG,iBAAiB,GAAG,UAAUJ,MAAV,EAAkBK,SAAlB,EAA6BF,QAA7B,EAAuC;EAC7D,IAAIA,QAAQ,IAAIE,SAAS,KAAKpM,SAA9B,EAAyC;IACrC;EACH;;EACD,QAAQoM,SAAR;IACI,KAAK,OAAL;IACA,KAAK,aAAL;IACA,KAAK,eAAL;IACA,KAAK,eAAL;IACA,KAAK,aAAL;MACI;;IACJ;MACI,MAAM,IAAIvL,KAAJ,CAAUsK,2DAAW,CAACY,MAAD,EAAS,WAAT,CAAX,GACZ,wEADY,GAEZ,oCAFE,CAAN;EARR;AAYH,CAhBD;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMzB,YAAN,CAAmB;EACfjE,WAAW,CAACgG,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;EACDC,MAAM,CAACC,UAAD,EAAa;IACfnB,gEAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BoB,SAAS,CAAC5J,MAAxC,CAAhB;IACAyI,gEAAgB,CAAC,qBAAD,EAAwB,YAAxB,EAAsCkB,UAAtC,EAAkD,IAAlD,CAAhB;;IACA,MAAME,MAAM,GAAG,KAAKJ,SAAL,CAAeC,MAAf,EAAf;;IACA,IAAIC,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACD1H,MAAM,CAACwH,UAAD,EAAa;IACfnB,gEAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BoB,SAAS,CAAC5J,MAAxC,CAAhB;IACAyI,gEAAgB,CAAC,qBAAD,EAAwB,YAAxB,EAAsCkB,UAAtC,EAAkD,IAAlD,CAAhB;;IACA,MAAME,MAAM,GAAG,KAAKJ,SAAL,CAAetH,MAAf,EAAf;;IACA,IAAIwH,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACDvM,GAAG,CAACP,KAAD,EAAQ4M,UAAR,EAAoB;IACnBnB,gEAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BoB,SAAS,CAAC5J,MAArC,CAAhB;IACAyI,gEAAgB,CAAC,kBAAD,EAAqB,YAArB,EAAmCkB,UAAnC,EAA+C,IAA/C,CAAhB;;IACA,MAAME,MAAM,GAAG,KAAKJ,SAAL,CAAenM,GAAf,CAAmBP,KAAnB,CAAf;;IACA,IAAI4M,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACDtC,eAAe,CAACxK,KAAD,EAAQgN,QAAR,EAAkBJ,UAAlB,EAA8B;IACzCnB,gEAAgB,CAAC,8BAAD,EAAiC,CAAjC,EAAoC,CAApC,EAAuCoB,SAAS,CAAC5J,MAAjD,CAAhB;IACAyI,gEAAgB,CAAC,8BAAD,EAAiC,YAAjC,EAA+CkB,UAA/C,EAA2D,IAA3D,CAAhB;;IACA,MAAME,MAAM,GAAG,KAAKJ,SAAL,CAAelC,eAAf,CAA+BxK,KAA/B,EAAsCgN,QAAtC,CAAf;;IACA,IAAIJ,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACDjH,MAAM,CAACoH,aAAD,EAAgBL,UAAhB,EAA4B;IAC9BnB,gEAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BoB,SAAS,CAAC5J,MAAxC,CAAhB;;IACA,IAAIiK,KAAK,CAACC,OAAN,CAAcF,aAAd,CAAJ,EAAkC;MAC9B,MAAMG,gBAAgB,GAAG,EAAzB;;MACA,KAAK,IAAIlK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+J,aAAa,CAAChK,MAAlC,EAA0C,EAAEC,CAA5C,EAA+C;QAC3CkK,gBAAgB,CAAC,KAAKlK,CAAN,CAAhB,GAA2B+J,aAAa,CAAC/J,CAAD,CAAxC;MACH;;MACD+J,aAAa,GAAGG,gBAAhB;MACApB,IAAI,CAAC,yHACD,0GADA,CAAJ;IAEH;;IACDN,gEAAgB,CAAC,qBAAD,EAAwB,YAAxB,EAAsCkB,UAAtC,EAAkD,IAAlD,CAAhB;;IACA,MAAME,MAAM,GAAG,KAAKJ,SAAL,CAAe7G,MAAf,CAAsBoH,aAAtB,CAAf;;IACA,IAAIL,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;AAzDc;AA4DnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMO,iBAAN,CAAwB;EACpB;AACJ;AACA;EACI3G,WAAW,CAAC4G,SAAD,EAAY7L,QAAZ,EAAsB;IAC7B,KAAK6L,SAAL,GAAiBA,SAAjB;IACA,KAAK7L,QAAL,GAAgBA,QAAhB;EACH,CAPmB,CAQpB;EACA;;;EACA8L,MAAM,GAAG;IACL9B,gEAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCoB,SAAS,CAAC5J,MAA7C,CAAhB;IACA,OAAO;MAAEqK,SAAS,EAAE,KAAKA,SAAlB;MAA6B7L,QAAQ,EAAE,KAAKA,QAAL,CAAc8L,MAAd;IAAvC,CAAP;EACH;;AAbmB;AAgBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMC,YAAN,CAAmB;EACf9G,WAAW,CAAC+G,SAAD,EAAYf,SAAZ,EAAuB;IAC9B,KAAKe,SAAL,GAAiBA,SAAjB;IACA,KAAKf,SAAL,GAAiBA,SAAjB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIrG,GAAG,GAAG;IACFoF,gEAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BoB,SAAS,CAAC5J,MAArC,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAerG,GAAf,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACInG,SAAS,GAAG;IACRuL,gEAAgB,CAAC,wBAAD,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCoB,SAAS,CAAC5J,MAA3C,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAexM,SAAf,EAAP;EACH,CAvBc,CAwBf;EACA;;;EACAqN,MAAM,GAAG;IACL;IACA9B,gEAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BoB,SAAS,CAAC5J,MAAxC,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAea,MAAf,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIlL,MAAM,GAAG;IACLoJ,gEAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BoB,SAAS,CAAC5J,MAAxC,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAerK,MAAf,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIkC,KAAK,CAACmJ,IAAD,EAAO;IACRjC,gEAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BoB,SAAS,CAAC5J,MAAvC,CAAhB,CADQ,CAER;;IACAyK,IAAI,GAAGC,MAAM,CAACD,IAAD,CAAb;;IACAxE,uEAAmB,CAAC,oBAAD,EAAuB,MAAvB,EAA+BwE,IAA/B,EAAqC,KAArC,CAAnB;;IACA,OAAO,IAAIF,YAAJ,CAAiB,KAAKC,SAAtB,EAAiC,KAAKf,SAAL,CAAenI,KAAf,CAAqBmJ,IAArB,CAAjC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIE,QAAQ,CAACF,IAAD,EAAO;IACXjC,gEAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCoB,SAAS,CAAC5J,MAA1C,CAAhB;;IACAiG,uEAAmB,CAAC,uBAAD,EAA0B,MAA1B,EAAkCwE,IAAlC,EAAwC,KAAxC,CAAnB;;IACA,OAAO,KAAKhB,SAAL,CAAekB,QAAf,CAAwBF,IAAxB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIG,WAAW,GAAG;IACVpC,gEAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCoB,SAAS,CAAC5J,MAA7C,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAeM,QAAtB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIrK,OAAO,CAACU,MAAD,EAAS;IACZoI,gEAAgB,CAAC,sBAAD,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BoB,SAAS,CAAC5J,MAAzC,CAAhB;IACAyI,gEAAgB,CAAC,sBAAD,EAAyB,QAAzB,EAAmCrI,MAAnC,EAA2C,KAA3C,CAAhB;IACA,OAAO,KAAKqJ,SAAL,CAAe/J,OAAf,CAAuBmL,eAAe,IAAIzK,MAAM,CAAC,IAAImK,YAAJ,CAAiB,KAAKC,SAAtB,EAAiCK,eAAjC,CAAD,CAAhD,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIC,WAAW,GAAG;IACVtC,gEAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCoB,SAAS,CAAC5J,MAA7C,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAeqB,WAAf,EAAP;EACH;;EACM,IAAH3L,GAAG,GAAG;IACN,OAAO,KAAKsK,SAAL,CAAetK,GAAtB;EACH;EACD;AACJ;AACA;AACA;;;EACI4L,WAAW,GAAG;IACVvC,gEAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCoB,SAAS,CAAC5J,MAA7C,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAeuB,IAAtB;EACH;EACD;AACJ;AACA;AACA;;;EACIzN,MAAM,GAAG;IACLiL,gEAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BoB,SAAS,CAAC5J,MAArC,CAAhB;IACA,OAAO,IAAIiL,SAAJ,CAAc,KAAKT,SAAnB,EAA8B,KAAKf,SAAL,CAAe/L,GAA7C,CAAP;EACH;;EACM,IAAHA,GAAG,GAAG;IACN,OAAO,KAAKH,MAAL,EAAP;EACH;;AAnHc;AAqHnB;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM2N,KAAN,CAAY;EACRzH,WAAW,CAACjG,QAAD,EAAWiM,SAAX,EAAsB;IAC7B,KAAKjM,QAAL,GAAgBA,QAAhB;IACA,KAAKiM,SAAL,GAAiBA,SAAjB;EACH;;EACD0B,EAAE,CAAC3B,SAAD,EAAY4B,QAAZ,EAAsBC,uBAAtB,EAA+CC,OAA/C,EAAwD;IACtD,IAAIC,EAAJ;;IACA/C,gEAAgB,CAAC,UAAD,EAAa,CAAb,EAAgB,CAAhB,EAAmBoB,SAAS,CAAC5J,MAA7B,CAAhB;IACAyI,gEAAgB,CAAC,UAAD,EAAa,UAAb,EAAyB2C,QAAzB,EAAmC,KAAnC,CAAhB;IACA,MAAMI,GAAG,GAAGN,KAAK,CAACO,wBAAN,CAA+B,UAA/B,EAA2CJ,uBAA3C,EAAoEC,OAApE,CAAZ;;IACA,MAAMI,aAAa,GAAG,CAACC,WAAD,EAAcC,iBAAd,KAAoC;MACtDR,QAAQ,CAACS,IAAT,CAAcL,GAAG,CAACF,OAAlB,EAA2B,IAAIf,YAAJ,CAAiB,KAAK/M,QAAtB,EAAgCmO,WAAhC,CAA3B,EAAyEC,iBAAzE;IACH,CAFD;;IAGAF,aAAa,CAACI,YAAd,GAA6BV,QAA7B;IACAM,aAAa,CAACJ,OAAd,GAAwBE,GAAG,CAACF,OAA5B;IACA,MAAMS,cAAc,GAAG,CAACR,EAAE,GAAGC,GAAG,CAAC9B,MAAV,MAAsB,IAAtB,IAA8B6B,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACS,IAAH,CAAQR,GAAG,CAACF,OAAZ,CAA9E;;IACA,QAAQ9B,SAAR;MACI,KAAK,OAAL;QACIlD,2DAAO,CAAC,KAAKmD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,CAAP;QACA,OAAOX,QAAP;;MACJ,KAAK,aAAL;QACI/E,gEAAY,CAAC,KAAKoD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,CAAZ;QACA,OAAOX,QAAP;;MACJ,KAAK,eAAL;QACIhF,kEAAc,CAAC,KAAKqD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,CAAd;QACA,OAAOX,QAAP;;MACJ,KAAK,eAAL;QACIjF,kEAAc,CAAC,KAAKsD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,CAAd;QACA,OAAOX,QAAP;;MACJ,KAAK,aAAL;QACIlF,gEAAY,CAAC,KAAKuD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,CAAZ;QACA,OAAOX,QAAP;;MACJ;QACI,MAAM,IAAInN,KAAJ,CAAUsK,2DAAW,CAAC,UAAD,EAAa,WAAb,CAAX,GACZ,wEADY,GAEZ,oCAFE,CAAN;IAjBR;EAqBH;;EACDvJ,GAAG,CAACwK,SAAD,EAAY4B,QAAZ,EAAsBE,OAAtB,EAA+B;IAC9B9C,gEAAgB,CAAC,WAAD,EAAc,CAAd,EAAiB,CAAjB,EAAoBoB,SAAS,CAAC5J,MAA9B,CAAhB;IACAuJ,iBAAiB,CAAC,WAAD,EAAcC,SAAd,EAAyB,IAAzB,CAAjB;IACAf,gEAAgB,CAAC,WAAD,EAAc,UAAd,EAA0B2C,QAA1B,EAAoC,IAApC,CAAhB;IACA1C,qEAAqB,CAAC,WAAD,EAAc,SAAd,EAAyB4C,OAAzB,EAAkC,IAAlC,CAArB;;IACA,IAAIF,QAAJ,EAAc;MACV,MAAMM,aAAa,GAAG,MAAM,CAAG,CAA/B;;MACAA,aAAa,CAACI,YAAd,GAA6BV,QAA7B;MACAM,aAAa,CAACJ,OAAd,GAAwBA,OAAxB;MACAtM,uDAAG,CAAC,KAAKyK,SAAN,EAAiBD,SAAjB,EAA4BkC,aAA5B,CAAH;IACH,CALD,MAMK;MACD1M,uDAAG,CAAC,KAAKyK,SAAN,EAAiBD,SAAjB,CAAH;IACH;EACJ;EACD;AACJ;AACA;;;EACIjD,GAAG,GAAG;IACF,OAAOA,uDAAG,CAAC,KAAKkD,SAAN,CAAH,CAAoBK,IAApB,CAAyB6B,WAAW,IAAI;MAC3C,OAAO,IAAIpB,YAAJ,CAAiB,KAAK/M,QAAtB,EAAgCmO,WAAhC,CAAP;IACH,CAFM,CAAP;EAGH;EACD;AACJ;AACA;;;EACIM,IAAI,CAACzC,SAAD,EAAY4B,QAAZ,EAAsBc,wBAAtB,EAAgDZ,OAAhD,EAAyD;IACzD9C,gEAAgB,CAAC,YAAD,EAAe,CAAf,EAAkB,CAAlB,EAAqBoB,SAAS,CAAC5J,MAA/B,CAAhB;IACAyI,gEAAgB,CAAC,YAAD,EAAe,UAAf,EAA2B2C,QAA3B,EAAqC,IAArC,CAAhB;IACA,MAAMI,GAAG,GAAGN,KAAK,CAACO,wBAAN,CAA+B,YAA/B,EAA6CS,wBAA7C,EAAuEZ,OAAvE,CAAZ;IACA,MAAMa,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;;IACA,MAAM+C,aAAa,GAAG,CAACC,WAAD,EAAcC,iBAAd,KAAoC;MACtD,MAAM/B,MAAM,GAAG,IAAIU,YAAJ,CAAiB,KAAK/M,QAAtB,EAAgCmO,WAAhC,CAAf;;MACA,IAAIP,QAAJ,EAAc;QACVA,QAAQ,CAACS,IAAT,CAAcL,GAAG,CAACF,OAAlB,EAA2BzB,MAA3B,EAAmC+B,iBAAnC;MACH;;MACDO,QAAQ,CAACC,OAAT,CAAiBvC,MAAjB;IACH,CAND;;IAOA6B,aAAa,CAACI,YAAd,GAA6BV,QAA7B;IACAM,aAAa,CAACJ,OAAd,GAAwBE,GAAG,CAACF,OAA5B;;IACA,MAAMS,cAAc,GAAIjN,KAAD,IAAW;MAC9B,IAAI0M,GAAG,CAAC9B,MAAR,EAAgB;QACZ8B,GAAG,CAAC9B,MAAJ,CAAWmC,IAAX,CAAgBL,GAAG,CAACF,OAApB,EAA6BxM,KAA7B;MACH;;MACDqN,QAAQ,CAACE,MAAT,CAAgBvN,KAAhB;IACH,CALD;;IAMA,QAAQ0K,SAAR;MACI,KAAK,OAAL;QACIlD,2DAAO,CAAC,KAAKmD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,EAAgD;UACnDO,QAAQ,EAAE;QADyC,CAAhD,CAAP;QAGA;;MACJ,KAAK,aAAL;QACIjG,gEAAY,CAAC,KAAKoD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,EAAgD;UACxDO,QAAQ,EAAE;QAD8C,CAAhD,CAAZ;QAGA;;MACJ,KAAK,eAAL;QACIlG,kEAAc,CAAC,KAAKqD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,EAAgD;UAC1DO,QAAQ,EAAE;QADgD,CAAhD,CAAd;QAGA;;MACJ,KAAK,eAAL;QACInG,kEAAc,CAAC,KAAKsD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,EAAgD;UAC1DO,QAAQ,EAAE;QADgD,CAAhD,CAAd;QAGA;;MACJ,KAAK,aAAL;QACIpG,gEAAY,CAAC,KAAKuD,SAAN,EAAiBiC,aAAjB,EAAgCK,cAAhC,EAAgD;UACxDO,QAAQ,EAAE;QAD8C,CAAhD,CAAZ;QAGA;;MACJ;QACI,MAAM,IAAIrO,KAAJ,CAAUsK,2DAAW,CAAC,YAAD,EAAe,WAAf,CAAX,GACZ,wEADY,GAEZ,oCAFE,CAAN;IA3BR;;IA+BA,OAAO4D,QAAQ,CAACI,OAAhB;EACH;EACD;AACJ;AACA;;;EACI/F,YAAY,CAACgG,KAAD,EAAQ;IAChBhE,gEAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BoB,SAAS,CAAC5J,MAAvC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiBjD,gEAAY,CAACgG,KAAD,CAA7B,CAA9B,CAAP;EACH;EACD;AACJ;AACA;;;EACI/F,WAAW,CAAC+F,KAAD,EAAQ;IACfhE,gEAAgB,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,CAAzB,EAA4BoB,SAAS,CAAC5J,MAAtC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiBhD,+DAAW,CAAC+F,KAAD,CAA5B,CAA9B,CAAP;EACH;EACD;AACJ;AACA;;;EACI9F,YAAY,CAAC+D,IAAD,EAAO;IACfjC,gEAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BoB,SAAS,CAAC5J,MAAvC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiB/C,gEAAY,CAAC+D,IAAD,CAA7B,CAA9B,CAAP;EACH;EACD;AACJ;AACA;;;EACI9D,UAAU,GAAG;IACT6B,gEAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BoB,SAAS,CAAC5J,MAArC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiB9C,8DAAU,EAA3B,CAA9B,CAAP;EACH;EACD;AACJ;AACA;;;EACIC,eAAe,GAAG;IACd4B,gEAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCoB,SAAS,CAAC5J,MAA1C,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiB7C,mEAAe,EAAhC,CAA9B,CAAP;EACH;EACD;AACJ;AACA;;;EACIC,YAAY,GAAG;IACX2B,gEAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BoB,SAAS,CAAC5J,MAAvC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiB5C,gEAAY,EAA7B,CAA9B,CAAP;EACH;;EACDC,OAAO,CAAC/J,KAAK,GAAG,IAAT,EAAe2G,IAAf,EAAqB;IACxB8E,gEAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBoB,SAAS,CAAC5J,MAAlC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiB3C,2DAAO,CAAC/J,KAAD,EAAQ2G,IAAR,CAAxB,CAA9B,CAAP;EACH;;EACDqD,UAAU,CAAChK,KAAK,GAAG,IAAT,EAAe2G,IAAf,EAAqB;IAC3B8E,gEAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BoB,SAAS,CAAC5J,MAArC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiB1C,8DAAU,CAAChK,KAAD,EAAQ2G,IAAR,CAA3B,CAA9B,CAAP;EACH;;EACDsD,KAAK,CAACjK,KAAK,GAAG,IAAT,EAAe2G,IAAf,EAAqB;IACtB8E,gEAAgB,CAAC,aAAD,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBoB,SAAS,CAAC5J,MAAhC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiBzC,yDAAK,CAACjK,KAAD,EAAQ2G,IAAR,CAAtB,CAA9B,CAAP;EACH;;EACDuD,SAAS,CAAClK,KAAK,GAAG,IAAT,EAAe2G,IAAf,EAAqB;IAC1B8E,gEAAgB,CAAC,iBAAD,EAAoB,CAApB,EAAuB,CAAvB,EAA0BoB,SAAS,CAAC5J,MAApC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiBxC,6DAAS,CAAClK,KAAD,EAAQ2G,IAAR,CAA1B,CAA9B,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIwD,OAAO,CAACnK,KAAD,EAAQ2G,IAAR,EAAc;IACjB8E,gEAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBoB,SAAS,CAAC5J,MAAlC,CAAhB;IACA,OAAO,IAAIkL,KAAJ,CAAU,KAAK1N,QAAf,EAAyBuD,yDAAK,CAAC,KAAK0I,SAAN,EAAiBvC,2DAAO,CAACnK,KAAD,EAAQ2G,IAAR,CAAxB,CAA9B,CAAP;EACH;EACD;AACJ;AACA;;;EACI+I,QAAQ,GAAG;IACPjE,gEAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBoB,SAAS,CAAC5J,MAAnC,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAegD,QAAf,EAAP;EACH,CA7LO,CA8LR;EACA;;;EACAnC,MAAM,GAAG;IACL;IACA9B,gEAAgB,CAAC,cAAD,EAAiB,CAAjB,EAAoB,CAApB,EAAuBoB,SAAS,CAAC5J,MAAjC,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAea,MAAf,EAAP;EACH;EACD;AACJ;AACA;;;EACIoC,OAAO,CAACC,KAAD,EAAQ;IACXnE,gEAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBoB,SAAS,CAAC5J,MAAlC,CAAhB;;IACA,IAAI,EAAE2M,KAAK,YAAYzB,KAAnB,CAAJ,EAA+B;MAC3B,MAAMpM,KAAK,GAAG,sFAAd;MACA,MAAM,IAAIb,KAAJ,CAAUa,KAAV,CAAN;IACH;;IACD,OAAO,KAAK2K,SAAL,CAAeiD,OAAf,CAAuBC,KAAK,CAAClD,SAA7B,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACmC,OAAxBgC,wBAAwB,CAACtC,MAAD,EAASyD,eAAT,EAA0BtB,OAA1B,EAAmC;IAC9D,MAAME,GAAG,GAAG;MAAE9B,MAAM,EAAEtM,SAAV;MAAqBkO,OAAO,EAAElO;IAA9B,CAAZ;;IACA,IAAIwP,eAAe,IAAItB,OAAvB,EAAgC;MAC5BE,GAAG,CAAC9B,MAAJ,GAAakD,eAAb;MACAnE,gEAAgB,CAACU,MAAD,EAAS,QAAT,EAAmBqC,GAAG,CAAC9B,MAAvB,EAA+B,IAA/B,CAAhB;MACA8B,GAAG,CAACF,OAAJ,GAAcA,OAAd;MACA5C,qEAAqB,CAACS,MAAD,EAAS,SAAT,EAAoBqC,GAAG,CAACF,OAAxB,EAAiC,IAAjC,CAArB;IACH,CALD,MAMK,IAAIsB,eAAJ,EAAqB;MACtB;MACA,IAAI,OAAOA,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,KAAK,IAA/D,EAAqE;QACjE;QACApB,GAAG,CAACF,OAAJ,GAAcsB,eAAd;MACH,CAHD,MAIK,IAAI,OAAOA,eAAP,KAA2B,UAA/B,EAA2C;QAC5CpB,GAAG,CAAC9B,MAAJ,GAAakD,eAAb;MACH,CAFI,MAGA;QACD,MAAM,IAAI3O,KAAJ,CAAUsK,2DAAW,CAACY,MAAD,EAAS,iBAAT,CAAX,GACZ,wDADE,CAAN;MAEH;IACJ;;IACD,OAAOqC,GAAP;EACH;;EACM,IAAH9N,GAAG,GAAG;IACN,OAAO,IAAIuN,SAAJ,CAAc,KAAKzN,QAAnB,EAA6B,IAAI2J,8DAAJ,CAAmB,KAAKsC,SAAL,CAAeoD,KAAlC,EAAyC,KAAKpD,SAAL,CAAeqD,KAAxD,CAA7B,CAAP;EACH;;AA/OO;;AAiPZ,MAAM7B,SAAN,SAAwBC,KAAxB,CAA8B;EAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;EACIzH,WAAW,CAACjG,QAAD,EAAWiM,SAAX,EAAsB;IAC7B,MAAMjM,QAAN,EAAgB,IAAI4J,0DAAJ,CAAeqC,SAAS,CAACoD,KAAzB,EAAgCpD,SAAS,CAACqD,KAA1C,EAAiD,IAAIzF,4DAAJ,EAAjD,EAAqE,KAArE,CAAhB;IACA,KAAK7J,QAAL,GAAgBA,QAAhB;IACA,KAAKiM,SAAL,GAAiBA,SAAjB;EACH;EACD;;;EACAsD,MAAM,GAAG;IACLvE,gEAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBoB,SAAS,CAAC5J,MAAlC,CAAhB;IACA,OAAO,KAAKyJ,SAAL,CAAetK,GAAtB;EACH;;EACDmC,KAAK,CAAC0L,UAAD,EAAa;IACdxE,gEAAgB,CAAC,iBAAD,EAAoB,CAApB,EAAuB,CAAvB,EAA0BoB,SAAS,CAAC5J,MAApC,CAAhB;;IACA,IAAI,OAAOgN,UAAP,KAAsB,QAA1B,EAAoC;MAChCA,UAAU,GAAGtC,MAAM,CAACsC,UAAD,CAAnB;IACH;;IACD,OAAO,IAAI/B,SAAJ,CAAc,KAAKzN,QAAnB,EAA6B8D,yDAAK,CAAC,KAAKmI,SAAN,EAAiBuD,UAAjB,CAAlC,CAAP;EACH;EACD;;;EACAC,SAAS,GAAG;IACRzE,gEAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BoB,SAAS,CAAC5J,MAArC,CAAhB;IACA,MAAMkN,MAAM,GAAG,KAAKzD,SAAL,CAAeyD,MAA9B;IACA,OAAOA,MAAM,GAAG,IAAIjC,SAAJ,CAAc,KAAKzN,QAAnB,EAA6B0P,MAA7B,CAAH,GAA0C,IAAvD;EACH;EACD;;;EACAC,OAAO,GAAG;IACN3E,gEAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBoB,SAAS,CAAC5J,MAAnC,CAAhB;IACA,OAAO,IAAIiL,SAAJ,CAAc,KAAKzN,QAAnB,EAA6B,KAAKiM,SAAL,CAAe2D,IAA5C,CAAP;EACH;;EACD9P,GAAG,CAAC+P,MAAD,EAAS1D,UAAT,EAAqB;IACpBnB,gEAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBoB,SAAS,CAAC5J,MAAlC,CAAhB;IACAyI,gEAAgB,CAAC,eAAD,EAAkB,YAAlB,EAAgCkB,UAAhC,EAA4C,IAA5C,CAAhB;IACA,MAAME,MAAM,GAAGvM,uDAAG,CAAC,KAAKmM,SAAN,EAAiB4D,MAAjB,CAAlB;;IACA,IAAI1D,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACDjH,MAAM,CAAC0K,MAAD,EAAS3D,UAAT,EAAqB;IACvBnB,gEAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BoB,SAAS,CAAC5J,MAArC,CAAhB;;IACA,IAAIiK,KAAK,CAACC,OAAN,CAAcoD,MAAd,CAAJ,EAA2B;MACvB,MAAMnD,gBAAgB,GAAG,EAAzB;;MACA,KAAK,IAAIlK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqN,MAAM,CAACtN,MAA3B,EAAmC,EAAEC,CAArC,EAAwC;QACpCkK,gBAAgB,CAAC,KAAKlK,CAAN,CAAhB,GAA2BqN,MAAM,CAACrN,CAAD,CAAjC;MACH;;MACDqN,MAAM,GAAGnD,gBAAT;MACApB,IAAI,CAAC,0DACD,2DADC,GAED,uDAFC,GAGD,mCAHA,CAAJ;IAIH;;IACDzB,yEAAqB,CAAC,kBAAD,EAAqB,KAAKmC,SAAL,CAAeqD,KAApC,CAArB;;IACArE,gEAAgB,CAAC,kBAAD,EAAqB,YAArB,EAAmCkB,UAAnC,EAA+C,IAA/C,CAAhB;IACA,MAAME,MAAM,GAAGjH,0DAAM,CAAC,KAAK6G,SAAN,EAAiB6D,MAAjB,CAArB;;IACA,IAAI3D,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACDtC,eAAe,CAAC8F,MAAD,EAASE,WAAT,EAAsB5D,UAAtB,EAAkC;IAC7CnB,gEAAgB,CAAC,2BAAD,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCoB,SAAS,CAAC5J,MAA9C,CAAhB;IACAyI,gEAAgB,CAAC,2BAAD,EAA8B,YAA9B,EAA4CkB,UAA5C,EAAwD,IAAxD,CAAhB;IACA,MAAME,MAAM,GAAGtC,mEAAe,CAAC,KAAKkC,SAAN,EAAiB4D,MAAjB,EAAyBE,WAAzB,CAA9B;;IACA,IAAI5D,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACD1H,MAAM,CAACwH,UAAD,EAAa;IACfnB,gEAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BoB,SAAS,CAAC5J,MAArC,CAAhB;IACAyI,gEAAgB,CAAC,kBAAD,EAAqB,YAArB,EAAmCkB,UAAnC,EAA+C,IAA/C,CAAhB;IACA,MAAME,MAAM,GAAG1H,0DAAM,CAAC,KAAKsH,SAAN,CAArB;;IACA,IAAIE,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACD2D,WAAW,CAACC,iBAAD,EAAoB9D,UAApB,EAAgC+D,YAAhC,EAA8C;IACrDlF,gEAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCoB,SAAS,CAAC5J,MAA1C,CAAhB;IACAyI,gEAAgB,CAAC,uBAAD,EAA0B,mBAA1B,EAA+CgF,iBAA/C,EAAkE,KAAlE,CAAhB;IACAhF,gEAAgB,CAAC,uBAAD,EAA0B,YAA1B,EAAwCkB,UAAxC,EAAoD,IAApD,CAAhB;IACAT,eAAe,CAAC,uBAAD,EAA0B,cAA1B,EAA0CwE,YAA1C,EAAwD,IAAxD,CAAf;IACA,MAAM7D,MAAM,GAAGrC,kEAAc,CAAC,KAAKiC,SAAN,EAAiBgE,iBAAjB,EAAoC;MAC7DC;IAD6D,CAApC,CAAd,CAEZ5D,IAFY,CAEP6D,iBAAiB,IAAI,IAAIvD,iBAAJ,CAAsBuD,iBAAiB,CAACtD,SAAxC,EAAmD,IAAIE,YAAJ,CAAiB,KAAK/M,QAAtB,EAAgCmQ,iBAAiB,CAACnP,QAAlD,CAAnD,CAFd,CAAf;;IAGA,IAAImL,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY6D,iBAAiB,IAAIhE,UAAU,CAAC,IAAD,EAAOgE,iBAAiB,CAACtD,SAAzB,EAAoCsD,iBAAiB,CAACnP,QAAtD,CAA3C,EAA4GM,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,EAAQ,KAAR,EAAe,IAAf,CAA/H;IACH;;IACD,OAAO+K,MAAP;EACH;;EACDpC,WAAW,CAACsC,QAAD,EAAWJ,UAAX,EAAuB;IAC9BnB,gEAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCoB,SAAS,CAAC5J,MAA1C,CAAhB;IACAyI,gEAAgB,CAAC,uBAAD,EAA0B,YAA1B,EAAwCkB,UAAxC,EAAoD,IAApD,CAAhB;IACA,MAAME,MAAM,GAAGpC,+DAAW,CAAC,KAAKgC,SAAN,EAAiBM,QAAjB,CAA1B;;IACA,IAAIJ,UAAJ,EAAgB;MACZE,MAAM,CAACC,IAAP,CAAY,MAAMH,UAAU,CAAC,IAAD,CAA5B,EAAoC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAvD;IACH;;IACD,OAAO+K,MAAP;EACH;;EACDlK,IAAI,CAAC5C,KAAD,EAAQ4M,UAAR,EAAoB;IACpBnB,gEAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBoB,SAAS,CAAC5J,MAAnC,CAAhB;IACAyI,gEAAgB,CAAC,gBAAD,EAAmB,YAAnB,EAAiCkB,UAAjC,EAA6C,IAA7C,CAAhB;IACA,MAAMiE,UAAU,GAAGjO,wDAAI,CAAC,KAAK8J,SAAN,EAAiB1M,KAAjB,CAAvB;IACA,MAAMwP,OAAO,GAAGqB,UAAU,CAAC9D,IAAX,CAAgB+D,MAAM,IAAI,IAAI5C,SAAJ,CAAc,KAAKzN,QAAnB,EAA6BqQ,MAA7B,CAA1B,CAAhB;;IACA,IAAIlE,UAAJ,EAAgB;MACZ4C,OAAO,CAACzC,IAAR,CAAa,MAAMH,UAAU,CAAC,IAAD,CAA7B,EAAqC7K,KAAK,IAAI6K,UAAU,CAAC7K,KAAD,CAAxD;IACH;;IACD,MAAM+K,MAAM,GAAG,IAAIoB,SAAJ,CAAc,KAAKzN,QAAnB,EAA6BoQ,UAA7B,CAAf;IACA/D,MAAM,CAACC,IAAP,GAAcyC,OAAO,CAACzC,IAAR,CAAakC,IAAb,CAAkBO,OAAlB,CAAd;IACA1C,MAAM,CAACiE,KAAP,GAAevB,OAAO,CAACuB,KAAR,CAAc9B,IAAd,CAAmBO,OAAnB,EAA4BnP,SAA5B,CAAf;IACA,OAAOyM,MAAP;EACH;;EACDkE,YAAY,GAAG;IACXzG,yEAAqB,CAAC,wBAAD,EAA2B,KAAKmC,SAAL,CAAeqD,KAA1C,CAArB;;IACA,OAAO,IAAIpF,YAAJ,CAAiB,IAAIC,4DAAJ,CAAmB,KAAK8B,SAAL,CAAeoD,KAAlC,EAAyC,KAAKpD,SAAL,CAAeqD,KAAxD,CAAjB,CAAP;EACH;;EACM,IAAH3N,GAAG,GAAG;IACN,OAAO,KAAK4N,MAAL,EAAP;EACH;;EACS,IAANG,MAAM,GAAG;IACT,OAAO,KAAKD,SAAL,EAAP;EACH;;EACO,IAAJG,IAAI,GAAG;IACP,OAAO,KAAKD,OAAL,EAAP;EACH;;AAnIyB;AAsI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMa,QAAN,CAAe;EACX;AACJ;AACA;EACIvK,WAAW,CAACgG,SAAD,EAAYjF,GAAZ,EAAiB;IACxB,KAAKiF,SAAL,GAAiBA,SAAjB;IACA,KAAKjF,GAAL,GAAWA,GAAX;IACA,KAAKyJ,QAAL,GAAgB;MACZC,MAAM,EAAE,MAAM,KAAKzE,SAAL,CAAe0E,OAAf,EADF;MAEZvG,eAFY;MAGZC,gBAAgBA,kEAAAA;IAHJ,CAAhB;EAKH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACItD,WAAW,CAAC6J,IAAD,EAAOC,IAAP,EAAavL,OAAO,GAAG,EAAvB,EAA2B;IAClCgF,2EAAuB,CAAC,KAAK2B,SAAN,EAAiB2E,IAAjB,EAAuBC,IAAvB,EAA6BvL,OAA7B,CAAvB;EACH;;EACDpF,GAAG,CAAC+M,IAAD,EAAO;IACNjC,gEAAgB,CAAC,cAAD,EAAiB,CAAjB,EAAoB,CAApB,EAAuBoB,SAAS,CAAC5J,MAAjC,CAAhB;;IACA,IAAIyK,IAAI,YAAYQ,SAApB,EAA+B;MAC3B,MAAMqD,QAAQ,GAAGvG,8DAAU,CAAC,KAAK0B,SAAN,EAAiBgB,IAAI,CAACgC,QAAL,EAAjB,CAA3B;MACA,OAAO,IAAIxB,SAAJ,CAAc,IAAd,EAAoBqD,QAApB,CAAP;IACH,CAHD,MAIK;MACD,MAAMA,QAAQ,GAAG5Q,uDAAG,CAAC,KAAK+L,SAAN,EAAiBgB,IAAjB,CAApB;MACA,OAAO,IAAIQ,SAAJ,CAAc,IAAd,EAAoBqD,QAApB,CAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIvG,UAAU,CAACwG,GAAD,EAAM;IACZ,MAAMC,OAAO,GAAG,qBAAhB;IACAhG,gEAAgB,CAACgG,OAAD,EAAU,CAAV,EAAa,CAAb,EAAgB5E,SAAS,CAAC5J,MAA1B,CAAhB;IACA,MAAMsO,QAAQ,GAAGvG,8DAAU,CAAC,KAAK0B,SAAN,EAAiB8E,GAAjB,CAA3B;IACA,OAAO,IAAItD,SAAJ,CAAc,IAAd,EAAoBqD,QAApB,CAAP;EACH,CA/CU,CAgDX;;;EACAtG,SAAS,GAAG;IACRQ,gEAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BoB,SAAS,CAAC5J,MAAvC,CAAhB;IACA,OAAOgI,6DAAS,CAAC,KAAKyB,SAAN,CAAhB;EACH;;EACDxB,QAAQ,GAAG;IACPO,gEAAgB,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,CAAzB,EAA4BoB,SAAS,CAAC5J,MAAtC,CAAhB;IACA,OAAOiI,4DAAQ,CAAC,KAAKwB,SAAN,CAAf;EACH;;AAxDU;;AA0DfuE,QAAQ,CAACS,WAAT,GAAuB;EACnBC,SAAS,EAAExG,mEAAe,EADP;EAEnBC,SAAS,EAAGwG,KAAD,IAAWxG,6DAAS,CAACwG,KAAD;AAFZ,CAAvB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwB;EAAEpK,GAAF;EAAO+J,GAAP;EAAY1F,OAAZ;EAAqBgG,cAArB;EAAqCC,SAArC;EAAgDC,SAAS,GAAG;AAA5D,CAAxB,EAA6F;EACzF3G,kEAAc,CAACS,OAAD,CAAd;EACA;AACJ;AACA;AACA;;;EACI,MAAMmG,YAAY,GAAG,IAAIlJ,yDAAJ,CAAa,eAAb,EAA8B,IAAIC,mEAAJ,CAAuB,qBAAvB,CAA9B,CAArB;EACAiJ,YAAY,CAACC,YAAb,CAA0B,IAAIjJ,0DAAJ,CAAc,eAAd,EAA+B,MAAM6I,cAArC,EAAqD;EAAU;EAA/D,CAA1B;EACA,OAAO;IACHK,QAAQ,EAAE,IAAIlB,QAAJ,CAAa3F,+EAA2B,CAAC7D,GAAD,EAAMwK,YAAN;IAClD;IAAwB5R,SAD0B,EACfmR,GADe,EACVQ,SADU,CAAxC,EAC0CvK,GAD1C,CADP;IAGHsK;EAHG,CAAP;AAKH;;AAED,IAAIb,QAAQ,GAAG,aAAa/K,MAAM,CAACiM,MAAP,CAAc;EACxCC,SAAS,EAAE,IAD6B;EAExCR,cAAc,EAAEA;AAFwB,CAAd,CAA5B;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMH,WAAW,GAAGT,QAAQ,CAACS,WAA7B;;AACA,SAASY,gBAAT,CAA0BH,QAA1B,EAAoC;EAChC;EACAA,QAAQ,CAACjB,QAAT,CAAkBqB,iBAAlB,CAAoC,IAAItJ,0DAAJ,CAAc,iBAAd,EAAiC,CAACuJ,SAAD,EAAY;IAAEC,kBAAkB,EAAEjB;EAAtB,CAAZ,KAA4C;IAC7G;IACA;IACA,MAAM/J,GAAG,GAAG+K,SAAS,CAACE,WAAV,CAAsB,YAAtB,EAAoCC,YAApC,EAAZ;IACA,MAAMC,WAAW,GAAGJ,SAAS,CACxBE,WADe,CACH,UADG,EAEfC,YAFe,CAEF;MAAEE,UAAU,EAAErB;IAAd,CAFE,CAApB;IAGA,OAAO,IAAIP,QAAJ,CAAa2B,WAAb,EAA0BnL,GAA1B,CAAP;EACH,CARmC,EAQjC;EAAS;EARwB,EAS/BqL,eAT+B,EAUpC;EACA;IACI5E,SADJ;IAEIC,KAFJ;IAGI8C,QAHJ;IAIIzD,YAJJ;IAKIjC,aALJ;IAMI2F,QANJ;IAOIQ;EAPJ,CAXoC,EAoB/BqB,oBApB+B,CAoBV,IApBU,CAApC;EAqBAZ,QAAQ,CAACzJ,eAAT,CAAyB/B,IAAzB,EAA+BmF,OAA/B;AACH;;AACDwG,gBAAgB,CAACxS,4DAAD,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACp2BA;AACA;AACA;AACA;AAEA,MAAM6G,IAAI,GAAG,oBAAb;AACA,MAAMmF,OAAO,GAAG,QAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,IAAIoH,WAAW,GAAG,EAAlB;AACA;AACA;AACA;AACA;;AACA,SAAS0B,aAAT,CAAuB9I,OAAvB,EAAgC;EAC5BoH,WAAW,GAAGpH,OAAd;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM+I,iBAAN,CAAwB;EACpB;AACJ;AACA;EACInO,WAAW,CAACoO,WAAD,EAAc;IACrB,KAAKA,WAAL,GAAmBA,WAAnB,CADqB,CAErB;;IACA,KAAKC,OAAL,GAAe,WAAf;EACH;EACD;AACJ;AACA;AACA;;;EACIxU,GAAG,CAAC6B,GAAD,EAAMpC,KAAN,EAAa;IACZ,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACf,KAAK8U,WAAL,CAAiBE,UAAjB,CAA4B,KAAKC,aAAL,CAAmB7S,GAAnB,CAA5B;IACH,CAFD,MAGK;MACD,KAAK0S,WAAL,CAAiBI,OAAjB,CAAyB,KAAKD,aAAL,CAAmB7S,GAAnB,CAAzB,EAAkDiR,yDAAS,CAACrT,KAAD,CAA3D;IACH;EACJ;EACD;AACJ;AACA;;;EACIwJ,GAAG,CAACpH,GAAD,EAAM;IACL,MAAM+S,SAAS,GAAG,KAAKL,WAAL,CAAiBM,OAAjB,CAAyB,KAAKH,aAAL,CAAmB7S,GAAnB,CAAzB,CAAlB;;IACA,IAAI+S,SAAS,IAAI,IAAjB,EAAuB;MACnB,OAAO,IAAP;IACH,CAFD,MAGK;MACD,OAAO7B,wDAAQ,CAAC6B,SAAD,CAAf;IACH;EACJ;;EACD/P,MAAM,CAAChD,GAAD,EAAM;IACR,KAAK0S,WAAL,CAAiBE,UAAjB,CAA4B,KAAKC,aAAL,CAAmB7S,GAAnB,CAA5B;EACH;;EACD6S,aAAa,CAACtO,IAAD,EAAO;IAChB,OAAO,KAAKoO,OAAL,GAAepO,IAAtB;EACH;;EACD+I,QAAQ,GAAG;IACP,OAAO,KAAKoF,WAAL,CAAiBpF,QAAjB,EAAP;EACH;;AAzCmB;AA4CxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAM2F,aAAN,CAAoB;EAChB3O,WAAW,GAAG;IACV,KAAK4O,MAAL,GAAc,EAAd;IACA,KAAKC,iBAAL,GAAyB,IAAzB;EACH;;EACDhV,GAAG,CAAC6B,GAAD,EAAMpC,KAAN,EAAa;IACZ,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACf,OAAO,KAAKsV,MAAL,CAAYlT,GAAZ,CAAP;IACH,CAFD,MAGK;MACD,KAAKkT,MAAL,CAAYlT,GAAZ,IAAmBpC,KAAnB;IACH;EACJ;;EACDwJ,GAAG,CAACpH,GAAD,EAAM;IACL,IAAImR,wDAAQ,CAAC,KAAK+B,MAAN,EAAclT,GAAd,CAAZ,EAAgC;MAC5B,OAAO,KAAKkT,MAAL,CAAYlT,GAAZ,CAAP;IACH;;IACD,OAAO,IAAP;EACH;;EACDgD,MAAM,CAAChD,GAAD,EAAM;IACR,OAAO,KAAKkT,MAAL,CAAYlT,GAAZ,CAAP;EACH;;AArBe;AAwBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMoT,gBAAgB,GAAG,UAAUC,cAAV,EAA0B;EAC/C,IAAI;IACA;IACA;IACA,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACD,cAAD,CAAb,KAAkC,WADtC,EACmD;MAC/C;MACA,MAAME,UAAU,GAAGD,MAAM,CAACD,cAAD,CAAzB;MACAE,UAAU,CAACT,OAAX,CAAmB,mBAAnB,EAAwC,OAAxC;MACAS,UAAU,CAACX,UAAX,CAAsB,mBAAtB;MACA,OAAO,IAAIH,iBAAJ,CAAsBc,UAAtB,CAAP;IACH;EACJ,CAXD,CAYA,OAAOC,CAAP,EAAU,CAAG,CAbkC,CAc/C;EACA;;;EACA,OAAO,IAAIP,aAAJ,EAAP;AACH,CAjBD;AAkBA;;;AACA,MAAMQ,iBAAiB,GAAGL,gBAAgB,CAAC,cAAD,CAA1C;AACA;;AACA,MAAMM,cAAc,GAAGN,gBAAgB,CAAC,gBAAD,CAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMzJ,SAAS,GAAG,IAAIF,oDAAJ,CAAW,oBAAX,CAAlB;AACA;AACA;AACA;;AACA,MAAMkK,aAAa,GAAI,YAAY;EAC/B,IAAIC,EAAE,GAAG,CAAT;EACA,OAAO,YAAY;IACf,OAAOA,EAAE,EAAT;EACH,CAFD;AAGH,CALqB,EAAtB;AAMA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,IAAI,GAAG,UAAUC,GAAV,EAAe;EACxB,MAAMC,SAAS,GAAGzC,iEAAiB,CAACwC,GAAD,CAAnC;EACA,MAAMD,IAAI,GAAG,IAAItC,gDAAJ,EAAb;EACAsC,IAAI,CAACpQ,MAAL,CAAYsQ,SAAZ;EACA,MAAMC,SAAS,GAAGH,IAAI,CAACI,MAAL,EAAlB;EACA,OAAOzC,kEAAA,CAAuBwC,SAAvB,CAAP;AACH,CAND;;AAOA,MAAMG,gBAAgB,GAAG,UAAU,GAAGC,OAAb,EAAsB;EAC3C,IAAItK,OAAO,GAAG,EAAd;;EACA,KAAK,IAAIhJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsT,OAAO,CAACvT,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;IACrC,MAAMuT,GAAG,GAAGD,OAAO,CAACtT,CAAD,CAAnB;;IACA,IAAIgK,KAAK,CAACC,OAAN,CAAcsJ,GAAd,KACCA,GAAG,IACA,OAAOA,GAAP,KAAe,QADlB,IAEG;IACA,OAAOA,GAAG,CAACxT,MAAX,KAAsB,QAJ9B,EAIyC;MACrCiJ,OAAO,IAAIqK,gBAAgB,CAACG,KAAjB,CAAuB,IAAvB,EAA6BD,GAA7B,CAAX;IACH,CAND,MAOK,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MAC9BvK,OAAO,IAAImH,yDAAS,CAACoD,GAAD,CAApB;IACH,CAFI,MAGA;MACDvK,OAAO,IAAIuK,GAAX;IACH;;IACDvK,OAAO,IAAI,GAAX;EACH;;EACD,OAAOA,OAAP;AACH,CApBD;AAqBA;AACA;AACA;;;AACA,IAAIyK,MAAM,GAAG,IAAb;AACA;AACA;AACA;;AACA,IAAIC,SAAS,GAAG,IAAhB;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAG,UAAUC,OAAV,EAAmBC,UAAnB,EAA+B;EACnDvD,sDAAM,CAAC,CAACuD,UAAD,IAAeD,OAAO,KAAK,IAA3B,IAAmCA,OAAO,KAAK,KAAhD,EAAuD,4CAAvD,CAAN;;EACA,IAAIA,OAAO,KAAK,IAAhB,EAAsB;IAClB/K,SAAS,CAACiL,QAAV,GAAqBrC,8DAArB;IACAgC,MAAM,GAAG5K,SAAS,CAACmL,GAAV,CAAcjI,IAAd,CAAmBlD,SAAnB,CAAT;;IACA,IAAIgL,UAAJ,EAAgB;MACZjB,cAAc,CAACvV,GAAf,CAAmB,iBAAnB,EAAsC,IAAtC;IACH;EACJ,CAND,MAOK,IAAI,OAAOuW,OAAP,KAAmB,UAAvB,EAAmC;IACpCH,MAAM,GAAGG,OAAT;EACH,CAFI,MAGA;IACDH,MAAM,GAAG,IAAT;IACAb,cAAc,CAAC1Q,MAAf,CAAsB,iBAAtB;EACH;AACJ,CAhBD;;AAiBA,MAAM8R,GAAG,GAAG,UAAU,GAAGV,OAAb,EAAsB;EAC9B,IAAII,SAAS,KAAK,IAAlB,EAAwB;IACpBA,SAAS,GAAG,KAAZ;;IACA,IAAID,MAAM,KAAK,IAAX,IAAmBb,cAAc,CAACtM,GAAf,CAAmB,iBAAnB,MAA0C,IAAjE,EAAuE;MACnEqN,eAAe,CAAC,IAAD,CAAf;IACH;EACJ;;EACD,IAAIF,MAAJ,EAAY;IACR,MAAMzK,OAAO,GAAGqK,gBAAgB,CAACG,KAAjB,CAAuB,IAAvB,EAA6BF,OAA7B,CAAhB;IACAG,MAAM,CAACzK,OAAD,CAAN;EACH;AACJ,CAXD;;AAYA,MAAMiL,UAAU,GAAG,UAAUC,MAAV,EAAkB;EACjC,OAAO,UAAU,GAAGZ,OAAb,EAAsB;IACzBU,GAAG,CAACE,MAAD,EAAS,GAAGZ,OAAZ,CAAH;EACH,CAFD;AAGH,CAJD;;AAKA,MAAMzU,KAAK,GAAG,UAAU,GAAGyU,OAAb,EAAsB;EAChC,MAAMtK,OAAO,GAAG,8BAA8BqK,gBAAgB,CAAC,GAAGC,OAAJ,CAA9D;EACAzK,SAAS,CAAChK,KAAV,CAAgBmK,OAAhB;AACH,CAHD;;AAIA,MAAMmL,KAAK,GAAG,UAAU,GAAGb,OAAb,EAAsB;EAChC,MAAMtK,OAAO,GAAI,yBAAwBqK,gBAAgB,CAAC,GAAGC,OAAJ,CAAa,EAAtE;EACAzK,SAAS,CAAChK,KAAV,CAAgBmK,OAAhB;EACA,MAAM,IAAIhL,KAAJ,CAAUgL,OAAV,CAAN;AACH,CAJD;;AAKA,MAAMF,IAAI,GAAG,UAAU,GAAGwK,OAAb,EAAsB;EAC/B,MAAMtK,OAAO,GAAG,uBAAuBqK,gBAAgB,CAAC,GAAGC,OAAJ,CAAvD;EACAzK,SAAS,CAACC,IAAV,CAAeE,OAAf;AACH,CAHD;AAIA;AACA;AACA;AACA;;;AACA,MAAMoL,kBAAkB,GAAG,YAAY;EACnC;EACA,IAAI,OAAO5B,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAAC6B,QADP,IAEA7B,MAAM,CAAC6B,QAAP,CAAgBC,QAFhB,IAGA9B,MAAM,CAAC6B,QAAP,CAAgBC,QAAhB,CAAyBzS,OAAzB,CAAiC,QAAjC,MAA+C,CAAC,CAHpD,EAGuD;IACnDiH,IAAI,CAAC,kDACD,8CADA,CAAJ;EAEH;AACJ,CATD;AAUA;AACA;AACA;;;AACA,MAAMyL,mBAAmB,GAAG,UAAU5T,IAAV,EAAgB;EACxC,OAAQ,OAAOA,IAAP,KAAgB,QAAhB,KACHA,IAAI,KAAKA,IAAT,IAAiB;EACdA,IAAI,KAAK6T,MAAM,CAACC,iBADnB,IAEG9T,IAAI,KAAK6T,MAAM,CAACE,iBAHhB,CAAR;AAIH,CALD;;AAMA,MAAMC,mBAAmB,GAAG,UAAUrW,EAAV,EAAc;EACtC,IAAIiS,yDAAS,MAAMqE,QAAQ,CAACC,UAAT,KAAwB,UAA3C,EAAuD;IACnDvW,EAAE;EACL,CAFD,MAGK;IACD;IACA;IACA,IAAIwW,MAAM,GAAG,KAAb;;IACA,MAAMC,SAAS,GAAG,YAAY;MAC1B,IAAI,CAACH,QAAQ,CAACI,IAAd,EAAoB;QAChBC,UAAU,CAACF,SAAD,EAAYG,IAAI,CAACC,KAAL,CAAW,EAAX,CAAZ,CAAV;QACA;MACH;;MACD,IAAI,CAACL,MAAL,EAAa;QACTA,MAAM,GAAG,IAAT;QACAxW,EAAE;MACL;IACJ,CATD;;IAUA,IAAIsW,QAAQ,CAACQ,gBAAb,EAA+B;MAC3BR,QAAQ,CAACQ,gBAAT,CAA0B,kBAA1B,EAA8CL,SAA9C,EAAyD,KAAzD,EAD2B,CAE3B;;MACAvC,MAAM,CAAC4C,gBAAP,CAAwB,MAAxB,EAAgCL,SAAhC,EAA2C,KAA3C,EAH2B,CAI3B;IACH,CALD,MAMK,IAAIH,QAAQ,CAACS,WAAb,EAA0B;MAC3B;MACA;MACAT,QAAQ,CAACS,WAAT,CAAqB,oBAArB,EAA2C,MAAM;QAC7C,IAAIT,QAAQ,CAACC,UAAT,KAAwB,UAA5B,EAAwC;UACpCE,SAAS;QACZ;MACJ,CAJD,EAH2B,CAQ3B;MACA;;MACAvC,MAAM,CAAC6C,WAAP,CAAmB,QAAnB,EAA6BN,SAA7B,EAV2B,CAW3B;MACA;MACA;IACH;EACJ;AACJ,CAxCD;AAyCA;AACA;AACA;;;AACA,MAAMO,QAAQ,GAAG,YAAjB;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,YAAjB;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,UAAUzS,CAAV,EAAa0S,CAAb,EAAgB;EAChC,IAAI1S,CAAC,KAAK0S,CAAV,EAAa;IACT,OAAO,CAAP;EACH,CAFD,MAGK,IAAI1S,CAAC,KAAKuS,QAAN,IAAkBG,CAAC,KAAKF,QAA5B,EAAsC;IACvC,OAAO,CAAC,CAAR;EACH,CAFI,MAGA,IAAIE,CAAC,KAAKH,QAAN,IAAkBvS,CAAC,KAAKwS,QAA5B,EAAsC;IACvC,OAAO,CAAP;EACH,CAFI,MAGA;IACD,MAAMG,MAAM,GAAGC,WAAW,CAAC5S,CAAD,CAA1B;IAAA,MAA+B6S,MAAM,GAAGD,WAAW,CAACF,CAAD,CAAnD;;IACA,IAAIC,MAAM,KAAK,IAAf,EAAqB;MACjB,IAAIE,MAAM,KAAK,IAAf,EAAqB;QACjB,OAAOF,MAAM,GAAGE,MAAT,KAAoB,CAApB,GAAwB7S,CAAC,CAAChD,MAAF,GAAW0V,CAAC,CAAC1V,MAArC,GAA8C2V,MAAM,GAAGE,MAA9D;MACH,CAFD,MAGK;QACD,OAAO,CAAC,CAAR;MACH;IACJ,CAPD,MAQK,IAAIA,MAAM,KAAK,IAAf,EAAqB;MACtB,OAAO,CAAP;IACH,CAFI,MAGA;MACD,OAAO7S,CAAC,GAAG0S,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB;IACH;EACJ;AACJ,CA3BD;AA4BA;AACA;AACA;;;AACA,MAAMI,aAAa,GAAG,UAAU9S,CAAV,EAAa0S,CAAb,EAAgB;EAClC,IAAI1S,CAAC,KAAK0S,CAAV,EAAa;IACT,OAAO,CAAP;EACH,CAFD,MAGK,IAAI1S,CAAC,GAAG0S,CAAR,EAAW;IACZ,OAAO,CAAC,CAAR;EACH,CAFI,MAGA;IACD,OAAO,CAAP;EACH;AACJ,CAVD;;AAWA,MAAMK,UAAU,GAAG,UAAU5W,GAAV,EAAehC,GAAf,EAAoB;EACnC,IAAIA,GAAG,IAAIgC,GAAG,IAAIhC,GAAlB,EAAuB;IACnB,OAAOA,GAAG,CAACgC,GAAD,CAAV;EACH,CAFD,MAGK;IACD,MAAM,IAAIlB,KAAJ,CAAU,2BAA2BkB,GAA3B,GAAiC,eAAjC,GAAmDiR,yDAAS,CAACjT,GAAD,CAAtE,CAAN;EACH;AACJ,CAPD;;AAQA,MAAM6Y,iBAAiB,GAAG,UAAU7Y,GAAV,EAAe;EACrC,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;IACzC,OAAOiT,yDAAS,CAACjT,GAAD,CAAhB;EACH;;EACD,MAAM8Y,IAAI,GAAG,EAAb,CAJqC,CAKrC;;EACA,KAAK,MAAMC,CAAX,IAAgB/Y,GAAhB,EAAqB;IACjB8Y,IAAI,CAACtW,IAAL,CAAUuW,CAAV;EACH,CARoC,CASrC;;;EACAD,IAAI,CAACE,IAAL;EACA,IAAIhX,GAAG,GAAG,GAAV;;EACA,KAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgW,IAAI,CAACjW,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;IAClC,IAAIA,CAAC,KAAK,CAAV,EAAa;MACTd,GAAG,IAAI,GAAP;IACH;;IACDA,GAAG,IAAIiR,yDAAS,CAAC6F,IAAI,CAAChW,CAAD,CAAL,CAAhB;IACAd,GAAG,IAAI,GAAP;IACAA,GAAG,IAAI6W,iBAAiB,CAAC7Y,GAAG,CAAC8Y,IAAI,CAAChW,CAAD,CAAL,CAAJ,CAAxB;EACH;;EACDd,GAAG,IAAI,GAAP;EACA,OAAOA,GAAP;AACH,CAtBD;AAuBA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMiX,iBAAiB,GAAG,UAAUnD,GAAV,EAAeoD,OAAf,EAAwB;EAC9C,MAAMtW,GAAG,GAAGkT,GAAG,CAACjT,MAAhB;;EACA,IAAID,GAAG,IAAIsW,OAAX,EAAoB;IAChB,OAAO,CAACpD,GAAD,CAAP;EACH;;EACD,MAAMqD,QAAQ,GAAG,EAAjB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxW,GAApB,EAAyBwW,CAAC,IAAIF,OAA9B,EAAuC;IACnC,IAAIE,CAAC,GAAGF,OAAJ,GAActW,GAAlB,EAAuB;MACnBuW,QAAQ,CAAC3W,IAAT,CAAcsT,GAAG,CAACuD,SAAJ,CAAcD,CAAd,EAAiBxW,GAAjB,CAAd;IACH,CAFD,MAGK;MACDuW,QAAQ,CAAC3W,IAAT,CAAcsT,GAAG,CAACuD,SAAJ,CAAcD,CAAd,EAAiBA,CAAC,GAAGF,OAArB,CAAd;IACH;EACJ;;EACD,OAAOC,QAAP;AACH,CAfD;AAgBA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,IAAT,CAActZ,GAAd,EAAmBoB,EAAnB,EAAuB;EACnB,KAAK,MAAMY,GAAX,IAAkBhC,GAAlB,EAAuB;IACnB,IAAIA,GAAG,CAACuZ,cAAJ,CAAmBvX,GAAnB,CAAJ,EAA6B;MACzBZ,EAAE,CAACY,GAAD,EAAMhC,GAAG,CAACgC,GAAD,CAAT,CAAF;IACH;EACJ;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMwX,qBAAqB,GAAG,UAAUC,CAAV,EAAa;EACvCrG,sDAAM,CAAC,CAACiE,mBAAmB,CAACoC,CAAD,CAArB,EAA0B,qBAA1B,CAAN,CADuC,CACiB;;EACxD,MAAMC,KAAK,GAAG,EAAd;EAAA,MAAkBC,KAAK,GAAG,EAA1B;EACA,MAAMC,IAAI,GAAG,CAAC,KAAMF,KAAK,GAAG,CAAf,IAAqB,CAAlC;EACA,IAAIG,CAAJ,EAAOrE,CAAP,EAAUsE,CAAV,EAAaC,EAAb,EAAiBjX,CAAjB,CAJuC,CAKvC;EACA;;EACA,IAAI2W,CAAC,KAAK,CAAV,EAAa;IACTjE,CAAC,GAAG,CAAJ;IACAsE,CAAC,GAAG,CAAJ;IACAD,CAAC,GAAG,IAAIJ,CAAJ,KAAU,CAACO,QAAX,GAAsB,CAAtB,GAA0B,CAA9B;EACH,CAJD,MAKK;IACDH,CAAC,GAAGJ,CAAC,GAAG,CAAR;IACAA,CAAC,GAAGzB,IAAI,CAACiC,GAAL,CAASR,CAAT,CAAJ;;IACA,IAAIA,CAAC,IAAIzB,IAAI,CAACkC,GAAL,CAAS,CAAT,EAAY,IAAIN,IAAhB,CAAT,EAAgC;MAC5B;MACAG,EAAE,GAAG/B,IAAI,CAACmC,GAAL,CAASnC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAClB,GAAL,CAAS2C,CAAT,IAAczB,IAAI,CAACoC,GAA9B,CAAT,EAA6CR,IAA7C,CAAL;MACApE,CAAC,GAAGuE,EAAE,GAAGH,IAAT;MACAE,CAAC,GAAG9B,IAAI,CAACqC,KAAL,CAAWZ,CAAC,GAAGzB,IAAI,CAACkC,GAAL,CAAS,CAAT,EAAYP,KAAK,GAAGI,EAApB,CAAJ,GAA8B/B,IAAI,CAACkC,GAAL,CAAS,CAAT,EAAYP,KAAZ,CAAzC,CAAJ;IACH,CALD,MAMK;MACD;MACAnE,CAAC,GAAG,CAAJ;MACAsE,CAAC,GAAG9B,IAAI,CAACqC,KAAL,CAAWZ,CAAC,GAAGzB,IAAI,CAACkC,GAAL,CAAS,CAAT,EAAY,IAAIN,IAAJ,GAAWD,KAAvB,CAAf,CAAJ;IACH;EACJ,CA1BsC,CA2BvC;;;EACA,MAAMW,IAAI,GAAG,EAAb;;EACA,KAAKxX,CAAC,GAAG6W,KAAT,EAAgB7W,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;IACvBwX,IAAI,CAAC9X,IAAL,CAAUsX,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAtB;IACAA,CAAC,GAAG9B,IAAI,CAACC,KAAL,CAAW6B,CAAC,GAAG,CAAf,CAAJ;EACH;;EACD,KAAKhX,CAAC,GAAG4W,KAAT,EAAgB5W,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;IACvBwX,IAAI,CAAC9X,IAAL,CAAUgT,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAtB;IACAA,CAAC,GAAGwC,IAAI,CAACC,KAAL,CAAWzC,CAAC,GAAG,CAAf,CAAJ;EACH;;EACD8E,IAAI,CAAC9X,IAAL,CAAUqX,CAAC,GAAG,CAAH,GAAO,CAAlB;EACAS,IAAI,CAACC,OAAL;EACA,MAAMzE,GAAG,GAAGwE,IAAI,CAACE,IAAL,CAAU,EAAV,CAAZ,CAvCuC,CAwCvC;;EACA,IAAIC,aAAa,GAAG,EAApB;;EACA,KAAK3X,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAI,CAAzB,EAA4B;IACxB,IAAI4X,OAAO,GAAGC,QAAQ,CAAC7E,GAAG,CAAC8E,MAAJ,CAAW9X,CAAX,EAAc,CAAd,CAAD,EAAmB,CAAnB,CAAR,CAA8BwM,QAA9B,CAAuC,EAAvC,CAAd;;IACA,IAAIoL,OAAO,CAAC7X,MAAR,KAAmB,CAAvB,EAA0B;MACtB6X,OAAO,GAAG,MAAMA,OAAhB;IACH;;IACDD,aAAa,GAAGA,aAAa,GAAGC,OAAhC;EACH;;EACD,OAAOD,aAAa,CAACI,WAAd,EAAP;AACH,CAlDD;AAmDA;AACA;AACA;AACA;;;AACA,MAAMC,8BAA8B,GAAG,YAAY;EAC/C,OAAO,CAAC,EAAE,OAAOxF,MAAP,KAAkB,QAAlB,IACNA,MAAM,CAAC,QAAD,CADA,IAENA,MAAM,CAAC,QAAD,CAAN,CAAiB,WAAjB,CAFM,IAGN,CAAC,UAAUyF,IAAV,CAAezF,MAAM,CAAC6B,QAAP,CAAgB6D,IAA/B,CAHG,CAAR;AAIH,CALD;AAMA;AACA;AACA;;;AACA,MAAMC,iBAAiB,GAAG,YAAY;EAClC;EACA,OAAO,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,EAAf,KAAsB,QAA5D;AACH,CAHD;AAIA;AACA;AACA;;;AACA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCzX,KAAlC,EAAyC;EACrC,IAAI0X,MAAM,GAAG,eAAb;;EACA,IAAID,IAAI,KAAK,SAAb,EAAwB;IACpBC,MAAM,GACF,iDACI,6CAFR;EAGH,CAJD,MAKK,IAAID,IAAI,KAAK,mBAAb,EAAkC;IACnCC,MAAM,GAAG,4DAAT;EACH,CAFI,MAGA,IAAID,IAAI,KAAK,aAAb,EAA4B;IAC7BC,MAAM,GAAG,4BAAT;EACH;;EACD,MAAM3Z,KAAK,GAAG,IAAIb,KAAJ,CAAUua,IAAI,GAAG,MAAP,GAAgBzX,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EAAhB,GAAyC,IAAzC,GAAgDgM,MAA1D,CAAd,CAbqC,CAcrC;;EACA3Z,KAAK,CAAC0Z,IAAN,GAAaA,IAAI,CAACE,WAAL,EAAb;EACA,OAAO5Z,KAAP;AACH;AACD;AACA;AACA;;;AACA,MAAM6Z,eAAe,GAAG,IAAIC,MAAJ,CAAW,mBAAX,CAAxB;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,CAAC,UAAxB;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,UAAvB;AACA;AACA;AACA;;AACA,MAAMlD,WAAW,GAAG,UAAU3C,GAAV,EAAe;EAC/B,IAAI0F,eAAe,CAACT,IAAhB,CAAqBjF,GAArB,CAAJ,EAA+B;IAC3B,MAAM8F,MAAM,GAAGtE,MAAM,CAACxB,GAAD,CAArB;;IACA,IAAI8F,MAAM,IAAIF,cAAV,IAA4BE,MAAM,IAAID,cAA1C,EAA0D;MACtD,OAAOC,MAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH,CARD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,UAAUza,EAAV,EAAc;EACjC,IAAI;IACAA,EAAE;EACL,CAFD,CAGA,OAAOoU,CAAP,EAAU;IACN;IACAuC,UAAU,CAAC,MAAM;MACb;MACA;MACA;MACA;MACA,MAAM+D,KAAK,GAAGtG,CAAC,CAACsG,KAAF,IAAW,EAAzB;MACAlQ,IAAI,CAAC,wCAAD,EAA2CkQ,KAA3C,CAAJ;MACA,MAAMtG,CAAN;IACH,CARS,EAQPwC,IAAI,CAACC,KAAL,CAAW,CAAX,CARO,CAAV;EASH;AACJ,CAhBD;AAiBA;AACA;AACA;;;AACA,MAAM8D,YAAY,GAAG,YAAY;EAC7B,MAAMC,SAAS,GAAI,OAAO1G,MAAP,KAAkB,QAAlB,IACfA,MAAM,CAAC,WAAD,CADS,IAEfA,MAAM,CAAC,WAAD,CAAN,CAAoB,WAApB,CAFc,IAGd,EAHJ,CAD6B,CAK7B;EACA;EACA;EACA;;EACA,OAAQ0G,SAAS,CAACC,MAAV,CAAiB,0FAAjB,KAAgH,CAAxH;AACH,CAVD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,qBAAqB,GAAG,UAAU9a,EAAV,EAAc+a,IAAd,EAAoB;EAC9C,MAAMC,OAAO,GAAGrE,UAAU,CAAC3W,EAAD,EAAK+a,IAAL,CAA1B,CAD8C,CAE9C;;EACA,IAAI,OAAOC,OAAP,KAAmB,QAAnB,IACA;EACA,OAAOC,IAAP,KAAgB,WAFhB,IAGA;EACAA,IAAI,CAAC,YAAD,CAJR,EAIwB;IACpB;IACAA,IAAI,CAACC,UAAL,CAAgBF,OAAhB,EAFoB,CAGpB;EACH,CARD,MASK,IAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAAC,OAAD,CAA1C,EAAqD;IACtD;IACAA,OAAO,CAAC,OAAD,CAAP;EACH;;EACD,OAAOA,OAAP;AACH,CAjBD;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMG,qBAAN,CAA4B;EACxBjW,WAAW,CAACkW,QAAD,EAAWC,gBAAX,EAA6B;IACpC,KAAKD,QAAL,GAAgBA,QAAhB;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,QAAL,GAAgBD,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAAClK,YAAjB,CAA8B;MAAEpG,QAAQ,EAAE;IAAZ,CAA9B,CAApF;;IACA,IAAI,CAAC,KAAKuQ,QAAV,EAAoB;MAChBD,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACrT,GAAjB,GAAuBuD,IAAvB,CAA4B+P,QAAQ,IAAK,KAAKA,QAAL,GAAgBA,QAAzD,CAApE;IACH;EACJ;;EACDC,QAAQ,CAACC,YAAD,EAAe;IACnB,IAAI,CAAC,KAAKF,QAAV,EAAoB;MAChB,OAAO,IAAIG,OAAJ,CAAY,CAAC5N,OAAD,EAAUC,MAAV,KAAqB;QACpC;QACA;QACA;QACA;QACA6I,UAAU,CAAC,MAAM;UACb,IAAI,KAAK2E,QAAT,EAAmB;YACf,KAAKC,QAAL,CAAcC,YAAd,EAA4BjQ,IAA5B,CAAiCsC,OAAjC,EAA0CC,MAA1C;UACH,CAFD,MAGK;YACDD,OAAO,CAAC,IAAD,CAAP;UACH;QACJ,CAPS,EAOP,CAPO,CAAV;MAQH,CAbM,CAAP;IAcH;;IACD,OAAO,KAAKyN,QAAL,CAAcC,QAAd,CAAuBC,YAAvB,CAAP;EACH;;EACDE,sBAAsB,CAACC,QAAD,EAAW;IAC7B,IAAI3O,EAAJ;;IACA,CAACA,EAAE,GAAG,KAAKqO,gBAAX,MAAiC,IAAjC,IAAyCrO,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,EAAE,CAAChF,GAAH,GAASuD,IAAT,CAAc+P,QAAQ,IAAIA,QAAQ,CAACM,gBAAT,CAA0BD,QAA1B,CAA1B,CAAlE;EACH;;EACDE,qBAAqB,GAAG;IACpBrR,IAAI,CAAE,oDAAmD,KAAK4Q,QAAS,IAAlE,GACD,6EADA,CAAJ;EAEH;;AAnCuB;AAsC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMU,yBAAN,CAAgC;EAC5B5W,WAAW,CAACkW,QAAD,EAAWW,gBAAX,EAA6BC,aAA7B,EAA4C;IACnD,KAAKZ,QAAL,GAAgBA,QAAhB;IACA,KAAKW,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,KAAL,GAAa,IAAb;IACA,KAAKA,KAAL,GAAaD,aAAa,CAAC7K,YAAd,CAA2B;MAAEpG,QAAQ,EAAE;IAAZ,CAA3B,CAAb;;IACA,IAAI,CAAC,KAAKkR,KAAV,EAAiB;MACbD,aAAa,CAACE,MAAd,CAAqB1W,IAAI,IAAK,KAAKyW,KAAL,GAAazW,IAA3C;IACH;EACJ;;EACD+V,QAAQ,CAACC,YAAD,EAAe;IACnB,IAAI,CAAC,KAAKS,KAAV,EAAiB;MACb,OAAO,IAAIR,OAAJ,CAAY,CAAC5N,OAAD,EAAUC,MAAV,KAAqB;QACpC;QACA;QACA;QACA;QACA6I,UAAU,CAAC,MAAM;UACb,IAAI,KAAKsF,KAAT,EAAgB;YACZ,KAAKV,QAAL,CAAcC,YAAd,EAA4BjQ,IAA5B,CAAiCsC,OAAjC,EAA0CC,MAA1C;UACH,CAFD,MAGK;YACDD,OAAO,CAAC,IAAD,CAAP;UACH;QACJ,CAPS,EAOP,CAPO,CAAV;MAQH,CAbM,CAAP;IAcH;;IACD,OAAO,KAAKoO,KAAL,CAAWV,QAAX,CAAoBC,YAApB,EAAkCjM,KAAlC,CAAwChP,KAAK,IAAI;MACpD;MACA;MACA,IAAIA,KAAK,IAAIA,KAAK,CAAC0Z,IAAN,KAAe,4BAA5B,EAA0D;QACtDvE,GAAG,CAAC,gEAAD,CAAH;QACA,OAAO,IAAP;MACH,CAHD,MAIK;QACD,OAAO+F,OAAO,CAAC3N,MAAR,CAAevN,KAAf,CAAP;MACH;IACJ,CAVM,CAAP;EAWH;;EACDmb,sBAAsB,CAACC,QAAD,EAAW;IAC7B;IACA;IACA,IAAI,KAAKM,KAAT,EAAgB;MACZ,KAAKA,KAAL,CAAWE,oBAAX,CAAgCR,QAAhC;IACH,CAFD,MAGK;MACD,KAAKK,aAAL,CACKhU,GADL,GAEKuD,IAFL,CAEU/F,IAAI,IAAIA,IAAI,CAAC2W,oBAAL,CAA0BR,QAA1B,CAFlB;IAGH;EACJ;;EACDS,yBAAyB,CAACT,QAAD,EAAW;IAChC,KAAKK,aAAL,CACKhU,GADL,GAEKuD,IAFL,CAEU/F,IAAI,IAAIA,IAAI,CAAC6W,uBAAL,CAA6BV,QAA7B,CAFlB;EAGH;;EACDE,qBAAqB,GAAG;IACpB,IAAIS,YAAY,GAAG,4DACf,KAAKlB,QADU,GAEf,yDAFe,GAGf,yBAHJ;;IAIA,IAAI,gBAAgB,KAAKW,gBAAzB,EAA2C;MACvCO,YAAY,IACR,qEACI,8EADJ,GAEI,UAHR;IAIH,CALD,MAMK,IAAI,oBAAoB,KAAKP,gBAA7B,EAA+C;MAChDO,YAAY,IACR,yEACI,8EADJ,GAEI,UAHR;IAIH,CALI,MAMA;MACDA,YAAY,IACR,qEACI,4DADJ,GAEI,uCAHR;IAIH;;IACD9R,IAAI,CAAC8R,YAAD,CAAJ;EACH;;AAjF2B;AAmFhC;;;AACA,MAAMC,qBAAN,CAA4B;EACxBrX,WAAW,CAACsX,WAAD,EAAc;IACrB,KAAKA,WAAL,GAAmBA,WAAnB;EACH;;EACDjB,QAAQ,CAACC,YAAD,EAAe;IACnB,OAAOC,OAAO,CAAC5N,OAAR,CAAgB;MACnB2O,WAAW,EAAE,KAAKA;IADC,CAAhB,CAAP;EAGH;;EACDd,sBAAsB,CAACC,QAAD,EAAW;IAC7B;IACA;IACAA,QAAQ,CAAC,KAAKa,WAAN,CAAR;EACH;;EACDJ,yBAAyB,CAACT,QAAD,EAAW,CAAG;;EACvCE,qBAAqB,GAAG,CAAG;;AAfH;AAiB5B;;;AACAU,qBAAqB,CAACE,KAAtB,GAA8B,OAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AACA,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,uBAAuB,GAAG,GAAhC;AACA,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,SAAS,GAAG,GAAlB,EACA;AACA;;AACA,MAAMC,eAAe,GAAG,4EAAxB;AACA,MAAMC,kBAAkB,GAAG,IAA3B;AACA,MAAMC,oBAAoB,GAAG,GAA7B;AACA,MAAMC,qBAAqB,GAAG,IAA9B;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,MAAMC,QAAN,CAAe;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACInY,WAAW,CAAC2K,IAAD,EAAOyN,MAAP,EAAe/M,SAAf,EAA0BgN,aAA1B,EAAyC/M,SAAS,GAAG,KAArD,EAA4DgN,cAAc,GAAG,EAA7E,EAAiFC,6BAA6B,GAAG,KAAjH,EAAwHC,eAAe,GAAG,KAA1I,EAAiJ;IACxJ,KAAKJ,MAAL,GAAcA,MAAd;IACA,KAAK/M,SAAL,GAAiBA,SAAjB;IACA,KAAKgN,aAAL,GAAqBA,aAArB;IACA,KAAK/M,SAAL,GAAiBA,SAAjB;IACA,KAAKgN,cAAL,GAAsBA,cAAtB;IACA,KAAKC,6BAAL,GAAqCA,6BAArC;IACA,KAAKC,eAAL,GAAuBA,eAAvB;IACA,KAAKC,KAAL,GAAa9N,IAAI,CAAC4J,WAAL,EAAb;IACA,KAAKmE,OAAL,GAAe,KAAKD,KAAL,CAAWnE,MAAX,CAAkB,KAAKmE,KAAL,CAAWpa,OAAX,CAAmB,GAAnB,IAA0B,CAA5C,CAAf;IACA,KAAKsa,YAAL,GACIxJ,iBAAiB,CAACrM,GAAlB,CAAsB,UAAU6H,IAAhC,KAAyC,KAAK8N,KADlD;EAEH;;EACDG,eAAe,GAAG;IACd,OAAO,KAAKD,YAAL,CAAkBrE,MAAlB,CAAyB,CAAzB,EAA4B,CAA5B,MAAmC,IAA1C;EACH;;EACDuE,YAAY,GAAG;IACX,OAAQ,KAAKH,OAAL,KAAiB,gBAAjB,IACJ,KAAKA,OAAL,KAAiB,qBADrB;EAEH;;EACO,IAAJ/N,IAAI,GAAG;IACP,OAAO,KAAK8N,KAAZ;EACH;;EACO,IAAJ9N,IAAI,CAACmO,OAAD,EAAU;IACd,IAAIA,OAAO,KAAK,KAAKH,YAArB,EAAmC;MAC/B,KAAKA,YAAL,GAAoBG,OAApB;;MACA,IAAI,KAAKF,eAAL,EAAJ,EAA4B;QACxBzJ,iBAAiB,CAACtV,GAAlB,CAAsB,UAAU,KAAK4e,KAArC,EAA4C,KAAKE,YAAjD;MACH;IACJ;EACJ;;EACD3P,QAAQ,GAAG;IACP,IAAIwG,GAAG,GAAG,KAAKuJ,WAAL,EAAV;;IACA,IAAI,KAAKT,cAAT,EAAyB;MACrB9I,GAAG,IAAI,MAAM,KAAK8I,cAAX,GAA4B,GAAnC;IACH;;IACD,OAAO9I,GAAP;EACH;;EACDuJ,WAAW,GAAG;IACV,MAAMjI,QAAQ,GAAG,KAAKsH,MAAL,GAAc,UAAd,GAA2B,SAA5C;IACA,MAAM9a,KAAK,GAAG,KAAKib,6BAAL,GACP,OAAM,KAAKlN,SAAU,EADd,GAER,EAFN;IAGA,OAAQ,GAAEyF,QAAS,GAAE,KAAKnG,IAAK,IAAGrN,KAAM,EAAxC;EACH;;AArDU;;AAuDf,SAAS0b,uBAAT,CAAiCC,QAAjC,EAA2C;EACvC,OAAQA,QAAQ,CAACtO,IAAT,KAAkBsO,QAAQ,CAACN,YAA3B,IACJM,QAAQ,CAACJ,YAAT,EADI,IAEJI,QAAQ,CAACV,6BAFb;AAGH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASW,qBAAT,CAA+BD,QAA/B,EAAyCrd,IAAzC,EAA+Cud,MAA/C,EAAuD;EACnDrM,sDAAM,CAAC,OAAOlR,IAAP,KAAgB,QAAjB,EAA2B,4BAA3B,CAAN;EACAkR,sDAAM,CAAC,OAAOqM,MAAP,KAAkB,QAAnB,EAA6B,8BAA7B,CAAN;EACA,IAAIC,OAAJ;;EACA,IAAIxd,IAAI,KAAKqc,SAAb,EAAwB;IACpBmB,OAAO,GACH,CAACH,QAAQ,CAACb,MAAT,GAAkB,QAAlB,GAA6B,OAA9B,IAAyCa,QAAQ,CAACN,YAAlD,GAAiE,OADrE;EAEH,CAHD,MAIK,IAAI/c,IAAI,KAAKsc,YAAb,EAA2B;IAC5BkB,OAAO,GACH,CAACH,QAAQ,CAACb,MAAT,GAAkB,UAAlB,GAA+B,SAAhC,IACIa,QAAQ,CAACN,YADb,GAEI,OAHR;EAIH,CALI,MAMA;IACD,MAAM,IAAIne,KAAJ,CAAU,8BAA8BoB,IAAxC,CAAN;EACH;;EACD,IAAIod,uBAAuB,CAACC,QAAD,CAA3B,EAAuC;IACnCE,MAAM,CAAC,IAAD,CAAN,GAAeF,QAAQ,CAAC5N,SAAxB;EACH;;EACD,MAAMgO,KAAK,GAAG,EAAd;EACArG,IAAI,CAACmG,MAAD,EAAS,CAACzd,GAAD,EAAMpC,KAAN,KAAgB;IACzB+f,KAAK,CAACnd,IAAN,CAAWR,GAAG,GAAG,GAAN,GAAYpC,KAAvB;EACH,CAFG,CAAJ;EAGA,OAAO8f,OAAO,GAAGC,KAAK,CAACnF,IAAN,CAAW,GAAX,CAAjB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMoF,eAAN,CAAsB;EAClBtZ,WAAW,GAAG;IACV,KAAKuZ,SAAL,GAAiB,EAAjB;EACH;;EACDC,gBAAgB,CAACvZ,IAAD,EAAOwZ,MAAM,GAAG,CAAhB,EAAmB;IAC/B,IAAI,CAAC5M,wDAAQ,CAAC,KAAK0M,SAAN,EAAiBtZ,IAAjB,CAAb,EAAqC;MACjC,KAAKsZ,SAAL,CAAetZ,IAAf,IAAuB,CAAvB;IACH;;IACD,KAAKsZ,SAAL,CAAetZ,IAAf,KAAwBwZ,MAAxB;EACH;;EACD3W,GAAG,GAAG;IACF,OAAOqK,wDAAQ,CAAC,KAAKoM,SAAN,CAAf;EACH;;AAZiB;AAetB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,WAAW,GAAG,EAApB;AACA,MAAMC,SAAS,GAAG,EAAlB;;AACA,SAASC,yBAAT,CAAmCX,QAAnC,EAA6C;EACzC,MAAMY,UAAU,GAAGZ,QAAQ,CAACjQ,QAAT,EAAnB;;EACA,IAAI,CAAC0Q,WAAW,CAACG,UAAD,CAAhB,EAA8B;IAC1BH,WAAW,CAACG,UAAD,CAAX,GAA0B,IAAIP,eAAJ,EAA1B;EACH;;EACD,OAAOI,WAAW,CAACG,UAAD,CAAlB;AACH;;AACD,SAASC,+BAAT,CAAyCb,QAAzC,EAAmDc,eAAnD,EAAoE;EAChE,MAAMF,UAAU,GAAGZ,QAAQ,CAACjQ,QAAT,EAAnB;;EACA,IAAI,CAAC2Q,SAAS,CAACE,UAAD,CAAd,EAA4B;IACxBF,SAAS,CAACE,UAAD,CAAT,GAAwBE,eAAe,EAAvC;EACH;;EACD,OAAOJ,SAAS,CAACE,UAAD,CAAhB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMG,cAAN,CAAqB;EACjB;AACJ;AACA;EACIha,WAAW,CAACia,UAAD,EAAa;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAKC,gBAAL,GAAwB,EAAxB;IACA,KAAKC,kBAAL,GAA0B,CAA1B;IACA,KAAKC,kBAAL,GAA0B,CAAC,CAA3B;IACA,KAAKC,OAAL,GAAe,IAAf;EACH;;EACDC,UAAU,CAACC,WAAD,EAAc5S,QAAd,EAAwB;IAC9B,KAAKyS,kBAAL,GAA0BG,WAA1B;IACA,KAAKF,OAAL,GAAe1S,QAAf;;IACA,IAAI,KAAKyS,kBAAL,GAA0B,KAAKD,kBAAnC,EAAuD;MACnD,KAAKE,OAAL;MACA,KAAKA,OAAL,GAAe,IAAf;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIG,cAAc,CAACC,UAAD,EAAatd,IAAb,EAAmB;IAC7B,KAAK+c,gBAAL,CAAsBO,UAAtB,IAAoCtd,IAApC;;IACA,OAAO,KAAK+c,gBAAL,CAAsB,KAAKC,kBAA3B,CAAP,EAAuD;MACnD,MAAMO,SAAS,GAAG,KAAKR,gBAAL,CAAsB,KAAKC,kBAA3B,CAAlB;MACA,OAAO,KAAKD,gBAAL,CAAsB,KAAKC,kBAA3B,CAAP;;MACA,KAAK,IAAI3d,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGke,SAAS,CAACne,MAA9B,EAAsC,EAAEC,CAAxC,EAA2C;QACvC,IAAIke,SAAS,CAACle,CAAD,CAAb,EAAkB;UACd+Y,cAAc,CAAC,MAAM;YACjB,KAAK0E,UAAL,CAAgBS,SAAS,CAACle,CAAD,CAAzB;UACH,CAFa,CAAd;QAGH;MACJ;;MACD,IAAI,KAAK2d,kBAAL,KAA4B,KAAKC,kBAArC,EAAyD;QACrD,IAAI,KAAKC,OAAT,EAAkB;UACd,KAAKA,OAAL;UACA,KAAKA,OAAL,GAAe,IAAf;QACH;;QACD;MACH;;MACD,KAAKF,kBAAL;IACH;EACJ;;AA7CgB;AAgDrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,6BAA6B,GAAG,OAAtC;AACA,MAAMC,+BAA+B,GAAG,OAAxC;AACA,MAAMC,iCAAiC,GAAG,YAA1C;AACA,MAAMC,8BAA8B,GAAG,SAAvC;AACA,MAAMC,0BAA0B,GAAG,IAAnC;AACA,MAAMC,0BAA0B,GAAG,IAAnC;AACA,MAAMC,8BAA8B,GAAG,KAAvC;AACA,MAAMC,mCAAmC,GAAG,IAA5C;AACA,MAAMC,mCAAmC,GAAG,KAA5C;AACA,MAAMC,oCAAoC,GAAG,IAA7C;AACA,MAAMC,4BAA4B,GAAG,GAArC;AACA,MAAMC,6CAA6C,GAAG,QAAtD,EACA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAG,IAA1B;AACA,MAAMC,eAAe,GAAG,EAAxB,EAA4B;;AAC5B,MAAMC,gBAAgB,GAAGF,iBAAiB,GAAGC,eAA7C;AACA;AACA;AACA;AACA;AACA;;AACA,MAAME,0BAA0B,GAAG,KAAnC;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG,KAA3B;AACA;AACA;AACA;;AACA,MAAMC,qBAAN,CAA4B;EACxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI5b,WAAW,CAAC6b,MAAD,EAAS5C,QAAT,EAAmB6C,aAAnB,EAAkCC,aAAlC,EAAiDC,SAAjD,EAA4DC,kBAA5D,EAAgFC,aAAhF,EAA+F;IACtG,KAAKL,MAAL,GAAcA,MAAd;IACA,KAAK5C,QAAL,GAAgBA,QAAhB;IACA,KAAK6C,aAAL,GAAqBA,aAArB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,kBAAL,GAA0BA,kBAA1B;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,SAAL,GAAiB,CAAjB;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKC,cAAL,GAAsB,KAAtB;IACA,KAAKC,IAAL,GAAY7L,UAAU,CAACoL,MAAD,CAAtB;IACA,KAAKU,MAAL,GAAc3C,yBAAyB,CAACX,QAAD,CAAvC;;IACA,KAAKuD,KAAL,GAAcrD,MAAD,IAAY;MACrB;MACA,IAAI,KAAK4C,aAAT,EAAwB;QACpB5C,MAAM,CAACnB,qBAAD,CAAN,GAAgC,KAAK+D,aAArC;MACH;;MACD,OAAO7C,qBAAqB,CAACD,QAAD,EAAWf,YAAX,EAAyBiB,MAAzB,CAA5B;IACH,CAND;EAOH;EACD;AACJ;AACA;AACA;;;EACIsD,IAAI,CAACC,SAAD,EAAYpS,YAAZ,EAA0B;IAC1B,KAAKqS,aAAL,GAAqB,CAArB;IACA,KAAKC,aAAL,GAAqBtS,YAArB;IACA,KAAKuS,eAAL,GAAuB,IAAI7C,cAAJ,CAAmB0C,SAAnB,CAAvB;IACA,KAAKI,SAAL,GAAiB,KAAjB;IACA,KAAKC,oBAAL,GAA4BtL,UAAU,CAAC,MAAM;MACzC,KAAK6K,IAAL,CAAU,8BAAV,EADyC,CAEzC;;MACA,KAAKU,SAAL;MACA,KAAKD,oBAAL,GAA4B,IAA5B,CAJyC,CAKzC;IACH,CANqC,EAMnCrL,IAAI,CAACC,KAAL,CAAWgK,kBAAX,CANmC,CAAtC,CAL0B,CAY1B;;IACAxK,mBAAmB,CAAC,MAAM;MACtB,IAAI,KAAK2L,SAAT,EAAoB;QAChB;MACH,CAHqB,CAItB;;;MACA,KAAKG,eAAL,GAAuB,IAAIC,0BAAJ,CAA+B,CAAC,GAAGtb,IAAJ,KAAa;QAC/D,MAAM,CAACub,OAAD,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,IAAoC3b,IAA1C;QACA,KAAK4b,uBAAL,CAA6B5b,IAA7B;;QACA,IAAI,CAAC,KAAKqb,eAAV,EAA2B;UACvB,OADuB,CACf;QACX;;QACD,IAAI,KAAKF,oBAAT,EAA+B;UAC3BU,YAAY,CAAC,KAAKV,oBAAN,CAAZ;UACA,KAAKA,oBAAL,GAA4B,IAA5B;QACH;;QACD,KAAKV,cAAL,GAAsB,IAAtB;;QACA,IAAIc,OAAO,KAAKxC,6BAAhB,EAA+C;UAC3C,KAAKrL,EAAL,GAAU8N,IAAV;UACA,KAAKM,QAAL,GAAgBL,IAAhB;QACH,CAHD,MAIK,IAAIF,OAAO,KAAKvC,+BAAhB,EAAiD;UAClD;UACA,IAAIwC,IAAJ,EAAU;YACN;YACA;YACA,KAAKH,eAAL,CAAqBU,YAArB,GAAoC,KAApC,CAHM,CAIN;YACA;;YACA,KAAKd,eAAL,CAAqBvC,UAArB,CAAgC8C,IAAhC,EAAsC,MAAM;cACxC,KAAKJ,SAAL;YACH,CAFD;UAGH,CATD,MAUK;YACD,KAAKA,SAAL;UACH;QACJ,CAfI,MAgBA;UACD,MAAM,IAAIxiB,KAAJ,CAAU,oCAAoC2iB,OAA9C,CAAN;QACH;MACJ,CAlCsB,EAkCpB,CAAC,GAAGvb,IAAJ,KAAa;QACZ,MAAM,CAACgc,EAAD,EAAKzgB,IAAL,IAAayE,IAAnB;QACA,KAAK4b,uBAAL,CAA6B5b,IAA7B;QACA,KAAKib,eAAL,CAAqBrC,cAArB,CAAoCoD,EAApC,EAAwCzgB,IAAxC;MACH,CAtCsB,EAsCpB,MAAM;QACL,KAAK6f,SAAL;MACH,CAxCsB,EAwCpB,KAAKR,KAxCe,CAAvB,CALsB,CA8CtB;MACA;;MACA,MAAMqB,SAAS,GAAG,EAAlB;MACAA,SAAS,CAAClD,6BAAD,CAAT,GAA2C,GAA3C;MACAkD,SAAS,CAAC5C,8BAAD,CAAT,GAA4CvJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACoM,MAAL,KAAgB,SAA3B,CAA5C;;MACA,IAAI,KAAKb,eAAL,CAAqBc,wBAAzB,EAAmD;QAC/CF,SAAS,CAAC3C,mCAAD,CAAT,GACI,KAAK+B,eAAL,CAAqBc,wBADzB;MAEH;;MACDF,SAAS,CAACpG,aAAD,CAAT,GAA2BD,gBAA3B;;MACA,IAAI,KAAKyE,kBAAT,EAA6B;QACzB4B,SAAS,CAACnG,uBAAD,CAAT,GAAqC,KAAKuE,kBAA1C;MACH;;MACD,IAAI,KAAKC,aAAT,EAAwB;QACpB2B,SAAS,CAAC/F,kBAAD,CAAT,GAAgC,KAAKoE,aAArC;MACH;;MACD,IAAI,KAAKJ,aAAT,EAAwB;QACpB+B,SAAS,CAAC9F,oBAAD,CAAT,GAAkC,KAAK+D,aAAvC;MACH;;MACD,IAAI,KAAKC,aAAT,EAAwB;QACpB8B,SAAS,CAAC7F,qBAAD,CAAT,GAAmC,KAAK+D,aAAxC;MACH;;MACD,IAAI,OAAOlL,QAAP,KAAoB,WAApB,IACAA,QAAQ,CAACmN,QADT,IAEAnG,eAAe,CAACpD,IAAhB,CAAqB5D,QAAQ,CAACmN,QAA9B,CAFJ,EAE6C;QACzCH,SAAS,CAAClG,aAAD,CAAT,GAA2BC,SAA3B;MACH;;MACD,MAAMqG,UAAU,GAAG,KAAKzB,KAAL,CAAWqB,SAAX,CAAnB;MACA,KAAKvB,IAAL,CAAU,iCAAiC2B,UAA3C;MACA,KAAKhB,eAAL,CAAqBiB,MAArB,CAA4BD,UAA5B,EAAwC,MAAM;QAC1C;MACH,CAFD;IAGH,CA9EkB,CAAnB;EA+EH;EACD;AACJ;AACA;;;EACIE,KAAK,GAAG;IACJ,KAAKlB,eAAL,CAAqBmB,aAArB,CAAmC,KAAK9O,EAAxC,EAA4C,KAAKoO,QAAjD;IACA,KAAKW,sBAAL,CAA4B,KAAK/O,EAAjC,EAAqC,KAAKoO,QAA1C;EACH;EACD;AACJ;AACA;;;EACqB,OAAVY,UAAU,GAAG;IAChB1C,qBAAqB,CAAC2C,WAAtB,GAAoC,IAApC;EACH;EACD;AACJ;AACA;;;EACwB,OAAbC,aAAa,GAAG;IACnB5C,qBAAqB,CAAC6C,cAAtB,GAAuC,IAAvC;EACH,CApJuB,CAqJxB;;;EACkB,OAAXC,WAAW,GAAG;IACjB,IAAI3R,yDAAS,EAAb,EAAiB;MACb,OAAO,KAAP;IACH,CAFD,MAGK,IAAI6O,qBAAqB,CAAC2C,WAA1B,EAAuC;MACxC,OAAO,IAAP;IACH,CAFI,MAGA;MACD;MACA;MACA,OAAQ,CAAC3C,qBAAqB,CAAC6C,cAAvB,IACJ,OAAOrN,QAAP,KAAoB,WADhB,IAEJA,QAAQ,CAACuN,aAAT,IAA0B,IAFtB,IAGJ,CAACnK,8BAA8B,EAH3B,IAIJ,CAACG,iBAAiB,EAJtB;IAKH;EACJ;EACD;AACJ;AACA;;;EACIiK,qBAAqB,GAAG,CAAG;EAC3B;AACJ;AACA;;;EACIC,SAAS,GAAG;IACR,KAAK/B,SAAL,GAAiB,IAAjB;;IACA,IAAI,KAAKG,eAAT,EAA0B;MACtB,KAAKA,eAAL,CAAqB6B,KAArB;MACA,KAAK7B,eAAL,GAAuB,IAAvB;IACH,CALO,CAMR;;;IACA,IAAI,KAAK8B,cAAT,EAAyB;MACrB3N,QAAQ,CAACI,IAAT,CAAcwN,WAAd,CAA0B,KAAKD,cAA/B;MACA,KAAKA,cAAL,GAAsB,IAAtB;IACH;;IACD,IAAI,KAAKhC,oBAAT,EAA+B;MAC3BU,YAAY,CAAC,KAAKV,oBAAN,CAAZ;MACA,KAAKA,oBAAL,GAA4B,IAA5B;IACH;EACJ;EACD;AACJ;AACA;;;EACIC,SAAS,GAAG;IACR,IAAI,CAAC,KAAKF,SAAV,EAAqB;MACjB,KAAKR,IAAL,CAAU,4BAAV;MACA,KAAKuC,SAAL;;MACA,IAAI,KAAKjC,aAAT,EAAwB;QACpB,KAAKA,aAAL,CAAmB,KAAKP,cAAxB;QACA,KAAKO,aAAL,GAAqB,IAArB;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACIkC,KAAK,GAAG;IACJ,IAAI,CAAC,KAAKhC,SAAV,EAAqB;MACjB,KAAKR,IAAL,CAAU,2BAAV;MACA,KAAKuC,SAAL;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACII,IAAI,CAAC9hB,IAAD,EAAO;IACP,MAAM+hB,OAAO,GAAGvS,yDAAS,CAACxP,IAAD,CAAzB;IACA,KAAKgf,SAAL,IAAkB+C,OAAO,CAAC3iB,MAA1B;IACA,KAAKggB,MAAL,CAAY/C,gBAAZ,CAA6B,YAA7B,EAA2C0F,OAAO,CAAC3iB,MAAnD,EAHO,CAIP;;IACA,MAAM4iB,UAAU,GAAG/R,4DAAY,CAAC8R,OAAD,CAA/B,CALO,CAMP;IACA;;IACA,MAAMrM,QAAQ,GAAGF,iBAAiB,CAACwM,UAAD,EAAa1D,gBAAb,CAAlC,CARO,CASP;IACA;;IACA,KAAK,IAAIjf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqW,QAAQ,CAACtW,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;MACtC,KAAKygB,eAAL,CAAqBmC,cAArB,CAAoC,KAAKzC,aAAzC,EAAwD9J,QAAQ,CAACtW,MAAjE,EAAyEsW,QAAQ,CAACrW,CAAD,CAAjF;MACA,KAAKmgB,aAAL;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACI0B,sBAAsB,CAAC/O,EAAD,EAAK+P,EAAL,EAAS;IAC3B,IAAItS,yDAAS,EAAb,EAAiB;MACb;IACH;;IACD,KAAKgS,cAAL,GAAsB3N,QAAQ,CAACuN,aAAT,CAAuB,QAAvB,CAAtB;IACA,MAAMd,SAAS,GAAG,EAAlB;IACAA,SAAS,CAACvC,6CAAD,CAAT,GAA2D,GAA3D;IACAuC,SAAS,CAAC9C,0BAAD,CAAT,GAAwCzL,EAAxC;IACAuO,SAAS,CAAC7C,0BAAD,CAAT,GAAwCqE,EAAxC;IACA,KAAKN,cAAL,CAAoBO,GAApB,GAA0B,KAAK9C,KAAL,CAAWqB,SAAX,CAA1B;IACA,KAAKkB,cAAL,CAAoBQ,KAApB,CAA0BC,OAA1B,GAAoC,MAApC;IACApO,QAAQ,CAACI,IAAT,CAAciO,WAAd,CAA0B,KAAKV,cAA/B;EACH;EACD;AACJ;AACA;;;EACIvB,uBAAuB,CAAC5b,IAAD,EAAO;IAC1B;IACA,MAAMwa,aAAa,GAAGzP,yDAAS,CAAC/K,IAAD,CAAT,CAAgBrF,MAAtC;IACA,KAAK6f,aAAL,IAAsBA,aAAtB;IACA,KAAKG,MAAL,CAAY/C,gBAAZ,CAA6B,gBAA7B,EAA+C4C,aAA/C;EACH;;AApQuB;AAsQ5B;AACA;AACA;;;AACA,MAAMc,0BAAN,CAAiC;EAC7B;AACJ;AACA;AACA;AACA;AACA;EACIld,WAAW,CAAC0f,SAAD,EAAYC,WAAZ,EAAyBrV,YAAzB,EAAuCkS,KAAvC,EAA8C;IACrD,KAAKlS,YAAL,GAAoBA,YAApB;IACA,KAAKkS,KAAL,GAAaA,KAAb,CAFqD,CAGrD;IACA;;IACA,KAAKoD,mBAAL,GAA2B,IAAIC,GAAJ,EAA3B,CALqD,CAMrD;;IACA,KAAKC,WAAL,GAAmB,EAAnB,CAPqD,CAQrD;IACA;IACA;IACA;IACA;;IACA,KAAKC,aAAL,GAAqBrO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACoM,MAAL,KAAgB,SAA3B,CAArB,CAbqD,CAcrD;IACA;;IACA,KAAKH,YAAL,GAAoB,IAApB;;IACA,IAAI,CAAC5Q,yDAAS,EAAd,EAAkB;MACd;MACA;MACA;MACA;MACA,KAAKgR,wBAAL,GAAgC1O,aAAa,EAA7C;MACAL,MAAM,CAAC6L,iCAAiC,GAAG,KAAKkD,wBAA1C,CAAN,GAA4E2B,SAA5E;MACA1Q,MAAM,CAAC8L,8BAA8B,GAAG,KAAKiD,wBAAvC,CAAN,GACI4B,WADJ,CAPc,CASd;;MACA,KAAKK,QAAL,GAAgB9C,0BAA0B,CAAC+C,aAA3B,EAAhB,CAVc,CAWd;;MACA,IAAIC,MAAM,GAAG,EAAb,CAZc,CAad;MACA;;MACA,IAAI,KAAKF,QAAL,CAAcV,GAAd,IACA,KAAKU,QAAL,CAAcV,GAAd,CAAkBhL,MAAlB,CAAyB,CAAzB,EAA4B,cAAc/X,MAA1C,MAAsD,aAD1D,EACyE;QACrE,MAAM4jB,aAAa,GAAG/O,QAAQ,CAACgP,MAA/B;QACAF,MAAM,GAAG,8BAA8BC,aAA9B,GAA8C,aAAvD;MACH;;MACD,MAAME,cAAc,GAAG,iBAAiBH,MAAjB,GAA0B,gBAAjD;;MACA,IAAI;QACA,KAAKF,QAAL,CAAcM,GAAd,CAAkB7D,IAAlB;QACA,KAAKuD,QAAL,CAAcM,GAAd,CAAkBC,KAAlB,CAAwBF,cAAxB;QACA,KAAKL,QAAL,CAAcM,GAAd,CAAkBxB,KAAlB;MACH,CAJD,CAKA,OAAO5P,CAAP,EAAU;QACNsB,GAAG,CAAC,yBAAD,CAAH;;QACA,IAAItB,CAAC,CAACsG,KAAN,EAAa;UACThF,GAAG,CAACtB,CAAC,CAACsG,KAAH,CAAH;QACH;;QACDhF,GAAG,CAACtB,CAAD,CAAH;MACH;IACJ,CAjCD,MAkCK;MACD,KAAKwQ,SAAL,GAAiBA,SAAjB;MACA,KAAKC,WAAL,GAAmBA,WAAnB;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACwB,OAAbM,aAAa,GAAG;IACnB,MAAMO,MAAM,GAAGpP,QAAQ,CAACuN,aAAT,CAAuB,QAAvB,CAAf;IACA6B,MAAM,CAACjB,KAAP,CAAaC,OAAb,GAAuB,MAAvB,CAFmB,CAGnB;;IACA,IAAIpO,QAAQ,CAACI,IAAb,EAAmB;MACfJ,QAAQ,CAACI,IAAT,CAAciO,WAAd,CAA0Be,MAA1B;;MACA,IAAI;QACA;QACA;QACA;QACA,MAAMjhB,CAAC,GAAGihB,MAAM,CAACC,aAAP,CAAqBrP,QAA/B;;QACA,IAAI,CAAC7R,CAAL,EAAQ;UACJ;UACAiR,GAAG,CAAC,+BAAD,CAAH;QACH;MACJ,CATD,CAUA,OAAOtB,CAAP,EAAU;QACN,MAAMkR,MAAM,GAAGhP,QAAQ,CAACgP,MAAxB;QACAI,MAAM,CAAClB,GAAP,GACI,kEACIc,MADJ,GAEI,0BAHR;MAIH;IACJ,CAnBD,MAoBK;MACD;MACA;MACA,MAAM,mGAAN;IACH,CA5BkB,CA6BnB;;;IACA,IAAII,MAAM,CAACE,eAAX,EAA4B;MACxBF,MAAM,CAACF,GAAP,GAAaE,MAAM,CAACE,eAApB,CADwB,CACa;IACxC,CAFD,MAGK,IAAIF,MAAM,CAACC,aAAX,EAA0B;MAC3BD,MAAM,CAACF,GAAP,GAAaE,MAAM,CAACC,aAAP,CAAqBrP,QAAlC,CAD2B,CACiB;MAC5C;IACH,CAHI,MAIA,IAAIoP,MAAM,CAACpP,QAAX,EAAqB;MACtB;MACAoP,MAAM,CAACF,GAAP,GAAaE,MAAM,CAACpP,QAApB,CAFsB,CAEQ;IACjC;;IACD,OAAOoP,MAAP;EACH;EACD;AACJ;AACA;;;EACI1B,KAAK,GAAG;IACJ;IACA,KAAK6B,KAAL,GAAa,KAAb;;IACA,IAAI,KAAKX,QAAT,EAAmB;MACf;MACA;MACA;MACA,KAAKA,QAAL,CAAcM,GAAd,CAAkB9O,IAAlB,CAAuBoP,WAAvB,GAAqC,EAArC;MACAnP,UAAU,CAAC,MAAM;QACb,IAAI,KAAKuO,QAAL,KAAkB,IAAtB,EAA4B;UACxB5O,QAAQ,CAACI,IAAT,CAAcwN,WAAd,CAA0B,KAAKgB,QAA/B;UACA,KAAKA,QAAL,GAAgB,IAAhB;QACH;MACJ,CALS,EAKPtO,IAAI,CAACC,KAAL,CAAW,CAAX,CALO,CAAV;IAMH,CAdG,CAeJ;;;IACA,MAAMrH,YAAY,GAAG,KAAKA,YAA1B;;IACA,IAAIA,YAAJ,EAAkB;MACd,KAAKA,YAAL,GAAoB,IAApB;MACAA,YAAY;IACf;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACI8T,aAAa,CAAC9O,EAAD,EAAK+P,EAAL,EAAS;IAClB,KAAKwB,IAAL,GAAYvR,EAAZ;IACA,KAAKwR,IAAL,GAAYzB,EAAZ;IACA,KAAKsB,KAAL,GAAa,IAAb,CAHkB,CAIlB;;IACA,OAAO,KAAKI,WAAL,EAAP,EAA2B,CAAG;EACjC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIA,WAAW,GAAG;IACV;IACA;IACA;IACA,IAAI,KAAKJ,KAAL,IACA,KAAKhD,YADL,IAEA,KAAKiC,mBAAL,CAAyBrY,IAAzB,IAAiC,KAAKuY,WAAL,CAAiBvjB,MAAjB,GAA0B,CAA1B,GAA8B,CAA9B,GAAkC,CAAnE,CAFJ,EAE2E;MACvE;MACA,KAAKwjB,aAAL;MACA,MAAMlC,SAAS,GAAG,EAAlB;MACAA,SAAS,CAAC9C,0BAAD,CAAT,GAAwC,KAAK8F,IAA7C;MACAhD,SAAS,CAAC7C,0BAAD,CAAT,GAAwC,KAAK8F,IAA7C;MACAjD,SAAS,CAAC5C,8BAAD,CAAT,GAA4C,KAAK8E,aAAjD;MACA,IAAIiB,MAAM,GAAG,KAAKxE,KAAL,CAAWqB,SAAX,CAAb,CAPuE,CAQvE;;MACA,IAAIoD,aAAa,GAAG,EAApB;MACA,IAAIzkB,CAAC,GAAG,CAAR;;MACA,OAAO,KAAKsjB,WAAL,CAAiBvjB,MAAjB,GAA0B,CAAjC,EAAoC;QAChC;QACA,MAAM2kB,OAAO,GAAG,KAAKpB,WAAL,CAAiB,CAAjB,CAAhB;;QACA,IAAIoB,OAAO,CAACC,CAAR,CAAU5kB,MAAV,GACAif,eADA,GAEAyF,aAAa,CAAC1kB,MAFd,IAGAgf,iBAHJ,EAGuB;UACnB;UACA,MAAM6F,MAAM,GAAG,KAAKtB,WAAL,CAAiBuB,KAAjB,EAAf;UACAJ,aAAa,GACTA,aAAa,GACT,GADJ,GAEI9F,mCAFJ,GAGI3e,CAHJ,GAII,GAJJ,GAKI4kB,MAAM,CAACE,GALX,GAMI,GANJ,GAOIlG,oCAPJ,GAQI5e,CARJ,GASI,GATJ,GAUI4kB,MAAM,CAACG,EAVX,GAWI,GAXJ,GAYIlG,4BAZJ,GAaI7e,CAbJ,GAcI,GAdJ,GAeI4kB,MAAM,CAACD,CAhBf;UAiBA3kB,CAAC;QACJ,CAxBD,MAyBK;UACD;QACH;MACJ;;MACDwkB,MAAM,GAAGA,MAAM,GAAGC,aAAlB;MACA,KAAKO,eAAL,CAAqBR,MAArB,EAA6B,KAAKjB,aAAlC;MACA,OAAO,IAAP;IACH,CAhDD,MAiDK;MACD,OAAO,KAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIX,cAAc,CAACqC,MAAD,EAASC,SAAT,EAAoBvkB,IAApB,EAA0B;IACpC;IACA,KAAK2iB,WAAL,CAAiB5jB,IAAjB,CAAsB;MAAEolB,GAAG,EAAEG,MAAP;MAAeF,EAAE,EAAEG,SAAnB;MAA8BP,CAAC,EAAEhkB;IAAjC,CAAtB,EAFoC,CAGpC;IACA;;IACA,IAAI,KAAKwjB,KAAT,EAAgB;MACZ,KAAKI,WAAL;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIS,eAAe,CAAC1W,GAAD,EAAM6W,MAAN,EAAc;IACzB;IACA,KAAK/B,mBAAL,CAAyBgC,GAAzB,CAA6BD,MAA7B;;IACA,MAAME,YAAY,GAAG,MAAM;MACvB,KAAKjC,mBAAL,CAAyBnV,MAAzB,CAAgCkX,MAAhC;MACA,KAAKZ,WAAL;IACH,CAHD,CAHyB,CAOzB;IACA;;;IACA,MAAMe,gBAAgB,GAAGrQ,UAAU,CAACoQ,YAAD,EAAenQ,IAAI,CAACC,KAAL,CAAW+J,0BAAX,CAAf,CAAnC;;IACA,MAAMqG,YAAY,GAAG,MAAM;MACvB;MACAtE,YAAY,CAACqE,gBAAD,CAAZ,CAFuB,CAGvB;;MACAD,YAAY;IACf,CALD;;IAMA,KAAK3D,MAAL,CAAYpT,GAAZ,EAAiBiX,YAAjB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI7D,MAAM,CAACpT,GAAD,EAAMkX,MAAN,EAAc;IAChB,IAAIjV,yDAAS,EAAb,EAAiB;MACb;MACA,KAAKkV,cAAL,CAAoBnX,GAApB,EAAyBkX,MAAzB;IACH,CAHD,MAIK;MACDvQ,UAAU,CAAC,MAAM;QACb,IAAI;UACA;UACA,IAAI,CAAC,KAAKkM,YAAV,EAAwB;YACpB;UACH;;UACD,MAAMuE,SAAS,GAAG,KAAKlC,QAAL,CAAcM,GAAd,CAAkB3B,aAAlB,CAAgC,QAAhC,CAAlB;UACAuD,SAAS,CAACtmB,IAAV,GAAiB,iBAAjB;UACAsmB,SAAS,CAACC,KAAV,GAAkB,IAAlB;UACAD,SAAS,CAAC5C,GAAV,GAAgBxU,GAAhB,CARA,CASA;;UACAoX,SAAS,CAACE,MAAV,GAAmBF,SAAS,CAACG,kBAAV,GACf,YAAY;YACR;YACA,MAAMC,MAAM,GAAGJ,SAAS,CAAC7Q,UAAzB;;YACA,IAAI,CAACiR,MAAD,IAAWA,MAAM,KAAK,QAAtB,IAAkCA,MAAM,KAAK,UAAjD,EAA6D;cACzD;cACAJ,SAAS,CAACE,MAAV,GAAmBF,SAAS,CAACG,kBAAV,GAA+B,IAAlD;;cACA,IAAIH,SAAS,CAACK,UAAd,EAA0B;gBACtBL,SAAS,CAACK,UAAV,CAAqBvD,WAArB,CAAiCkD,SAAjC;cACH;;cACDF,MAAM;YACT;UACJ,CAZL;;UAaAE,SAAS,CAACM,OAAV,GAAoB,MAAM;YACtBhS,GAAG,CAAC,sCAAsC1F,GAAvC,CAAH;YACA,KAAK6S,YAAL,GAAoB,KAApB;YACA,KAAKmB,KAAL;UACH,CAJD;;UAKA,KAAKkB,QAAL,CAAcM,GAAd,CAAkB9O,IAAlB,CAAuBiO,WAAvB,CAAmCyC,SAAnC;QACH,CA7BD,CA8BA,OAAOhT,CAAP,EAAU,CACN;QACH;MACJ,CAlCS,EAkCPwC,IAAI,CAACC,KAAL,CAAW,CAAX,CAlCO,CAAV;IAmCH;EACJ;;AAxS4B;AA2SjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM8Q,wBAAwB,GAAG,KAAjC;AACA,MAAMC,4BAA4B,GAAG,KAArC;AACA,IAAIC,aAAa,GAAG,IAApB;;AACA,IAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC;EACrCD,aAAa,GAAGC,YAAhB;AACH,CAFD,MAGK,IAAI,OAAOC,SAAP,KAAqB,WAAzB,EAAsC;EACvCF,aAAa,GAAGE,SAAhB;AACH;AACD;AACA;AACA;;;AACA,MAAMC,mBAAN,CAA0B;EACtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI9iB,WAAW,CAAC6b,MAAD,EAAS5C,QAAT,EAAmB6C,aAAnB,EAAkCC,aAAlC,EAAiDC,SAAjD,EAA4DC,kBAA5D,EAAgFC,aAAhF,EAA+F;IACtG,KAAKL,MAAL,GAAcA,MAAd;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAK+G,cAAL,GAAsB,IAAtB;IACA,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKC,WAAL,GAAmB,CAAnB;IACA,KAAK9G,SAAL,GAAiB,CAAjB;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKE,IAAL,GAAY7L,UAAU,CAAC,KAAKoL,MAAN,CAAtB;IACA,KAAKU,MAAL,GAAc3C,yBAAyB,CAACX,QAAD,CAAvC;IACA,KAAKG,OAAL,GAAe0J,mBAAmB,CAACI,cAApB,CAAmCjK,QAAnC,EAA6CgD,kBAA7C,EAAiEC,aAAjE,EAAgFH,aAAhF,EAA+FD,aAA/F,CAAf;IACA,KAAKxQ,SAAL,GAAiB2N,QAAQ,CAAC3N,SAA1B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACyB,OAAd4X,cAAc,CAACjK,QAAD,EAAWgD,kBAAX,EAA+BC,aAA/B,EAA8CH,aAA9C,EAA6DD,aAA7D,EAA4E;IAC7F,MAAM+B,SAAS,GAAG,EAAlB;IACAA,SAAS,CAACpG,aAAD,CAAT,GAA2BD,gBAA3B;;IACA,IAAI,CAACzK,yDAAS,EAAV,IACA,OAAO8D,QAAP,KAAoB,WADpB,IAEAA,QAAQ,CAACmN,QAFT,IAGAnG,eAAe,CAACpD,IAAhB,CAAqB5D,QAAQ,CAACmN,QAA9B,CAHJ,EAG6C;MACzCH,SAAS,CAAClG,aAAD,CAAT,GAA2BC,SAA3B;IACH;;IACD,IAAIqE,kBAAJ,EAAwB;MACpB4B,SAAS,CAACnG,uBAAD,CAAT,GAAqCuE,kBAArC;IACH;;IACD,IAAIC,aAAJ,EAAmB;MACf2B,SAAS,CAAC/F,kBAAD,CAAT,GAAgCoE,aAAhC;IACH;;IACD,IAAIH,aAAJ,EAAmB;MACf8B,SAAS,CAAC7F,qBAAD,CAAT,GAAmC+D,aAAnC;IACH;;IACD,IAAID,aAAJ,EAAmB;MACf+B,SAAS,CAAC9F,oBAAD,CAAT,GAAkC+D,aAAlC;IACH;;IACD,OAAO5C,qBAAqB,CAACD,QAAD,EAAWhB,SAAX,EAAsB4F,SAAtB,CAA5B;EACH;EACD;AACJ;AACA;AACA;;;EACIpB,IAAI,CAACC,SAAD,EAAYpS,YAAZ,EAA0B;IAC1B,KAAKA,YAAL,GAAoBA,YAApB;IACA,KAAKoS,SAAL,GAAiBA,SAAjB;IACA,KAAKJ,IAAL,CAAU,6BAA6B,KAAKlD,OAA5C;IACA,KAAKiD,cAAL,GAAsB,KAAtB,CAJ0B,CAK1B;;IACAlN,iBAAiB,CAACtV,GAAlB,CAAsB,4BAAtB,EAAoD,IAApD;;IACA,IAAI;MACA,IAAIwF,OAAJ;;MACA,IAAI0N,yDAAS,EAAb,EAAiB;QACb,MAAMoW,MAAM,GAAG,KAAK7X,SAAL,GAAiB,WAAjB,GAA+B,MAA9C,CADa,CAEb;;QACAjM,OAAO,GAAG;UACN+jB,OAAO,EAAE;YACL,cAAe,YAAW5L,gBAAiB,IAAGhL,WAAY,IAAG6W,OAAO,CAACC,QAAS,IAAGH,MAAO,EADnF;YAEL,oBAAoB,KAAKrH,aAAL,IAAsB;UAFrC;QADH,CAAV,CAHa,CASb;QACA;QACA;QACA;QACA;;QACA,IAAI,KAAKE,SAAT,EAAoB;UAChB3c,OAAO,CAAC+jB,OAAR,CAAgB,eAAhB,IAAoC,UAAS,KAAKpH,SAAU,EAA5D;QACH;;QACD,IAAI,KAAKD,aAAT,EAAwB;UACpB1c,OAAO,CAAC+jB,OAAR,CAAgB,qBAAhB,IAAyC,KAAKrH,aAA9C;QACH,CAnBY,CAoBb;;;QACA,MAAMwH,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;QACA,MAAMG,KAAK,GAAG,KAAKpK,OAAL,CAAa/a,OAAb,CAAqB,QAArB,MAAmC,CAAnC,GACRklB,GAAG,CAAC,aAAD,CAAH,IAAsBA,GAAG,CAAC,aAAD,CADjB,GAERA,GAAG,CAAC,YAAD,CAAH,IAAqBA,GAAG,CAAC,YAAD,CAF9B;;QAGA,IAAIC,KAAJ,EAAW;UACPnkB,OAAO,CAAC,OAAD,CAAP,GAAmB;YAAEokB,MAAM,EAAED;UAAV,CAAnB;QACH;MACJ;;MACD,KAAKE,MAAL,GAAc,IAAIf,aAAJ,CAAkB,KAAKvJ,OAAvB,EAAgC,EAAhC,EAAoC/Z,OAApC,CAAd;IACH,CAhCD,CAiCA,OAAO6P,CAAP,EAAU;MACN,KAAKoN,IAAL,CAAU,gCAAV;MACA,MAAMjhB,KAAK,GAAG6T,CAAC,CAAC1J,OAAF,IAAa0J,CAAC,CAAC/R,IAA7B;;MACA,IAAI9B,KAAJ,EAAW;QACP,KAAKihB,IAAL,CAAUjhB,KAAV;MACH;;MACD,KAAK2hB,SAAL;MACA;IACH;;IACD,KAAK0G,MAAL,CAAYC,MAAZ,GAAqB,MAAM;MACvB,KAAKrH,IAAL,CAAU,sBAAV;MACA,KAAKD,cAAL,GAAsB,IAAtB;IACH,CAHD;;IAIA,KAAKqH,MAAL,CAAYE,OAAZ,GAAsB,MAAM;MACxB,KAAKtH,IAAL,CAAU,wCAAV;MACA,KAAKoH,MAAL,GAAc,IAAd;MACA,KAAK1G,SAAL;IACH,CAJD;;IAKA,KAAK0G,MAAL,CAAYG,SAAZ,GAAwBC,CAAC,IAAI;MACzB,KAAKC,mBAAL,CAAyBD,CAAzB;IACH,CAFD;;IAGA,KAAKJ,MAAL,CAAYlB,OAAZ,GAAsBtT,CAAC,IAAI;MACvB,KAAKoN,IAAL,CAAU,uCAAV,EADuB,CAEvB;;MACA,MAAMjhB,KAAK,GAAG6T,CAAC,CAAC1J,OAAF,IAAa0J,CAAC,CAAC/R,IAA7B;;MACA,IAAI9B,KAAJ,EAAW;QACP,KAAKihB,IAAL,CAAUjhB,KAAV;MACH;;MACD,KAAK2hB,SAAL;IACH,CARD;EASH;EACD;AACJ;AACA;;;EACImB,KAAK,GAAG,CAAG;;EACS,OAAbK,aAAa,GAAG;IACnBsE,mBAAmB,CAACrE,cAApB,GAAqC,IAArC;EACH;;EACiB,OAAXC,WAAW,GAAG;IACjB,IAAIsF,YAAY,GAAG,KAAnB;;IACA,IAAI,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAACvO,SAAlD,EAA6D;MACzD,MAAMwO,eAAe,GAAG,gCAAxB;MACA,MAAMC,eAAe,GAAGF,SAAS,CAACvO,SAAV,CAAoB0O,KAApB,CAA0BF,eAA1B,CAAxB;;MACA,IAAIC,eAAe,IAAIA,eAAe,CAAC5nB,MAAhB,GAAyB,CAAhD,EAAmD;QAC/C,IAAI8nB,UAAU,CAACF,eAAe,CAAC,CAAD,CAAhB,CAAV,GAAiC,GAArC,EAA0C;UACtCH,YAAY,GAAG,IAAf;QACH;MACJ;IACJ;;IACD,OAAQ,CAACA,YAAD,IACJrB,aAAa,KAAK,IADd,IAEJ,CAACG,mBAAmB,CAACrE,cAFzB;EAGH;EACD;AACJ;AACA;;;EAC2B,OAAhB6F,gBAAgB,GAAG;IACtB;IACA;IACA,OAAQnV,iBAAiB,CAACN,iBAAlB,IACJM,iBAAiB,CAACrM,GAAlB,CAAsB,4BAAtB,MAAwD,IAD5D;EAEH;;EACD8b,qBAAqB,GAAG;IACpBzP,iBAAiB,CAACzQ,MAAlB,CAAyB,4BAAzB;EACH;;EACD6lB,YAAY,CAACpnB,IAAD,EAAO;IACf,KAAK6lB,MAAL,CAAY9mB,IAAZ,CAAiBiB,IAAjB;;IACA,IAAI,KAAK6lB,MAAL,CAAYzmB,MAAZ,KAAuB,KAAK0mB,WAAhC,EAA6C;MACzC,MAAMuB,QAAQ,GAAG,KAAKxB,MAAL,CAAY9O,IAAZ,CAAiB,EAAjB,CAAjB;MACA,KAAK8O,MAAL,GAAc,IAAd;MACA,MAAMyB,QAAQ,GAAG7X,wDAAQ,CAAC4X,QAAD,CAAzB,CAHyC,CAIzC;;MACA,KAAK9H,SAAL,CAAe+H,QAAf;IACH;EACJ;EACD;AACJ;AACA;;;EACIC,oBAAoB,CAACC,UAAD,EAAa;IAC7B,KAAK1B,WAAL,GAAmB0B,UAAnB;IACA,KAAK3B,MAAL,GAAc,EAAd;EACH;EACD;AACJ;AACA;AACA;;;EACI4B,kBAAkB,CAACznB,IAAD,EAAO;IACrB2P,sDAAM,CAAC,KAAKkW,MAAL,KAAgB,IAAjB,EAAuB,gCAAvB,CAAN,CADqB,CAErB;IACA;;IACA,IAAI7lB,IAAI,CAACZ,MAAL,IAAe,CAAnB,EAAsB;MAClB,MAAMooB,UAAU,GAAG3T,MAAM,CAAC7T,IAAD,CAAzB;;MACA,IAAI,CAAC0nB,KAAK,CAACF,UAAD,CAAV,EAAwB;QACpB,KAAKD,oBAAL,CAA0BC,UAA1B;QACA,OAAO,IAAP;MACH;IACJ;;IACD,KAAKD,oBAAL,CAA0B,CAA1B;IACA,OAAOvnB,IAAP;EACH;EACD;AACJ;AACA;AACA;;;EACI4mB,mBAAmB,CAACe,IAAD,EAAO;IACtB,IAAI,KAAKpB,MAAL,KAAgB,IAApB,EAA0B;MACtB,OADsB,CACd;IACX;;IACD,MAAMvmB,IAAI,GAAG2nB,IAAI,CAAC,MAAD,CAAjB;IACA,KAAK1I,aAAL,IAAsBjf,IAAI,CAACZ,MAA3B;IACA,KAAKggB,MAAL,CAAY/C,gBAAZ,CAA6B,gBAA7B,EAA+Crc,IAAI,CAACZ,MAApD;IACA,KAAKwoB,cAAL;;IACA,IAAI,KAAK/B,MAAL,KAAgB,IAApB,EAA0B;MACtB;MACA,KAAKuB,YAAL,CAAkBpnB,IAAlB;IACH,CAHD,MAIK;MACD;MACA,MAAM6nB,aAAa,GAAG,KAAKJ,kBAAL,CAAwBznB,IAAxB,CAAtB;;MACA,IAAI6nB,aAAa,KAAK,IAAtB,EAA4B;QACxB,KAAKT,YAAL,CAAkBS,aAAlB;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACI/F,IAAI,CAAC9hB,IAAD,EAAO;IACP,KAAK4nB,cAAL;IACA,MAAM7F,OAAO,GAAGvS,yDAAS,CAACxP,IAAD,CAAzB;IACA,KAAKgf,SAAL,IAAkB+C,OAAO,CAAC3iB,MAA1B;IACA,KAAKggB,MAAL,CAAY/C,gBAAZ,CAA6B,YAA7B,EAA2C0F,OAAO,CAAC3iB,MAAnD,EAJO,CAKP;IACA;;IACA,MAAMsW,QAAQ,GAAGF,iBAAiB,CAACuM,OAAD,EAAUuD,wBAAV,CAAlC,CAPO,CAQP;;IACA,IAAI5P,QAAQ,CAACtW,MAAT,GAAkB,CAAtB,EAAyB;MACrB,KAAK0oB,WAAL,CAAiBhe,MAAM,CAAC4L,QAAQ,CAACtW,MAAV,CAAvB;IACH,CAXM,CAYP;;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqW,QAAQ,CAACtW,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;MACtC,KAAKyoB,WAAL,CAAiBpS,QAAQ,CAACrW,CAAD,CAAzB;IACH;EACJ;;EACDqiB,SAAS,GAAG;IACR,KAAK/B,SAAL,GAAiB,IAAjB;;IACA,IAAI,KAAKiG,cAAT,EAAyB;MACrBmC,aAAa,CAAC,KAAKnC,cAAN,CAAb;MACA,KAAKA,cAAL,GAAsB,IAAtB;IACH;;IACD,IAAI,KAAKW,MAAT,EAAiB;MACb,KAAKA,MAAL,CAAY5E,KAAZ;MACA,KAAK4E,MAAL,GAAc,IAAd;IACH;EACJ;;EACD1G,SAAS,GAAG;IACR,IAAI,CAAC,KAAKF,SAAV,EAAqB;MACjB,KAAKR,IAAL,CAAU,6BAAV;MACA,KAAKuC,SAAL,GAFiB,CAGjB;;MACA,IAAI,KAAKvU,YAAT,EAAuB;QACnB,KAAKA,YAAL,CAAkB,KAAK+R,cAAvB;QACA,KAAK/R,YAAL,GAAoB,IAApB;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACIwU,KAAK,GAAG;IACJ,IAAI,CAAC,KAAKhC,SAAV,EAAqB;MACjB,KAAKR,IAAL,CAAU,2BAAV;MACA,KAAKuC,SAAL;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACIkG,cAAc,GAAG;IACbG,aAAa,CAAC,KAAKnC,cAAN,CAAb;IACA,KAAKA,cAAL,GAAsBoC,WAAW,CAAC,MAAM;MACpC;MACA,IAAI,KAAKzB,MAAT,EAAiB;QACb,KAAKuB,WAAL,CAAiB,GAAjB;MACH;;MACD,KAAKF,cAAL,GALoC,CAMpC;IACH,CAPgC,EAO9BrT,IAAI,CAACC,KAAL,CAAW+Q,4BAAX,CAP8B,CAAjC;EAQH;EACD;AACJ;AACA;AACA;AACA;;;EACIuC,WAAW,CAACzV,GAAD,EAAM;IACb;IACA;IACA;IACA,IAAI;MACA,KAAKkU,MAAL,CAAYzE,IAAZ,CAAiBzP,GAAjB;IACH,CAFD,CAGA,OAAON,CAAP,EAAU;MACN,KAAKoN,IAAL,CAAU,yCAAV,EAAqDpN,CAAC,CAAC1J,OAAF,IAAa0J,CAAC,CAAC/R,IAApE,EAA0E,qBAA1E;MACAsU,UAAU,CAAC,KAAKuL,SAAL,CAAezU,IAAf,CAAoB,IAApB,CAAD,EAA4B,CAA5B,CAAV;IACH;EACJ;;AArTqB;AAuT1B;AACA;AACA;;;AACAua,mBAAmB,CAACsC,4BAApB,GAAmD,CAAnD;AACA;AACA;AACA;;AACAtC,mBAAmB,CAACuC,cAApB,GAAqC,KAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAN,CAAuB;EACnB;AACJ;AACA;EACItlB,WAAW,CAACiZ,QAAD,EAAW;IAClB,KAAKsM,eAAL,CAAqBtM,QAArB;EACH;;EACwB,WAAduM,cAAc,GAAG;IACxB,OAAO,CAAC5J,qBAAD,EAAwBkH,mBAAxB,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACuC,WAAxB2C,wBAAwB,GAAG;IAClC,OAAO,KAAKC,2BAAZ;EACH;;EACDH,eAAe,CAACtM,QAAD,EAAW;IACtB,MAAM0M,qBAAqB,GAAG7C,mBAAmB,IAAIA,mBAAmB,CAAC,aAAD,CAAnB,EAArD;IACA,IAAI8C,oBAAoB,GAAGD,qBAAqB,IAAI,CAAC7C,mBAAmB,CAACwB,gBAApB,EAArD;;IACA,IAAIrL,QAAQ,CAACZ,aAAb,EAA4B;MACxB,IAAI,CAACsN,qBAAL,EAA4B;QACxBrgB,IAAI,CAAC,iFAAD,CAAJ;MACH;;MACDsgB,oBAAoB,GAAG,IAAvB;IACH;;IACD,IAAIA,oBAAJ,EAA0B;MACtB,KAAKC,WAAL,GAAmB,CAAC/C,mBAAD,CAAnB;IACH,CAFD,MAGK;MACD,MAAMgD,UAAU,GAAI,KAAKD,WAAL,GAAmB,EAAvC;;MACA,KAAK,MAAME,SAAX,IAAwBT,gBAAgB,CAACE,cAAzC,EAAyD;QACrD,IAAIO,SAAS,IAAIA,SAAS,CAAC,aAAD,CAAT,EAAjB,EAA6C;UACzCD,UAAU,CAAC5pB,IAAX,CAAgB6pB,SAAhB;QACH;MACJ;;MACDT,gBAAgB,CAACI,2BAAjB,GAA+C,IAA/C;IACH;EACJ;EACD;AACJ;AACA;;;EACIM,gBAAgB,GAAG;IACf,IAAI,KAAKH,WAAL,CAAiBtpB,MAAjB,GAA0B,CAA9B,EAAiC;MAC7B,OAAO,KAAKspB,WAAL,CAAiB,CAAjB,CAAP;IACH,CAFD,MAGK;MACD,MAAM,IAAIrrB,KAAJ,CAAU,yBAAV,CAAN;IACH;EACJ;EACD;AACJ;AACA;;;EACIyrB,gBAAgB,GAAG;IACf,IAAI,KAAKJ,WAAL,CAAiBtpB,MAAjB,GAA0B,CAA9B,EAAiC;MAC7B,OAAO,KAAKspB,WAAL,CAAiB,CAAjB,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ;;AA5DkB,EA8DvB;;;AACAP,gBAAgB,CAACI,2BAAjB,GAA+C,KAA/C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMQ,eAAe,GAAG,KAAxB,EACA;AACA;;AACA,MAAMC,mCAAmC,GAAG,IAA5C,EACA;AACA;AACA;;AACA,MAAMC,2BAA2B,GAAG,KAAK,IAAzC;AACA,MAAMC,+BAA+B,GAAG,MAAM,IAA9C;AACA,MAAMC,YAAY,GAAG,GAArB;AACA,MAAMC,YAAY,GAAG,GAArB;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AACA,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,YAAY,GAAG,GAArB;AACA,MAAMC,UAAU,GAAG,GAAnB;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AACA,MAAMC,IAAI,GAAG,GAAb;AACA,MAAMC,YAAY,GAAG,GAArB;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,CAAiB;EACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIhnB,WAAW,CAACsP,EAAD,EAAK2X,SAAL,EAAgBC,cAAhB,EAAgCC,cAAhC,EAAgDC,UAAhD,EAA4DnN,UAA5D,EAAwEoN,QAAxE,EAAkFzK,aAAlF,EAAiG0K,OAAjG,EAA0GpL,aAA1G,EAAyH;IAChI,KAAK5M,EAAL,GAAUA,EAAV;IACA,KAAK2X,SAAL,GAAiBA,SAAjB;IACA,KAAKC,cAAL,GAAsBA,cAAtB;IACA,KAAKC,cAAL,GAAsBA,cAAtB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKnN,UAAL,GAAkBA,UAAlB;IACA,KAAKoN,QAAL,GAAgBA,QAAhB;IACA,KAAKzK,aAAL,GAAqBA,aAArB;IACA,KAAK0K,OAAL,GAAeA,OAAf;IACA,KAAKpL,aAAL,GAAqBA,aAArB;IACA,KAAKqL,eAAL,GAAuB,CAAvB;IACA,KAAKC,mBAAL,GAA2B,EAA3B;IACA,KAAKC,MAAL,GAAc;IAAE;IAAhB;IACA,KAAKnL,IAAL,GAAY7L,UAAU,CAAC,OAAO,KAAKnB,EAAZ,GAAiB,GAAlB,CAAtB;IACA,KAAKoY,iBAAL,GAAyB,IAAIpC,gBAAJ,CAAqB2B,SAArB,CAAzB;IACA,KAAK3K,IAAL,CAAU,oBAAV;IACA,KAAKqL,MAAL;EACH;EACD;AACJ;AACA;;;EACIA,MAAM,GAAG;IACL,MAAMC,IAAI,GAAG,KAAKF,iBAAL,CAAuB1B,gBAAvB,EAAb;IACA,KAAK6B,KAAL,GAAa,IAAID,IAAJ,CAAS,KAAKE,gBAAL,EAAT,EAAkC,KAAKb,SAAvC,EAAkD,KAAKC,cAAvD,EAAuE,KAAKC,cAA5E,EAA4F,KAAKC,UAAjG,EAA6G,IAA7G,EAAmH,KAAKlL,aAAxH,CAAb,CAFK,CAGL;IACA;;IACA,KAAK6L,yBAAL,GAAiCH,IAAI,CAAC,8BAAD,CAAJ,IAAwC,CAAzE;IACA,MAAMI,iBAAiB,GAAG,KAAKC,aAAL,CAAmB,KAAKJ,KAAxB,CAA1B;IACA,MAAMK,gBAAgB,GAAG,KAAKC,gBAAL,CAAsB,KAAKN,KAA3B,CAAzB;IACA,KAAKO,GAAL,GAAW,KAAKP,KAAhB;IACA,KAAKQ,GAAL,GAAW,KAAKR,KAAhB;IACA,KAAKS,cAAL,GAAsB,IAAtB;IACA,KAAKC,UAAL,GAAkB,KAAlB;IACA;AACR;AACA;AACA;AACA;AACA;;IACQ9W,UAAU,CAAC,MAAM;MACb;MACA,KAAKoW,KAAL,IAAc,KAAKA,KAAL,CAAWpL,IAAX,CAAgBuL,iBAAhB,EAAmCE,gBAAnC,CAAd;IACH,CAHS,EAGPxW,IAAI,CAACC,KAAL,CAAW,CAAX,CAHO,CAAV;IAIA,MAAM6W,gBAAgB,GAAGZ,IAAI,CAAC,gBAAD,CAAJ,IAA0B,CAAnD;;IACA,IAAIY,gBAAgB,GAAG,CAAvB,EAA0B;MACtB,KAAKC,eAAL,GAAuB7S,qBAAqB,CAAC,MAAM;QAC/C,KAAK6S,eAAL,GAAuB,IAAvB;;QACA,IAAI,CAAC,KAAKF,UAAV,EAAsB;UAClB,IAAI,KAAKV,KAAL,IACA,KAAKA,KAAL,CAAWzL,aAAX,GAA2BiK,+BAD/B,EACgE;YAC5D,KAAK/J,IAAL,CAAU,0DACN,KAAKuL,KAAL,CAAWzL,aADL,GAEN,sCAFJ;YAGA,KAAKmM,UAAL,GAAkB,IAAlB;YACA,KAAKV,KAAL,CAAWjJ,qBAAX;UACH,CAPD,MAQK,IAAI,KAAKiJ,KAAL,IACL,KAAKA,KAAL,CAAW1L,SAAX,GAAuBiK,2BADtB,EACmD;YACpD,KAAK9J,IAAL,CAAU,sDACN,KAAKuL,KAAL,CAAW1L,SADL,GAEN,oCAFJ,EADoD,CAIpD;YACA;UACH,CAPI,MAQA;YACD,KAAKG,IAAL,CAAU,6CAAV;YACA,KAAKwC,KAAL;UACH;QACJ,CAvB8C,CAwB/C;;MACH,CAzB2C,EAyBzCpN,IAAI,CAACC,KAAL,CAAW6W,gBAAX,CAzByC,CAA5C;IA0BH;EACJ;;EACDV,gBAAgB,GAAG;IACf,OAAO,OAAO,KAAKxY,EAAZ,GAAiB,GAAjB,GAAuB,KAAKiY,eAAL,EAA9B;EACH;;EACDY,gBAAgB,CAACP,IAAD,EAAO;IACnB,OAAOc,aAAa,IAAI;MACpB,IAAId,IAAI,KAAK,KAAKC,KAAlB,EAAyB;QACrB,KAAKc,iBAAL,CAAuBD,aAAvB;MACH,CAFD,MAGK,IAAId,IAAI,KAAK,KAAKU,cAAlB,EAAkC;QACnC,KAAKhM,IAAL,CAAU,4BAAV;QACA,KAAKsM,0BAAL;MACH,CAHI,MAIA;QACD,KAAKtM,IAAL,CAAU,2BAAV;MACH;IACJ,CAXD;EAYH;;EACD2L,aAAa,CAACL,IAAD,EAAO;IAChB,OAAQpiB,OAAD,IAAa;MAChB,IAAI,KAAKiiB,MAAL,KAAgB;MAAE;MAAtB,EAAwD;QACpD,IAAIG,IAAI,KAAK,KAAKS,GAAlB,EAAuB;UACnB,KAAKQ,yBAAL,CAA+BrjB,OAA/B;QACH,CAFD,MAGK,IAAIoiB,IAAI,KAAK,KAAKU,cAAlB,EAAkC;UACnC,KAAKQ,2BAAL,CAAiCtjB,OAAjC;QACH,CAFI,MAGA;UACD,KAAK8W,IAAL,CAAU,2BAAV;QACH;MACJ;IACJ,CAZD;EAaH;EACD;AACJ;AACA;;;EACIyM,WAAW,CAACC,OAAD,EAAU;IACjB;IACA,MAAMzjB,GAAG,GAAG;MAAE0jB,CAAC,EAAE,GAAL;MAAU9H,CAAC,EAAE6H;IAAb,CAAZ;IACA,KAAKE,SAAL,CAAe3jB,GAAf;EACH;;EACD4jB,oBAAoB,GAAG;IACnB,IAAI,KAAKf,GAAL,KAAa,KAAKE,cAAlB,IAAoC,KAAKD,GAAL,KAAa,KAAKC,cAA1D,EAA0E;MACtE,KAAKhM,IAAL,CAAU,6CAA6C,KAAKgM,cAAL,CAAoBzM,MAA3E;MACA,KAAKgM,KAAL,GAAa,KAAKS,cAAlB;MACA,KAAKA,cAAL,GAAsB,IAAtB,CAHsE,CAItE;IACH;EACJ;;EACDc,mBAAmB,CAACC,WAAD,EAAc;IAC7B,IAAI/C,YAAY,IAAI+C,WAApB,EAAiC;MAC7B,MAAMC,GAAG,GAAGD,WAAW,CAAC/C,YAAD,CAAvB;;MACA,IAAIgD,GAAG,KAAK1C,UAAZ,EAAwB;QACpB,KAAK2C,0BAAL;MACH,CAFD,MAGK,IAAID,GAAG,KAAK7C,aAAZ,EAA2B;QAC5B;QACA,KAAKnK,IAAL,CAAU,sCAAV;QACA,KAAKgM,cAAL,CAAoBxJ,KAApB,GAH4B,CAI5B;;QACA,IAAI,KAAKsJ,GAAL,KAAa,KAAKE,cAAlB,IACA,KAAKD,GAAL,KAAa,KAAKC,cADtB,EACsC;UAClC,KAAKxJ,KAAL;QACH;MACJ,CATI,MAUA,IAAIwK,GAAG,KAAK3C,YAAZ,EAA0B;QAC3B,KAAKrK,IAAL,CAAU,wBAAV;QACA,KAAKkN,2BAAL;QACA,KAAKD,0BAAL;MACH;IACJ;EACJ;;EACDT,2BAA2B,CAACW,UAAD,EAAa;IACpC,MAAMC,KAAK,GAAGpX,UAAU,CAAC,GAAD,EAAMmX,UAAN,CAAxB;IACA,MAAMtsB,IAAI,GAAGmV,UAAU,CAAC,GAAD,EAAMmX,UAAN,CAAvB;;IACA,IAAIC,KAAK,KAAK,GAAd,EAAmB;MACf,KAAKN,mBAAL,CAAyBjsB,IAAzB;IACH,CAFD,MAGK,IAAIusB,KAAK,KAAK,GAAd,EAAmB;MACpB;MACA,KAAKlC,mBAAL,CAAyBtrB,IAAzB,CAA8BiB,IAA9B;IACH,CAHI,MAIA;MACD,MAAM,IAAI3C,KAAJ,CAAU,6BAA6BkvB,KAAvC,CAAN;IACH;EACJ;;EACDH,0BAA0B,GAAG;IACzB,IAAI,KAAKC,2BAAL,IAAoC,CAAxC,EAA2C;MACvC,KAAKlN,IAAL,CAAU,kCAAV;MACA,KAAKiM,UAAL,GAAkB,IAAlB;MACA,KAAKD,cAAL,CAAoB1J,qBAApB;MACA,KAAK+K,mBAAL;IACH,CALD,MAMK;MACD;MACA,KAAKrN,IAAL,CAAU,4BAAV;MACA,KAAKgM,cAAL,CAAoBrJ,IAApB,CAAyB;QAAEgK,CAAC,EAAE,GAAL;QAAU9H,CAAC,EAAE;UAAE8H,CAAC,EAAEnC,IAAL;UAAW3F,CAAC,EAAE;QAAd;MAAb,CAAzB;IACH;EACJ;;EACDwI,mBAAmB,GAAG;IAClB;IACA,KAAKrB,cAAL,CAAoBnK,KAApB,GAFkB,CAGlB;;IACA,KAAK7B,IAAL,CAAU,iCAAV;IACA,KAAKgM,cAAL,CAAoBrJ,IAApB,CAAyB;MAAEgK,CAAC,EAAE,GAAL;MAAU9H,CAAC,EAAE;QAAE8H,CAAC,EAAErC,UAAL;QAAiBzF,CAAC,EAAE;MAApB;IAAb,CAAzB,EALkB,CAMlB;IACA;;IACA,KAAK7E,IAAL,CAAU,gCAAV;IACA,KAAKuL,KAAL,CAAW5I,IAAX,CAAgB;MAAEgK,CAAC,EAAE,GAAL;MAAU9H,CAAC,EAAE;QAAE8H,CAAC,EAAEpC,gBAAL;QAAuB1F,CAAC,EAAE;MAA1B;IAAb,CAAhB;IACA,KAAKiH,GAAL,GAAW,KAAKE,cAAhB;IACA,KAAKa,oBAAL;EACH;;EACDN,yBAAyB,CAACY,UAAD,EAAa;IAClC;IACA,MAAMC,KAAK,GAAGpX,UAAU,CAAC,GAAD,EAAMmX,UAAN,CAAxB;IACA,MAAMtsB,IAAI,GAAGmV,UAAU,CAAC,GAAD,EAAMmX,UAAN,CAAvB;;IACA,IAAIC,KAAK,KAAK,GAAd,EAAmB;MACf,KAAKE,UAAL,CAAgBzsB,IAAhB;IACH,CAFD,MAGK,IAAIusB,KAAK,KAAK,GAAd,EAAmB;MACpB,KAAKG,cAAL,CAAoB1sB,IAApB;IACH;EACJ;;EACD0sB,cAAc,CAACrkB,OAAD,EAAU;IACpB,KAAKskB,kBAAL,GADoB,CAEpB;;IACA,KAAK7P,UAAL,CAAgBzU,OAAhB;EACH;;EACDskB,kBAAkB,GAAG;IACjB,IAAI,CAAC,KAAKvB,UAAV,EAAsB;MAClB,KAAKR,yBAAL;;MACA,IAAI,KAAKA,yBAAL,IAAkC,CAAtC,EAAyC;QACrC,KAAKzL,IAAL,CAAU,gCAAV;QACA,KAAKiM,UAAL,GAAkB,IAAlB;QACA,KAAKV,KAAL,CAAWjJ,qBAAX;MACH;IACJ;EACJ;;EACDgL,UAAU,CAACP,WAAD,EAAc;IACpB,MAAMC,GAAG,GAAGhX,UAAU,CAACgU,YAAD,EAAe+C,WAAf,CAAtB;;IACA,IAAI9C,YAAY,IAAI8C,WAApB,EAAiC;MAC7B,MAAM5tB,OAAO,GAAG4tB,WAAW,CAAC9C,YAAD,CAA3B;;MACA,IAAI+C,GAAG,KAAKvC,YAAZ,EAA0B;QACtB,MAAMgD,gBAAgB,GAAGtqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjE,OAAlB,CAAzB;;QACA,IAAI,KAAKwrB,SAAL,CAAezO,eAAnB,EAAoC;UAChC;UACAuR,gBAAgB,CAACC,CAAjB,GAAqB,KAAK/C,SAAL,CAAetc,IAApC;QACH;;QACD,KAAKsf,YAAL,CAAkBF,gBAAlB;MACH,CAPD,MAQK,IAAIT,GAAG,KAAKzC,gBAAZ,EAA8B;QAC/B,KAAKvK,IAAL,CAAU,mCAAV;QACA,KAAK+L,GAAL,GAAW,KAAKC,cAAhB;;QACA,KAAK,IAAI9rB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgrB,mBAAL,CAAyBjrB,MAA7C,EAAqD,EAAEC,CAAvD,EAA0D;UACtD,KAAKqtB,cAAL,CAAoB,KAAKrC,mBAAL,CAAyBhrB,CAAzB,CAApB;QACH;;QACD,KAAKgrB,mBAAL,GAA2B,EAA3B;QACA,KAAK2B,oBAAL;MACH,CARI,MASA,IAAIG,GAAG,KAAK9C,gBAAZ,EAA8B;QAC/B;QACA;QACA,KAAK0D,qBAAL,CAA2BzuB,OAA3B;MACH,CAJI,MAKA,IAAI6tB,GAAG,KAAK7C,aAAZ,EAA2B;QAC5B;QACA,KAAK0D,QAAL,CAAc1uB,OAAd;MACH,CAHI,MAIA,IAAI6tB,GAAG,KAAK5C,aAAZ,EAA2B;QAC5BrrB,KAAK,CAAC,mBAAmBI,OAApB,CAAL;MACH,CAFI,MAGA,IAAI6tB,GAAG,KAAK3C,YAAZ,EAA0B;QAC3B,KAAKrK,IAAL,CAAU,sBAAV;QACA,KAAKwN,kBAAL;QACA,KAAKM,6BAAL;MACH,CAJI,MAKA;QACD/uB,KAAK,CAAC,qCAAqCiuB,GAAtC,CAAL;MACH;IACJ;EACJ;EACD;AACJ;AACA;;;EACIW,YAAY,CAACI,SAAD,EAAY;IACpB,MAAMC,SAAS,GAAGD,SAAS,CAAC9I,EAA5B;IACA,MAAMnc,OAAO,GAAGilB,SAAS,CAAClX,CAA1B;IACA,MAAMxI,IAAI,GAAG0f,SAAS,CAACL,CAAvB;IACA,KAAKO,SAAL,GAAiBF,SAAS,CAAC9W,CAA3B;IACA,KAAK0T,SAAL,CAAetc,IAAf,GAAsBA,IAAtB,CALoB,CAMpB;;IACA,IAAI,KAAK8c,MAAL,KAAgB;IAAE;IAAtB,EAAsD;MAClD,KAAKI,KAAL,CAAW1J,KAAX;MACA,KAAKqM,wBAAL,CAA8B,KAAK3C,KAAnC,EAA0CyC,SAA1C;;MACA,IAAI9S,gBAAgB,KAAKpS,OAAzB,EAAkC;QAC9BE,IAAI,CAAC,oCAAD,CAAJ;MACH,CALiD,CAMlD;;;MACA,KAAKmlB,gBAAL;IACH;EACJ;;EACDA,gBAAgB,GAAG;IACf,MAAM7C,IAAI,GAAG,KAAKF,iBAAL,CAAuBzB,gBAAvB,EAAb;;IACA,IAAI2B,IAAJ,EAAU;MACN,KAAK8C,aAAL,CAAmB9C,IAAnB;IACH;EACJ;;EACD8C,aAAa,CAAC9C,IAAD,EAAO;IAChB,KAAKU,cAAL,GAAsB,IAAIV,IAAJ,CAAS,KAAKE,gBAAL,EAAT,EAAkC,KAAKb,SAAvC,EAAkD,KAAKC,cAAvD,EAAuE,KAAKC,cAA5E,EAA4F,KAAKC,UAAjG,EAA6G,KAAKmD,SAAlH,CAAtB,CADgB,CAEhB;IACA;;IACA,KAAKf,2BAAL,GACI5B,IAAI,CAAC,8BAAD,CAAJ,IAAwC,CAD5C;IAEA,MAAMlL,SAAS,GAAG,KAAKuL,aAAL,CAAmB,KAAKK,cAAxB,CAAlB;IACA,MAAMhe,YAAY,GAAG,KAAK6d,gBAAL,CAAsB,KAAKG,cAA3B,CAArB;IACA,KAAKA,cAAL,CAAoB7L,IAApB,CAAyBC,SAAzB,EAAoCpS,YAApC,EARgB,CAShB;;IACAsL,qBAAqB,CAAC,MAAM;MACxB,IAAI,KAAK0S,cAAT,EAAyB;QACrB,KAAKhM,IAAL,CAAU,8BAAV;QACA,KAAKgM,cAAL,CAAoBxJ,KAApB;MACH;IACJ,CALoB,EAKlBpN,IAAI,CAACC,KAAL,CAAWuU,eAAX,CALkB,CAArB;EAMH;;EACDiE,QAAQ,CAACxf,IAAD,EAAO;IACX,KAAK2R,IAAL,CAAU,uCAAuC3R,IAAjD;IACA,KAAKsc,SAAL,CAAetc,IAAf,GAAsBA,IAAtB,CAFW,CAGX;IACA;;IACA,IAAI,KAAK8c,MAAL,KAAgB;IAAE;IAAtB,EAAqD;MACjD,KAAK3I,KAAL;IACH,CAFD,MAGK;MACD;MACA,KAAK6L,iBAAL;MACA,KAAKhD,MAAL;IACH;EACJ;;EACD6C,wBAAwB,CAAC5C,IAAD,EAAO0C,SAAP,EAAkB;IACtC,KAAKhO,IAAL,CAAU,kCAAV;IACA,KAAKuL,KAAL,GAAaD,IAAb;IACA,KAAKH,MAAL,GAAc;IAAE;IAAhB;;IACA,IAAI,KAAKJ,QAAT,EAAmB;MACf,KAAKA,QAAL,CAAciD,SAAd,EAAyB,KAAKC,SAA9B;MACA,KAAKlD,QAAL,GAAgB,IAAhB;IACH,CAPqC,CAQtC;IACA;;;IACA,IAAI,KAAKU,yBAAL,KAAmC,CAAvC,EAA0C;MACtC,KAAKzL,IAAL,CAAU,gCAAV;MACA,KAAKiM,UAAL,GAAkB,IAAlB;IACH,CAHD,MAIK;MACD3S,qBAAqB,CAAC,MAAM;QACxB,KAAKwU,6BAAL;MACH,CAFoB,EAElB1Y,IAAI,CAACC,KAAL,CAAWwU,mCAAX,CAFkB,CAArB;IAGH;EACJ;;EACDiE,6BAA6B,GAAG;IAC5B;IACA,IAAI,CAAC,KAAK7B,UAAN,IAAoB,KAAKd,MAAL,KAAgB;IAAE;IAA1C,EAAyE;MACrE,KAAKnL,IAAL,CAAU,0BAAV;MACA,KAAK4M,SAAL,CAAe;QAAED,CAAC,EAAE,GAAL;QAAU9H,CAAC,EAAE;UAAE8H,CAAC,EAAEnC,IAAL;UAAW3F,CAAC,EAAE;QAAd;MAAb,CAAf;IACH;EACJ;;EACDyH,0BAA0B,GAAG;IACzB,MAAMhB,IAAI,GAAG,KAAKU,cAAlB;IACA,KAAKA,cAAL,GAAsB,IAAtB;;IACA,IAAI,KAAKF,GAAL,KAAaR,IAAb,IAAqB,KAAKS,GAAL,KAAaT,IAAtC,EAA4C;MACxC;MACA,KAAK9I,KAAL;IACH;EACJ;EACD;AACJ;AACA;AACA;;;EACI6J,iBAAiB,CAACD,aAAD,EAAgB;IAC7B,KAAKb,KAAL,GAAa,IAAb,CAD6B,CAE7B;IACA;;IACA,IAAI,CAACa,aAAD,IAAkB,KAAKjB,MAAL,KAAgB;IAAE;IAAxC,EAAwE;MACpE,KAAKnL,IAAL,CAAU,6BAAV,EADoE,CAEpE;;MACA,IAAI,KAAK2K,SAAL,CAAerO,eAAf,EAAJ,EAAsC;QAClCzJ,iBAAiB,CAACzQ,MAAlB,CAAyB,UAAU,KAAKuoB,SAAL,CAAetc,IAAlD,EADkC,CAElC;;QACA,KAAKsc,SAAL,CAAetO,YAAf,GAA8B,KAAKsO,SAAL,CAAetc,IAA7C;MACH;IACJ,CARD,MASK,IAAI,KAAK8c,MAAL,KAAgB;IAAE;IAAtB,EAAqD;MACtD,KAAKnL,IAAL,CAAU,2BAAV;IACH;;IACD,KAAKwC,KAAL;EACH;;EACDoL,qBAAqB,CAAClV,MAAD,EAAS;IAC1B,KAAKsH,IAAL,CAAU,wDAAV;;IACA,IAAI,KAAKgL,OAAT,EAAkB;MACd,KAAKA,OAAL,CAAatS,MAAb;MACA,KAAKsS,OAAL,GAAe,IAAf;IACH,CALyB,CAM1B;IACA;;;IACA,KAAK1K,aAAL,GAAqB,IAArB;IACA,KAAKkC,KAAL;EACH;;EACDoK,SAAS,CAAC/rB,IAAD,EAAO;IACZ,IAAI,KAAKsqB,MAAL,KAAgB;IAAE;IAAtB,EAAqD;MACjD,MAAM,6BAAN;IACH,CAFD,MAGK;MACD,KAAKW,GAAL,CAASnJ,IAAT,CAAc9hB,IAAd;IACH;EACJ;EACD;AACJ;AACA;;;EACI2hB,KAAK,GAAG;IACJ,IAAI,KAAK2I,MAAL,KAAgB;IAAE;IAAtB,EAAwD;MACpD,KAAKnL,IAAL,CAAU,8BAAV;MACA,KAAKmL,MAAL,GAAc;MAAE;MAAhB;MACA,KAAKkD,iBAAL;;MACA,IAAI,KAAK/N,aAAT,EAAwB;QACpB,KAAKA,aAAL;QACA,KAAKA,aAAL,GAAqB,IAArB;MACH;IACJ;EACJ;;EACD+N,iBAAiB,GAAG;IAChB,KAAKrO,IAAL,CAAU,+BAAV;;IACA,IAAI,KAAKuL,KAAT,EAAgB;MACZ,KAAKA,KAAL,CAAW/I,KAAX;MACA,KAAK+I,KAAL,GAAa,IAAb;IACH;;IACD,IAAI,KAAKS,cAAT,EAAyB;MACrB,KAAKA,cAAL,CAAoBxJ,KAApB;MACA,KAAKwJ,cAAL,GAAsB,IAAtB;IACH;;IACD,IAAI,KAAKG,eAAT,EAA0B;MACtBhL,YAAY,CAAC,KAAKgL,eAAN,CAAZ;MACA,KAAKA,eAAL,GAAuB,IAAvB;IACH;EACJ;;AA5aY;AA+ajB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMmC,aAAN,CAAoB;EAChBC,GAAG,CAACthB,UAAD,EAAapM,IAAb,EAAmB+I,UAAnB,EAA+B4kB,IAA/B,EAAqC,CAAG;;EAC3CnzB,KAAK,CAAC4R,UAAD,EAAapM,IAAb,EAAmB+I,UAAnB,EAA+B4kB,IAA/B,EAAqC,CAAG;EAC7C;AACJ;AACA;AACA;;;EACIC,gBAAgB,CAACC,KAAD,EAAQ,CAAG;EAC3B;AACJ;AACA;AACA;;;EACIC,oBAAoB,CAACD,KAAD,EAAQ,CAAG;;EAC/BE,eAAe,CAAC3hB,UAAD,EAAapM,IAAb,EAAmB+I,UAAnB,EAA+B,CAAG;;EACjDilB,iBAAiB,CAAC5hB,UAAD,EAAapM,IAAb,EAAmB+I,UAAnB,EAA+B,CAAG;;EACnDklB,kBAAkB,CAAC7hB,UAAD,EAAarD,UAAb,EAAyB,CAAG;;EAC9CmlB,WAAW,CAACC,KAAD,EAAQ,CAAG;;AAhBN;AAmBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMC,YAAN,CAAmB;EACfvrB,WAAW,CAACwrB,cAAD,EAAiB;IACxB,KAAKA,cAAL,GAAsBA,cAAtB;IACA,KAAKC,UAAL,GAAkB,EAAlB;IACA3e,sDAAM,CAACtG,KAAK,CAACC,OAAN,CAAc+kB,cAAd,KAAiCA,cAAc,CAACjvB,MAAf,GAAwB,CAA1D,EAA6D,4BAA7D,CAAN;EACH;EACD;AACJ;AACA;;;EACImvB,OAAO,CAAC3lB,SAAD,EAAY,GAAG+J,OAAf,EAAwB;IAC3B,IAAItJ,KAAK,CAACC,OAAN,CAAc,KAAKglB,UAAL,CAAgB1lB,SAAhB,CAAd,CAAJ,EAA+C;MAC3C;MACA,MAAM4lB,SAAS,GAAG,CAAC,GAAG,KAAKF,UAAL,CAAgB1lB,SAAhB,CAAJ,CAAlB;;MACA,KAAK,IAAIvJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmvB,SAAS,CAACpvB,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;QACvCmvB,SAAS,CAACnvB,CAAD,CAAT,CAAamL,QAAb,CAAsBqI,KAAtB,CAA4B2b,SAAS,CAACnvB,CAAD,CAAT,CAAaqL,OAAzC,EAAkDiI,OAAlD;MACH;IACJ;EACJ;;EACDpI,EAAE,CAAC3B,SAAD,EAAY4B,QAAZ,EAAsBE,OAAtB,EAA+B;IAC7B,KAAK+jB,kBAAL,CAAwB7lB,SAAxB;IACA,KAAK0lB,UAAL,CAAgB1lB,SAAhB,IAA6B,KAAK0lB,UAAL,CAAgB1lB,SAAhB,KAA8B,EAA3D;IACA,KAAK0lB,UAAL,CAAgB1lB,SAAhB,EAA2B7J,IAA3B,CAAgC;MAAEyL,QAAF;MAAYE;IAAZ,CAAhC;IACA,MAAMgkB,SAAS,GAAG,KAAKC,eAAL,CAAqB/lB,SAArB,CAAlB;;IACA,IAAI8lB,SAAJ,EAAe;MACXlkB,QAAQ,CAACqI,KAAT,CAAenI,OAAf,EAAwBgkB,SAAxB;IACH;EACJ;;EACDtwB,GAAG,CAACwK,SAAD,EAAY4B,QAAZ,EAAsBE,OAAtB,EAA+B;IAC9B,KAAK+jB,kBAAL,CAAwB7lB,SAAxB;IACA,MAAM4lB,SAAS,GAAG,KAAKF,UAAL,CAAgB1lB,SAAhB,KAA8B,EAAhD;;IACA,KAAK,IAAIvJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmvB,SAAS,CAACpvB,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;MACvC,IAAImvB,SAAS,CAACnvB,CAAD,CAAT,CAAamL,QAAb,KAA0BA,QAA1B,KACC,CAACE,OAAD,IAAYA,OAAO,KAAK8jB,SAAS,CAACnvB,CAAD,CAAT,CAAaqL,OADtC,CAAJ,EACoD;QAChD8jB,SAAS,CAAC1uB,MAAV,CAAiBT,CAAjB,EAAoB,CAApB;QACA;MACH;IACJ;EACJ;;EACDovB,kBAAkB,CAAC7lB,SAAD,EAAY;IAC1B+G,sDAAM,CAAC,KAAK0e,cAAL,CAAoBO,IAApB,CAAyBC,EAAE,IAAI;MAClC,OAAOA,EAAE,KAAKjmB,SAAd;IACH,CAFM,CAAD,EAEF,oBAAoBA,SAFlB,CAAN;EAGH;;AA1Cc;AA6CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMkmB,aAAN,SAA4BV,YAA5B,CAAyC;EACrCvrB,WAAW,GAAG;IACV,MAAM,CAAC,QAAD,CAAN;IACA,KAAKksB,OAAL,GAAe,IAAf,CAFU,CAGV;IACA;IACA;IACA;;IACA,IAAI,OAAOld,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAAC4C,gBAAd,KAAmC,WADnC,IAEA,CAACvE,+DAAe,EAFpB,EAEwB;MACpB2B,MAAM,CAAC4C,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;QACpC,IAAI,CAAC,KAAKsa,OAAV,EAAmB;UACf,KAAKA,OAAL,GAAe,IAAf;UACA,KAAKR,OAAL,CAAa,QAAb,EAAuB,IAAvB;QACH;MACJ,CALD,EAKG,KALH;MAMA1c,MAAM,CAAC4C,gBAAP,CAAwB,SAAxB,EAAmC,MAAM;QACrC,IAAI,KAAKsa,OAAT,EAAkB;UACd,KAAKA,OAAL,GAAe,KAAf;UACA,KAAKR,OAAL,CAAa,QAAb,EAAuB,KAAvB;QACH;MACJ,CALD,EAKG,KALH;IAMH;EACJ;;EACiB,OAAXS,WAAW,GAAG;IACjB,OAAO,IAAIF,aAAJ,EAAP;EACH;;EACDH,eAAe,CAAC/lB,SAAD,EAAY;IACvB+G,sDAAM,CAAC/G,SAAS,KAAK,QAAf,EAAyB,yBAAyBA,SAAlD,CAAN;IACA,OAAO,CAAC,KAAKmmB,OAAN,CAAP;EACH;;EACDE,eAAe,GAAG;IACd,OAAO,KAAKF,OAAZ;EACH;;AAlCoC;AAqCzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMG,cAAc,GAAG,EAAvB;AACA;;AACA,MAAMC,qBAAqB,GAAG,GAA9B;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,IAAN,CAAW;EACP;AACJ;AACA;AACA;EACIvsB,WAAW,CAACwsB,YAAD,EAAeC,QAAf,EAAyB;IAChC,IAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;MACrB,KAAKC,OAAL,GAAeF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf,CADqB,CAErB;;MACA,IAAIC,MAAM,GAAG,CAAb;;MACA,KAAK,IAAIpwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKkwB,OAAL,CAAanwB,MAAjC,EAAyCC,CAAC,EAA1C,EAA8C;QAC1C,IAAI,KAAKkwB,OAAL,CAAalwB,CAAb,EAAgBD,MAAhB,GAAyB,CAA7B,EAAgC;UAC5B,KAAKmwB,OAAL,CAAaE,MAAb,IAAuB,KAAKF,OAAL,CAAalwB,CAAb,CAAvB;UACAowB,MAAM;QACT;MACJ;;MACD,KAAKF,OAAL,CAAanwB,MAAb,GAAsBqwB,MAAtB;MACA,KAAKC,SAAL,GAAiB,CAAjB;IACH,CAZD,MAaK;MACD,KAAKH,OAAL,GAAeF,YAAf;MACA,KAAKK,SAAL,GAAiBJ,QAAjB;IACH;EACJ;;EACDzjB,QAAQ,GAAG;IACP,IAAIO,UAAU,GAAG,EAAjB;;IACA,KAAK,IAAI/M,CAAC,GAAG,KAAKqwB,SAAlB,EAA6BrwB,CAAC,GAAG,KAAKkwB,OAAL,CAAanwB,MAA9C,EAAsDC,CAAC,EAAvD,EAA2D;MACvD,IAAI,KAAKkwB,OAAL,CAAalwB,CAAb,MAAoB,EAAxB,EAA4B;QACxB+M,UAAU,IAAI,MAAM,KAAKmjB,OAAL,CAAalwB,CAAb,CAApB;MACH;IACJ;;IACD,OAAO+M,UAAU,IAAI,GAArB;EACH;;AAhCM;;AAkCX,SAASujB,YAAT,GAAwB;EACpB,OAAO,IAAIP,IAAJ,CAAS,EAAT,CAAP;AACH;;AACD,SAASQ,YAAT,CAAsB/lB,IAAtB,EAA4B;EACxB,IAAIA,IAAI,CAAC6lB,SAAL,IAAkB7lB,IAAI,CAAC0lB,OAAL,CAAanwB,MAAnC,EAA2C;IACvC,OAAO,IAAP;EACH;;EACD,OAAOyK,IAAI,CAAC0lB,OAAL,CAAa1lB,IAAI,CAAC6lB,SAAlB,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAASG,aAAT,CAAuBhmB,IAAvB,EAA6B;EACzB,OAAOA,IAAI,CAAC0lB,OAAL,CAAanwB,MAAb,GAAsByK,IAAI,CAAC6lB,SAAlC;AACH;;AACD,SAASI,YAAT,CAAsBjmB,IAAtB,EAA4B;EACxB,IAAIylB,QAAQ,GAAGzlB,IAAI,CAAC6lB,SAApB;;EACA,IAAIJ,QAAQ,GAAGzlB,IAAI,CAAC0lB,OAAL,CAAanwB,MAA5B,EAAoC;IAChCkwB,QAAQ;EACX;;EACD,OAAO,IAAIF,IAAJ,CAASvlB,IAAI,CAAC0lB,OAAd,EAAuBD,QAAvB,CAAP;AACH;;AACD,SAASS,WAAT,CAAqBlmB,IAArB,EAA2B;EACvB,IAAIA,IAAI,CAAC6lB,SAAL,GAAiB7lB,IAAI,CAAC0lB,OAAL,CAAanwB,MAAlC,EAA0C;IACtC,OAAOyK,IAAI,CAAC0lB,OAAL,CAAa1lB,IAAI,CAAC0lB,OAAL,CAAanwB,MAAb,GAAsB,CAAnC,CAAP;EACH;;EACD,OAAO,IAAP;AACH;;AACD,SAAS4wB,sBAAT,CAAgCnmB,IAAhC,EAAsC;EAClC,IAAIuC,UAAU,GAAG,EAAjB;;EACA,KAAK,IAAI/M,CAAC,GAAGwK,IAAI,CAAC6lB,SAAlB,EAA6BrwB,CAAC,GAAGwK,IAAI,CAAC0lB,OAAL,CAAanwB,MAA9C,EAAsDC,CAAC,EAAvD,EAA2D;IACvD,IAAIwK,IAAI,CAAC0lB,OAAL,CAAalwB,CAAb,MAAoB,EAAxB,EAA4B;MACxB+M,UAAU,IAAI,MAAM6jB,kBAAkB,CAACnmB,MAAM,CAACD,IAAI,CAAC0lB,OAAL,CAAalwB,CAAb,CAAD,CAAP,CAAtC;IACH;EACJ;;EACD,OAAO+M,UAAU,IAAI,GAArB;AACH;AACD;AACA;AACA;AACA;;;AACA,SAAS8jB,SAAT,CAAmBrmB,IAAnB,EAAyBsmB,KAAK,GAAG,CAAjC,EAAoC;EAChC,OAAOtmB,IAAI,CAAC0lB,OAAL,CAAaxvB,KAAb,CAAmB8J,IAAI,CAAC6lB,SAAL,GAAiBS,KAApC,CAAP;AACH;;AACD,SAASC,UAAT,CAAoBvmB,IAApB,EAA0B;EACtB,IAAIA,IAAI,CAAC6lB,SAAL,IAAkB7lB,IAAI,CAAC0lB,OAAL,CAAanwB,MAAnC,EAA2C;IACvC,OAAO,IAAP;EACH;;EACD,MAAMixB,MAAM,GAAG,EAAf;;EACA,KAAK,IAAIhxB,CAAC,GAAGwK,IAAI,CAAC6lB,SAAlB,EAA6BrwB,CAAC,GAAGwK,IAAI,CAAC0lB,OAAL,CAAanwB,MAAb,GAAsB,CAAvD,EAA0DC,CAAC,EAA3D,EAA+D;IAC3DgxB,MAAM,CAACtxB,IAAP,CAAY8K,IAAI,CAAC0lB,OAAL,CAAalwB,CAAb,CAAZ;EACH;;EACD,OAAO,IAAI+vB,IAAJ,CAASiB,MAAT,EAAiB,CAAjB,CAAP;AACH;;AACD,SAASC,SAAT,CAAmBzmB,IAAnB,EAAyB0mB,YAAzB,EAAuC;EACnC,MAAMF,MAAM,GAAG,EAAf;;EACA,KAAK,IAAIhxB,CAAC,GAAGwK,IAAI,CAAC6lB,SAAlB,EAA6BrwB,CAAC,GAAGwK,IAAI,CAAC0lB,OAAL,CAAanwB,MAA9C,EAAsDC,CAAC,EAAvD,EAA2D;IACvDgxB,MAAM,CAACtxB,IAAP,CAAY8K,IAAI,CAAC0lB,OAAL,CAAalwB,CAAb,CAAZ;EACH;;EACD,IAAIkxB,YAAY,YAAYnB,IAA5B,EAAkC;IAC9B,KAAK,IAAI/vB,CAAC,GAAGkxB,YAAY,CAACb,SAA1B,EAAqCrwB,CAAC,GAAGkxB,YAAY,CAAChB,OAAb,CAAqBnwB,MAA9D,EAAsEC,CAAC,EAAvE,EAA2E;MACvEgxB,MAAM,CAACtxB,IAAP,CAAYwxB,YAAY,CAAChB,OAAb,CAAqBlwB,CAArB,CAAZ;IACH;EACJ,CAJD,MAKK;IACD,MAAMmxB,WAAW,GAAGD,YAAY,CAACf,KAAb,CAAmB,GAAnB,CAApB;;IACA,KAAK,IAAInwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmxB,WAAW,CAACpxB,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;MACzC,IAAImxB,WAAW,CAACnxB,CAAD,CAAX,CAAeD,MAAf,GAAwB,CAA5B,EAA+B;QAC3BixB,MAAM,CAACtxB,IAAP,CAAYyxB,WAAW,CAACnxB,CAAD,CAAvB;MACH;IACJ;EACJ;;EACD,OAAO,IAAI+vB,IAAJ,CAASiB,MAAT,EAAiB,CAAjB,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAASI,WAAT,CAAqB5mB,IAArB,EAA2B;EACvB,OAAOA,IAAI,CAAC6lB,SAAL,IAAkB7lB,IAAI,CAAC0lB,OAAL,CAAanwB,MAAtC;AACH;AACD;AACA;AACA;;;AACA,SAASsxB,eAAT,CAAyBC,SAAzB,EAAoCC,SAApC,EAA+C;EAC3C,MAAMC,KAAK,GAAGjB,YAAY,CAACe,SAAD,CAA1B;EAAA,MAAuCG,KAAK,GAAGlB,YAAY,CAACgB,SAAD,CAA3D;;EACA,IAAIC,KAAK,KAAK,IAAd,EAAoB;IAChB,OAAOD,SAAP;EACH,CAFD,MAGK,IAAIC,KAAK,KAAKC,KAAd,EAAqB;IACtB,OAAOJ,eAAe,CAACZ,YAAY,CAACa,SAAD,CAAb,EAA0Bb,YAAY,CAACc,SAAD,CAAtC,CAAtB;EACH,CAFI,MAGA;IACD,MAAM,IAAIvzB,KAAJ,CAAU,gCACZuzB,SADY,GAEZ,kBAFY,GAGZ,aAHY,GAIZD,SAJY,GAKZ,GALE,CAAN;EAMH;AACJ;AACD;AACA;AACA;;;AACA,SAASI,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;EAC9B,MAAMC,QAAQ,GAAGhB,SAAS,CAACc,IAAD,EAAO,CAAP,CAA1B;EACA,MAAMG,SAAS,GAAGjB,SAAS,CAACe,KAAD,EAAQ,CAAR,CAA3B;;EACA,KAAK,IAAI5xB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6xB,QAAQ,CAAC9xB,MAAb,IAAuBC,CAAC,GAAG8xB,SAAS,CAAC/xB,MAArD,EAA6DC,CAAC,EAA9D,EAAkE;IAC9D,MAAM+xB,GAAG,GAAGvc,WAAW,CAACqc,QAAQ,CAAC7xB,CAAD,CAAT,EAAc8xB,SAAS,CAAC9xB,CAAD,CAAvB,CAAvB;;IACA,IAAI+xB,GAAG,KAAK,CAAZ,EAAe;MACX,OAAOA,GAAP;IACH;EACJ;;EACD,IAAIF,QAAQ,CAAC9xB,MAAT,KAAoB+xB,SAAS,CAAC/xB,MAAlC,EAA0C;IACtC,OAAO,CAAP;EACH;;EACD,OAAO8xB,QAAQ,CAAC9xB,MAAT,GAAkB+xB,SAAS,CAAC/xB,MAA5B,GAAqC,CAAC,CAAtC,GAA0C,CAAjD;AACH;AACD;AACA;AACA;;;AACA,SAASiyB,UAAT,CAAoBxnB,IAApB,EAA0BkC,KAA1B,EAAiC;EAC7B,IAAI8jB,aAAa,CAAChmB,IAAD,CAAb,KAAwBgmB,aAAa,CAAC9jB,KAAD,CAAzC,EAAkD;IAC9C,OAAO,KAAP;EACH;;EACD,KAAK,IAAI1M,CAAC,GAAGwK,IAAI,CAAC6lB,SAAb,EAAwB4B,CAAC,GAAGvlB,KAAK,CAAC2jB,SAAvC,EAAkDrwB,CAAC,IAAIwK,IAAI,CAAC0lB,OAAL,CAAanwB,MAApE,EAA4EC,CAAC,IAAIiyB,CAAC,EAAlF,EAAsF;IAClF,IAAIznB,IAAI,CAAC0lB,OAAL,CAAalwB,CAAb,MAAoB0M,KAAK,CAACwjB,OAAN,CAAc+B,CAAd,CAAxB,EAA0C;MACtC,OAAO,KAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH;AACD;AACA;AACA;;;AACA,SAASC,YAAT,CAAsB1nB,IAAtB,EAA4BkC,KAA5B,EAAmC;EAC/B,IAAI1M,CAAC,GAAGwK,IAAI,CAAC6lB,SAAb;EACA,IAAI4B,CAAC,GAAGvlB,KAAK,CAAC2jB,SAAd;;EACA,IAAIG,aAAa,CAAChmB,IAAD,CAAb,GAAsBgmB,aAAa,CAAC9jB,KAAD,CAAvC,EAAgD;IAC5C,OAAO,KAAP;EACH;;EACD,OAAO1M,CAAC,GAAGwK,IAAI,CAAC0lB,OAAL,CAAanwB,MAAxB,EAAgC;IAC5B,IAAIyK,IAAI,CAAC0lB,OAAL,CAAalwB,CAAb,MAAoB0M,KAAK,CAACwjB,OAAN,CAAc+B,CAAd,CAAxB,EAA0C;MACtC,OAAO,KAAP;IACH;;IACD,EAAEjyB,CAAF;IACA,EAAEiyB,CAAF;EACH;;EACD,OAAO,IAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,cAAN,CAAqB;EACjB;AACJ;AACA;AACA;EACI3uB,WAAW,CAACgH,IAAD,EAAO4nB,YAAP,EAAqB;IAC5B,KAAKA,YAAL,GAAoBA,YAApB;IACA,KAAKC,MAAL,GAAcxB,SAAS,CAACrmB,IAAD,EAAO,CAAP,CAAvB;IACA;;IACA,KAAK8nB,WAAL,GAAmBpd,IAAI,CAACqd,GAAL,CAAS,CAAT,EAAY,KAAKF,MAAL,CAAYtyB,MAAxB,CAAnB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKqyB,MAAL,CAAYtyB,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;MACzC,KAAKsyB,WAAL,IAAoBxhB,4DAAY,CAAC,KAAKuhB,MAAL,CAAYryB,CAAZ,CAAD,CAAhC;IACH;;IACDwyB,wBAAwB,CAAC,IAAD,CAAxB;EACH;;AAdgB;;AAgBrB,SAASC,kBAAT,CAA4BC,cAA5B,EAA4CrxB,KAA5C,EAAmD;EAC/C;EACA,IAAIqxB,cAAc,CAACL,MAAf,CAAsBtyB,MAAtB,GAA+B,CAAnC,EAAsC;IAClC2yB,cAAc,CAACJ,WAAf,IAA8B,CAA9B;EACH;;EACDI,cAAc,CAACL,MAAf,CAAsB3yB,IAAtB,CAA2B2B,KAA3B;EACAqxB,cAAc,CAACJ,WAAf,IAA8BxhB,4DAAY,CAACzP,KAAD,CAA1C;EACAmxB,wBAAwB,CAACE,cAAD,CAAxB;AACH;;AACD,SAASC,iBAAT,CAA2BD,cAA3B,EAA2C;EACvC,MAAME,IAAI,GAAGF,cAAc,CAACL,MAAf,CAAsBQ,GAAtB,EAAb;EACAH,cAAc,CAACJ,WAAf,IAA8BxhB,4DAAY,CAAC8hB,IAAD,CAA1C,CAFuC,CAGvC;;EACA,IAAIF,cAAc,CAACL,MAAf,CAAsBtyB,MAAtB,GAA+B,CAAnC,EAAsC;IAClC2yB,cAAc,CAACJ,WAAf,IAA8B,CAA9B;EACH;AACJ;;AACD,SAASE,wBAAT,CAAkCE,cAAlC,EAAkD;EAC9C,IAAIA,cAAc,CAACJ,WAAf,GAA6BxC,qBAAjC,EAAwD;IACpD,MAAM,IAAI9xB,KAAJ,CAAU00B,cAAc,CAACN,YAAf,GACZ,6BADY,GAEZtC,qBAFY,GAGZ,UAHY,GAIZ4C,cAAc,CAACJ,WAJH,GAKZ,IALE,CAAN;EAMH;;EACD,IAAII,cAAc,CAACL,MAAf,CAAsBtyB,MAAtB,GAA+B8vB,cAAnC,EAAmD;IAC/C,MAAM,IAAI7xB,KAAJ,CAAU00B,cAAc,CAACN,YAAf,GACZ,gEADY,GAEZvC,cAFY,GAGZ,+BAHY,GAIZiD,2BAA2B,CAACJ,cAAD,CAJzB,CAAN;EAKH;AACJ;AACD;AACA;AACA;;;AACA,SAASI,2BAAT,CAAqCJ,cAArC,EAAqD;EACjD,IAAIA,cAAc,CAACL,MAAf,CAAsBtyB,MAAtB,KAAiC,CAArC,EAAwC;IACpC,OAAO,EAAP;EACH;;EACD,OAAO,kBAAkB2yB,cAAc,CAACL,MAAf,CAAsB3a,IAAtB,CAA2B,GAA3B,CAAlB,GAAoD,GAA3D;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMqb,iBAAN,SAAgChE,YAAhC,CAA6C;EACzCvrB,WAAW,GAAG;IACV,MAAM,CAAC,SAAD,CAAN;IACA,IAAIwvB,MAAJ;IACA,IAAIC,gBAAJ;;IACA,IAAI,OAAOre,QAAP,KAAoB,WAApB,IACA,OAAOA,QAAQ,CAACQ,gBAAhB,KAAqC,WADzC,EACsD;MAClD,IAAI,OAAOR,QAAQ,CAAC,QAAD,CAAf,KAA8B,WAAlC,EAA+C;QAC3C;QACAqe,gBAAgB,GAAG,kBAAnB;QACAD,MAAM,GAAG,QAAT;MACH,CAJD,MAKK,IAAI,OAAOpe,QAAQ,CAAC,WAAD,CAAf,KAAiC,WAArC,EAAkD;QACnDqe,gBAAgB,GAAG,qBAAnB;QACAD,MAAM,GAAG,WAAT;MACH,CAHI,MAIA,IAAI,OAAOpe,QAAQ,CAAC,UAAD,CAAf,KAAgC,WAApC,EAAiD;QAClDqe,gBAAgB,GAAG,oBAAnB;QACAD,MAAM,GAAG,UAAT;MACH,CAHI,MAIA,IAAI,OAAOpe,QAAQ,CAAC,cAAD,CAAf,KAAoC,WAAxC,EAAqD;QACtDqe,gBAAgB,GAAG,wBAAnB;QACAD,MAAM,GAAG,cAAT;MACH;IACJ,CAvBS,CAwBV;IACA;IACA;IACA;;;IACA,KAAKE,QAAL,GAAgB,IAAhB;;IACA,IAAID,gBAAJ,EAAsB;MAClBre,QAAQ,CAACQ,gBAAT,CAA0B6d,gBAA1B,EAA4C,MAAM;QAC9C,MAAME,OAAO,GAAG,CAACve,QAAQ,CAACoe,MAAD,CAAzB;;QACA,IAAIG,OAAO,KAAK,KAAKD,QAArB,EAA+B;UAC3B,KAAKA,QAAL,GAAgBC,OAAhB;UACA,KAAKjE,OAAL,CAAa,SAAb,EAAwBiE,OAAxB;QACH;MACJ,CAND,EAMG,KANH;IAOH;EACJ;;EACiB,OAAXxD,WAAW,GAAG;IACjB,OAAO,IAAIoD,iBAAJ,EAAP;EACH;;EACDzD,eAAe,CAAC/lB,SAAD,EAAY;IACvB+G,sDAAM,CAAC/G,SAAS,KAAK,SAAf,EAA0B,yBAAyBA,SAAnD,CAAN;IACA,OAAO,CAAC,KAAK2pB,QAAN,CAAP;EACH;;AA9CwC;AAiD7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,mBAAmB,GAAG,IAA5B;AACA,MAAMC,2BAA2B,GAAG,KAAK,CAAL,GAAS,IAA7C,EAAmD;;AACnD,MAAMC,8BAA8B,GAAG,KAAK,IAA5C,EAAkD;;AAClD,MAAMC,0BAA0B,GAAG,GAAnC;AACA,MAAMC,6BAA6B,GAAG,KAAtC,EAA6C;;AAC7C,MAAMC,4BAA4B,GAAG,aAArC,EACA;;AACA,MAAMC,uBAAuB,GAAG,CAAhC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,oBAAN,SAAmCvF,aAAnC,CAAiD;EAC7C;AACJ;AACA;AACA;AACA;EACI5qB,WAAW,CAACinB,SAAD,EAAYC,cAAZ,EAA4BkJ,aAA5B,EAA2CC,gBAA3C,EAA6DC,mBAA7D,EAAkFC,kBAAlF,EAAsGC,sBAAtG,EAA8HC,aAA9H,EAA6I;IACpJ;IACA,KAAKxJ,SAAL,GAAiBA,SAAjB;IACA,KAAKC,cAAL,GAAsBA,cAAtB;IACA,KAAKkJ,aAAL,GAAqBA,aAArB;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,mBAAL,GAA2BA,mBAA3B;IACA,KAAKC,kBAAL,GAA0BA,kBAA1B;IACA,KAAKC,sBAAL,GAA8BA,sBAA9B;IACA,KAAKC,aAAL,GAAqBA,aAArB,CAToJ,CAUpJ;;IACA,KAAKnhB,EAAL,GAAU6gB,oBAAoB,CAACO,2BAArB,EAAV;IACA,KAAKpU,IAAL,GAAY7L,UAAU,CAAC,OAAO,KAAKnB,EAAZ,GAAiB,GAAlB,CAAtB;IACA,KAAKqhB,iBAAL,GAAyB,EAAzB;IACA,KAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;IACA,KAAKC,gBAAL,GAAwB,EAAxB;IACA,KAAKC,gBAAL,GAAwB,EAAxB;IACA,KAAKC,oBAAL,GAA4B,CAA5B;IACA,KAAKC,oBAAL,GAA4B,CAA5B;IACA,KAAKC,yBAAL,GAAiC,EAAjC;IACA,KAAKC,UAAL,GAAkB,KAAlB;IACA,KAAKC,eAAL,GAAuBxB,mBAAvB;IACA,KAAKyB,kBAAL,GAA0BxB,2BAA1B;IACA,KAAKyB,sBAAL,GAA8B,IAA9B;IACA,KAAKpV,aAAL,GAAqB,IAArB;IACA,KAAKqV,yBAAL,GAAiC,IAAjC;IACA,KAAK7B,QAAL,GAAgB,KAAhB,CA1BoJ,CA2BpJ;;IACA,KAAK8B,cAAL,GAAsB,EAAtB;IACA,KAAKC,cAAL,GAAsB,CAAtB;IACA,KAAKC,SAAL,GAAiB,IAAjB;IACA,KAAKtK,UAAL,GAAkB,IAAlB;IACA,KAAKD,cAAL,GAAsB,IAAtB;IACA,KAAKwK,kBAAL,GAA0B,KAA1B;IACA,KAAKC,sBAAL,GAA8B,CAA9B;IACA,KAAKC,0BAAL,GAAkC,CAAlC;IACA,KAAKC,gBAAL,GAAwB,IAAxB;IACA,KAAKC,0BAAL,GAAkC,IAAlC;IACA,KAAKC,8BAAL,GAAsC,IAAtC;;IACA,IAAIvB,aAAa,IAAI,CAAC1jB,yDAAS,EAA/B,EAAmC;MAC/B,MAAM,IAAIvS,KAAJ,CAAU,gFAAV,CAAN;IACH;;IACD+0B,iBAAiB,CAACpD,WAAlB,GAAgCzkB,EAAhC,CAAmC,SAAnC,EAA8C,KAAKuqB,UAAnD,EAA+D,IAA/D;;IACA,IAAIhL,SAAS,CAACtc,IAAV,CAAetM,OAAf,CAAuB,SAAvB,MAAsC,CAAC,CAA3C,EAA8C;MAC1C4tB,aAAa,CAACE,WAAd,GAA4BzkB,EAA5B,CAA+B,QAA/B,EAAyC,KAAKwqB,SAA9C,EAAyD,IAAzD;IACH;EACJ;;EACDnJ,WAAW,CAACpsB,MAAD,EAAS6U,IAAT,EAAe2gB,UAAf,EAA2B;IAClC,MAAMC,SAAS,GAAG,EAAE,KAAKX,cAAzB;IACA,MAAMlsB,GAAG,GAAG;MAAE8sB,CAAC,EAAED,SAAL;MAAgB7yB,CAAC,EAAE5C,MAAnB;MAA2BsV,CAAC,EAAET;IAA9B,CAAZ;IACA,KAAK8K,IAAL,CAAU3P,yDAAS,CAACpH,GAAD,CAAnB;IACAuH,sDAAM,CAAC,KAAKqkB,UAAN,EAAkB,wDAAlB,CAAN;IACA,KAAKO,SAAL,CAAe3I,WAAf,CAA2BxjB,GAA3B;;IACA,IAAI4sB,UAAJ,EAAgB;MACZ,KAAKX,cAAL,CAAoBY,SAApB,IAAiCD,UAAjC;IACH;EACJ;;EACDrvB,GAAG,CAACxF,KAAD,EAAQ;IACP,KAAKg1B,eAAL;IACA,MAAM5pB,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;IACA,MAAMqtB,OAAO,GAAG;MACZC,CAAC,EAAEl1B,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EADS;MAEZypB,CAAC,EAAEn1B,KAAK,CAACo1B;IAFG,CAAhB;IAIA,MAAMC,cAAc,GAAG;MACnBh2B,MAAM,EAAE,GADW;MAEnB41B,OAFmB;MAGnBrsB,UAAU,EAAGV,OAAD,IAAa;QACrB,MAAM/J,OAAO,GAAG+J,OAAO,CAAC,GAAD,CAAvB;;QACA,IAAIA,OAAO,CAAC,GAAD,CAAP,KAAiB,IAArB,EAA2B;UACvBkD,QAAQ,CAACC,OAAT,CAAiBlN,OAAjB;QACH,CAFD,MAGK;UACDiN,QAAQ,CAACE,MAAT,CAAgBnN,OAAhB;QACH;MACJ;IAXkB,CAAvB;IAaA,KAAKs1B,gBAAL,CAAsB70B,IAAtB,CAA2By2B,cAA3B;IACA,KAAK1B,oBAAL;IACA,MAAM2B,KAAK,GAAG,KAAK7B,gBAAL,CAAsBx0B,MAAtB,GAA+B,CAA7C;;IACA,IAAI,KAAK40B,UAAT,EAAqB;MACjB,KAAK0B,QAAL,CAAcD,KAAd;IACH;;IACD,OAAOlqB,QAAQ,CAACI,OAAhB;EACH;;EACDgqB,MAAM,CAACx1B,KAAD,EAAQy1B,aAAR,EAAuBC,GAAvB,EAA4B9sB,UAA5B,EAAwC;IAC1C,KAAKosB,eAAL;IACA,MAAMW,OAAO,GAAG31B,KAAK,CAAC41B,gBAAtB;;IACA,MAAM3pB,UAAU,GAAGjM,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EAAnB;;IACA,KAAKsT,IAAL,CAAU,uBAAuB/S,UAAvB,GAAoC,GAApC,GAA0C0pB,OAApD;;IACA,IAAI,CAAC,KAAKrC,OAAL,CAAauC,GAAb,CAAiB5pB,UAAjB,CAAL,EAAmC;MAC/B,KAAKqnB,OAAL,CAAa/2B,GAAb,CAAiB0P,UAAjB,EAA6B,IAAIsnB,GAAJ,EAA7B;IACH;;IACD/jB,sDAAM,CAACxP,KAAK,CAAC81B,YAAN,CAAmBC,SAAnB,MAAkC,CAAC/1B,KAAK,CAAC81B,YAAN,CAAmBE,YAAnB,EAApC,EAAuE,oDAAvE,CAAN;IACAxmB,sDAAM,CAAC,CAAC,KAAK8jB,OAAL,CAAa9tB,GAAb,CAAiByG,UAAjB,EAA6B4pB,GAA7B,CAAiCF,OAAjC,CAAF,EAA8C,8CAA9C,CAAN;IACA,MAAMM,UAAU,GAAG;MACfrtB,UADe;MAEfstB,MAAM,EAAET,aAFO;MAGfz1B,KAHe;MAIf01B;IAJe,CAAnB;IAMA,KAAKpC,OAAL,CAAa9tB,GAAb,CAAiByG,UAAjB,EAA6B1P,GAA7B,CAAiCo5B,OAAjC,EAA0CM,UAA1C;;IACA,IAAI,KAAKpC,UAAT,EAAqB;MACjB,KAAKsC,WAAL,CAAiBF,UAAjB;IACH;EACJ;;EACDV,QAAQ,CAACD,KAAD,EAAQ;IACZ,MAAM9vB,GAAG,GAAG,KAAKiuB,gBAAL,CAAsB6B,KAAtB,CAAZ;IACA,KAAK7J,WAAL,CAAiB,GAAjB,EAAsBjmB,GAAG,CAACyvB,OAA1B,EAAoC/sB,OAAD,IAAa;MAC5C,OAAO,KAAKurB,gBAAL,CAAsB6B,KAAtB,CAAP;MACA,KAAK3B,oBAAL;;MACA,IAAI,KAAKA,oBAAL,KAA8B,CAAlC,EAAqC;QACjC,KAAKF,gBAAL,GAAwB,EAAxB;MACH;;MACD,IAAIjuB,GAAG,CAACoD,UAAR,EAAoB;QAChBpD,GAAG,CAACoD,UAAJ,CAAeV,OAAf;MACH;IACJ,CATD;EAUH;;EACDiuB,WAAW,CAACF,UAAD,EAAa;IACpB,MAAMj2B,KAAK,GAAGi2B,UAAU,CAACj2B,KAAzB;;IACA,MAAMiM,UAAU,GAAGjM,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EAAnB;;IACA,MAAMiqB,OAAO,GAAG31B,KAAK,CAAC41B,gBAAtB;IACA,KAAK5W,IAAL,CAAU,eAAe/S,UAAf,GAA4B,OAA5B,GAAsC0pB,OAAhD;IACA,MAAMS,GAAG,GAAG;MAAE;MAASlB,CAAC,EAAEjpB;IAAd,CAAZ;IACA,MAAM5M,MAAM,GAAG,GAAf,CANoB,CAOpB;;IACA,IAAI42B,UAAU,CAACP,GAAf,EAAoB;MAChBU,GAAG,CAAC,GAAD,CAAH,GAAWp2B,KAAK,CAACo1B,YAAjB;MACAgB,GAAG,CAAC,GAAD,CAAH,GAAWH,UAAU,CAACP,GAAtB;IACH;;IACDU,GAAG;IAAE;IAAQ,GAAV,CAAH,GAAoBH,UAAU,CAACC,MAAX,EAApB;IACA,KAAKzK,WAAL,CAAiBpsB,MAAjB,EAAyB+2B,GAAzB,EAA+BluB,OAAD,IAAa;MACvC,MAAM/J,OAAO,GAAG+J,OAAO;MAAE;MAAQ,GAAV,CAAvB;MACA,MAAMmuB,MAAM,GAAGnuB,OAAO;MAAE;MAAU,GAAZ,CAAtB,CAFuC,CAGvC;;MACA2qB,oBAAoB,CAACyD,qBAArB,CAA2Cn4B,OAA3C,EAAoD6B,KAApD;MACA,MAAMu2B,iBAAiB,GAAG,KAAKjD,OAAL,CAAa9tB,GAAb,CAAiByG,UAAjB,KACtB,KAAKqnB,OAAL,CAAa9tB,GAAb,CAAiByG,UAAjB,EAA6BzG,GAA7B,CAAiCmwB,OAAjC,CADJ,CALuC,CAOvC;;MACA,IAAIY,iBAAiB,KAAKN,UAA1B,EAAsC;QAClC,KAAKjX,IAAL,CAAU,iBAAV,EAA6B9W,OAA7B;;QACA,IAAImuB,MAAM,KAAK,IAAf,EAAqB;UACjB,KAAKG,aAAL,CAAmBvqB,UAAnB,EAA+B0pB,OAA/B;QACH;;QACD,IAAIM,UAAU,CAACrtB,UAAf,EAA2B;UACvBqtB,UAAU,CAACrtB,UAAX,CAAsBytB,MAAtB,EAA8Bl4B,OAA9B;QACH;MACJ;IACJ,CAjBD;EAkBH;;EAC2B,OAArBm4B,qBAAqB,CAACn4B,OAAD,EAAU6B,KAAV,EAAiB;IACzC,IAAI7B,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAA9B,IAA0CoR,wDAAQ,CAACpR,OAAD,EAAU,GAAV,CAAtD,EAAsE;MAClE;MACA,MAAMs4B,QAAQ,GAAGxmB,uDAAO,CAAC9R,OAAD,EAAU,GAAV,CAAxB;;MACA,IAAI+K,KAAK,CAACC,OAAN,CAAcstB,QAAd,KAA2B,CAACA,QAAQ,CAAC11B,OAAT,CAAiB,UAAjB,CAAhC,EAA8D;QAC1D,MAAM21B,SAAS,GAAG,kBAAkB12B,KAAK,CAAC81B,YAAN,CAAmBa,QAAnB,GAA8BjrB,QAA9B,EAAlB,GAA6D,GAA/E;;QACA,MAAMkrB,SAAS,GAAG52B,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EAAlB;;QACA1D,IAAI,CAAE,+DAAD,GACA,2CAA0C0uB,SAAU,MADpD,GAEA,GAAEE,SAAU,iDAFb,CAAJ;MAGH;IACJ;EACJ;;EACDnJ,gBAAgB,CAACC,KAAD,EAAQ;IACpB,KAAK5D,UAAL,GAAkB4D,KAAlB;IACA,KAAK1O,IAAL,CAAU,sBAAV;;IACA,IAAI,KAAK8K,UAAT,EAAqB;MACjB,KAAK+M,OAAL;IACH,CAFD,MAGK;MACD;MACA;MACA,IAAI,KAAKhD,UAAT,EAAqB;QACjB,KAAKpI,WAAL,CAAiB,QAAjB,EAA2B,EAA3B,EAA+B,MAAM,CAAG,CAAxC;MACH;IACJ;;IACD,KAAKqL,sCAAL,CAA4CpJ,KAA5C;EACH;;EACDoJ,sCAAsC,CAACC,UAAD,EAAa;IAC/C;IACA;IACA,MAAMC,gBAAgB,GAAGD,UAAU,IAAIA,UAAU,CAAC93B,MAAX,KAAsB,EAA7D;;IACA,IAAI+3B,gBAAgB,IAAI9mB,uDAAO,CAAC6mB,UAAD,CAA/B,EAA6C;MACzC,KAAK/X,IAAL,CAAU,+DAAV;MACA,KAAK+U,kBAAL,GAA0BvB,8BAA1B;IACH;EACJ;;EACD7E,oBAAoB,CAACD,KAAD,EAAQ;IACxB,KAAK7D,cAAL,GAAsB6D,KAAtB;IACA,KAAK1O,IAAL,CAAU,2BAAV;;IACA,IAAI,KAAK6K,cAAT,EAAyB;MACrB,KAAKoN,WAAL;IACH,CAFD,MAGK;MACD;MACA;MACA;MACA,IAAI,KAAKpD,UAAT,EAAqB;QACjB,KAAKpI,WAAL,CAAiB,UAAjB,EAA6B,EAA7B,EAAiC,MAAM,CAAG,CAA1C;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACIoL,OAAO,GAAG;IACN,IAAI,KAAKhD,UAAL,IAAmB,KAAK/J,UAA5B,EAAwC;MACpC,MAAM4D,KAAK,GAAG,KAAK5D,UAAnB;MACA,MAAMoN,UAAU,GAAG/mB,6DAAa,CAACud,KAAD,CAAb,GAAuB,MAAvB,GAAgC,OAAnD;MACA,MAAMyJ,WAAW,GAAG;QAAEC,IAAI,EAAE1J;MAAR,CAApB;;MACA,IAAI,KAAKyF,aAAL,KAAuB,IAA3B,EAAiC;QAC7BgE,WAAW,CAAC,QAAD,CAAX,GAAwB,IAAxB;MACH,CAFD,MAGK,IAAI,OAAO,KAAKhE,aAAZ,KAA8B,QAAlC,EAA4C;QAC7CgE,WAAW,CAAC,SAAD,CAAX,GAAyB,KAAKhE,aAA9B;MACH;;MACD,KAAK1H,WAAL,CAAiByL,UAAjB,EAA6BC,WAA7B,EAA2CE,GAAD,IAAS;QAC/C,MAAMhB,MAAM,GAAGgB,GAAG;QAAE;QAAU,GAAZ,CAAlB;QACA,MAAMx3B,IAAI,GAAGw3B,GAAG;QAAE;QAAQ,GAAV,CAAH,IAAqB,OAAlC;;QACA,IAAI,KAAKvN,UAAL,KAAoB4D,KAAxB,EAA+B;UAC3B,IAAI2I,MAAM,KAAK,IAAf,EAAqB;YACjB,KAAK/B,sBAAL,GAA8B,CAA9B;UACH,CAFD,MAGK;YACD;YACA,KAAKgD,cAAL,CAAoBjB,MAApB,EAA4Bx2B,IAA5B;UACH;QACJ;MACJ,CAZD;IAaH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIo3B,WAAW,GAAG;IACV,IAAI,KAAKpD,UAAL,IAAmB,KAAKhK,cAA5B,EAA4C;MACxC,KAAK4B,WAAL,CAAiB,UAAjB,EAA6B;QAAE,SAAS,KAAK5B;MAAhB,CAA7B,EAAgEwN,GAAD,IAAS;QACpE,MAAMhB,MAAM,GAAGgB,GAAG;QAAE;QAAU,GAAZ,CAAlB;QACA,MAAMx3B,IAAI,GAAGw3B,GAAG;QAAE;QAAQ,GAAV,CAAH,IAAqB,OAAlC;;QACA,IAAIhB,MAAM,KAAK,IAAf,EAAqB;UACjB,KAAK9B,0BAAL,GAAkC,CAAlC;QACH,CAFD,MAGK;UACD,KAAKgD,kBAAL,CAAwBlB,MAAxB,EAAgCx2B,IAAhC;QACH;MACJ,CATD;IAUH;EACJ;EACD;AACJ;AACA;;;EACI23B,QAAQ,CAACx3B,KAAD,EAAQ01B,GAAR,EAAa;IACjB,MAAMzpB,UAAU,GAAGjM,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EAAnB;;IACA,MAAMiqB,OAAO,GAAG31B,KAAK,CAAC41B,gBAAtB;IACA,KAAK5W,IAAL,CAAU,yBAAyB/S,UAAzB,GAAsC,GAAtC,GAA4C0pB,OAAtD;IACAnmB,sDAAM,CAACxP,KAAK,CAAC81B,YAAN,CAAmBC,SAAnB,MAAkC,CAAC/1B,KAAK,CAAC81B,YAAN,CAAmBE,YAAnB,EAApC,EAAuE,sDAAvE,CAAN;IACA,MAAMR,MAAM,GAAG,KAAKgB,aAAL,CAAmBvqB,UAAnB,EAA+B0pB,OAA/B,CAAf;;IACA,IAAIH,MAAM,IAAI,KAAK3B,UAAnB,EAA+B;MAC3B,KAAK4D,aAAL,CAAmBxrB,UAAnB,EAA+B0pB,OAA/B,EAAwC31B,KAAK,CAACo1B,YAA9C,EAA4DM,GAA5D;IACH;EACJ;;EACD+B,aAAa,CAACxrB,UAAD,EAAa0pB,OAAb,EAAsB+B,QAAtB,EAAgChC,GAAhC,EAAqC;IAC9C,KAAK1W,IAAL,CAAU,iBAAiB/S,UAAjB,GAA8B,OAA9B,GAAwC0pB,OAAlD;IACA,MAAMS,GAAG,GAAG;MAAE;MAASlB,CAAC,EAAEjpB;IAAd,CAAZ;IACA,MAAM5M,MAAM,GAAG,GAAf,CAH8C,CAI9C;;IACA,IAAIq2B,GAAJ,EAAS;MACLU,GAAG,CAAC,GAAD,CAAH,GAAWsB,QAAX;MACAtB,GAAG,CAAC,GAAD,CAAH,GAAWV,GAAX;IACH;;IACD,KAAKjK,WAAL,CAAiBpsB,MAAjB,EAAyB+2B,GAAzB;EACH;;EACDxI,eAAe,CAAC3hB,UAAD,EAAapM,IAAb,EAAmB+I,UAAnB,EAA+B;IAC1C,KAAKosB,eAAL;;IACA,IAAI,KAAKnB,UAAT,EAAqB;MACjB,KAAK8D,iBAAL,CAAuB,GAAvB,EAA4B1rB,UAA5B,EAAwCpM,IAAxC,EAA8C+I,UAA9C;IACH,CAFD,MAGK;MACD,KAAKgrB,yBAAL,CAA+Bh1B,IAA/B,CAAoC;QAChCqN,UADgC;QAEhC5M,MAAM,EAAE,GAFwB;QAGhCQ,IAHgC;QAIhC+I;MAJgC,CAApC;IAMH;EACJ;;EACDilB,iBAAiB,CAAC5hB,UAAD,EAAapM,IAAb,EAAmB+I,UAAnB,EAA+B;IAC5C,KAAKosB,eAAL;;IACA,IAAI,KAAKnB,UAAT,EAAqB;MACjB,KAAK8D,iBAAL,CAAuB,IAAvB,EAA6B1rB,UAA7B,EAAyCpM,IAAzC,EAA+C+I,UAA/C;IACH,CAFD,MAGK;MACD,KAAKgrB,yBAAL,CAA+Bh1B,IAA/B,CAAoC;QAChCqN,UADgC;QAEhC5M,MAAM,EAAE,IAFwB;QAGhCQ,IAHgC;QAIhC+I;MAJgC,CAApC;IAMH;EACJ;;EACDklB,kBAAkB,CAAC7hB,UAAD,EAAarD,UAAb,EAAyB;IACvC,KAAKosB,eAAL;;IACA,IAAI,KAAKnB,UAAT,EAAqB;MACjB,KAAK8D,iBAAL,CAAuB,IAAvB,EAA6B1rB,UAA7B,EAAyC,IAAzC,EAA+CrD,UAA/C;IACH,CAFD,MAGK;MACD,KAAKgrB,yBAAL,CAA+Bh1B,IAA/B,CAAoC;QAChCqN,UADgC;QAEhC5M,MAAM,EAAE,IAFwB;QAGhCQ,IAAI,EAAE,IAH0B;QAIhC+I;MAJgC,CAApC;IAMH;EACJ;;EACD+uB,iBAAiB,CAACt4B,MAAD,EAAS4M,UAAT,EAAqBpM,IAArB,EAA2B+I,UAA3B,EAAuC;IACpD,MAAMqsB,OAAO,GAAG;MAAE;MAASC,CAAC,EAAEjpB,UAAd;;MAA0B;MAAS4X,CAAC,EAAEhkB;IAAtC,CAAhB;IACA,KAAKmf,IAAL,CAAU,kBAAkB3f,MAA5B,EAAoC41B,OAApC;IACA,KAAKxJ,WAAL,CAAiBpsB,MAAjB,EAAyB41B,OAAzB,EAAmC2C,QAAD,IAAc;MAC5C,IAAIhvB,UAAJ,EAAgB;QACZuL,UAAU,CAAC,MAAM;UACbvL,UAAU,CAACgvB,QAAQ;UAAE;UAAU,GAAZ,CAAT,EAA2BA,QAAQ;UAAE;UAAU,GAAZ,CAAnC,CAAV;QACH,CAFS,EAEPxjB,IAAI,CAACC,KAAL,CAAW,CAAX,CAFO,CAAV;MAGH;IACJ,CAND;EAOH;;EACDkZ,GAAG,CAACthB,UAAD,EAAapM,IAAb,EAAmB+I,UAAnB,EAA+B4kB,IAA/B,EAAqC;IACpC,KAAKqK,WAAL,CAAiB,GAAjB,EAAsB5rB,UAAtB,EAAkCpM,IAAlC,EAAwC+I,UAAxC,EAAoD4kB,IAApD;EACH;;EACDnzB,KAAK,CAAC4R,UAAD,EAAapM,IAAb,EAAmB+I,UAAnB,EAA+B4kB,IAA/B,EAAqC;IACtC,KAAKqK,WAAL,CAAiB,GAAjB,EAAsB5rB,UAAtB,EAAkCpM,IAAlC,EAAwC+I,UAAxC,EAAoD4kB,IAApD;EACH;;EACDqK,WAAW,CAACx4B,MAAD,EAAS4M,UAAT,EAAqBpM,IAArB,EAA2B+I,UAA3B,EAAuC4kB,IAAvC,EAA6C;IACpD,KAAKwH,eAAL;IACA,MAAMC,OAAO,GAAG;MACZ;MAASC,CAAC,EAAEjpB,UADA;;MAEZ;MAAS4X,CAAC,EAAEhkB;IAFA,CAAhB;;IAIA,IAAI2tB,IAAI,KAAKnxB,SAAb,EAAwB;MACpB44B,OAAO;MAAE;MAAQ,GAAV,CAAP,GAAwBzH,IAAxB;IACH,CARmD,CASpD;;;IACA,KAAKgG,gBAAL,CAAsB50B,IAAtB,CAA2B;MACvBS,MADuB;MAEvB41B,OAFuB;MAGvBrsB;IAHuB,CAA3B;IAKA,KAAK8qB,oBAAL;IACA,MAAM4B,KAAK,GAAG,KAAK9B,gBAAL,CAAsBv0B,MAAtB,GAA+B,CAA7C;;IACA,IAAI,KAAK40B,UAAT,EAAqB;MACjB,KAAKiE,QAAL,CAAcxC,KAAd;IACH,CAFD,MAGK;MACD,KAAKtW,IAAL,CAAU,oBAAoB/S,UAA9B;IACH;EACJ;;EACD6rB,QAAQ,CAACxC,KAAD,EAAQ;IACZ,MAAMj2B,MAAM,GAAG,KAAKm0B,gBAAL,CAAsB8B,KAAtB,EAA6Bj2B,MAA5C;IACA,MAAM41B,OAAO,GAAG,KAAKzB,gBAAL,CAAsB8B,KAAtB,EAA6BL,OAA7C;IACA,MAAMrsB,UAAU,GAAG,KAAK4qB,gBAAL,CAAsB8B,KAAtB,EAA6B1sB,UAAhD;IACA,KAAK4qB,gBAAL,CAAsB8B,KAAtB,EAA6ByC,MAA7B,GAAsC,KAAKlE,UAA3C;IACA,KAAKpI,WAAL,CAAiBpsB,MAAjB,EAAyB41B,OAAzB,EAAmC/sB,OAAD,IAAa;MAC3C,KAAK8W,IAAL,CAAU3f,MAAM,GAAG,WAAnB,EAAgC6I,OAAhC;MACA,OAAO,KAAKsrB,gBAAL,CAAsB8B,KAAtB,CAAP;MACA,KAAK5B,oBAAL,GAH2C,CAI3C;;MACA,IAAI,KAAKA,oBAAL,KAA8B,CAAlC,EAAqC;QACjC,KAAKF,gBAAL,GAAwB,EAAxB;MACH;;MACD,IAAI5qB,UAAJ,EAAgB;QACZA,UAAU,CAACV,OAAO;QAAE;QAAU,GAAZ,CAAR,EAA0BA,OAAO;QAAE;QAAU,GAAZ,CAAjC,CAAV;MACH;IACJ,CAXD;EAYH;;EACD6lB,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,IAAI,KAAK6F,UAAT,EAAqB;MACjB,MAAMoB,OAAO,GAAG;QAAE;QAAazf,CAAC,EAAEwY;MAAlB,CAAhB;MACA,KAAKhP,IAAL,CAAU,aAAV,EAAyBiW,OAAzB;MACA,KAAKxJ,WAAL;MAAiB;MAAU,GAA3B,EAAgCwJ,OAAhC,EAAyCnsB,MAAM,IAAI;QAC/C,MAAMutB,MAAM,GAAGvtB,MAAM;QAAE;QAAU,GAAZ,CAArB;;QACA,IAAIutB,MAAM,KAAK,IAAf,EAAqB;UACjB,MAAM2B,WAAW,GAAGlvB,MAAM;UAAE;UAAU,GAAZ,CAA1B;UACA,KAAKkW,IAAL,CAAU,aAAV,EAAyB,0BAA0BgZ,WAAnD;QACH;MACJ,CAND;IAOH;EACJ;;EACDzL,cAAc,CAACrkB,OAAD,EAAU;IACpB,IAAI,OAAOA,OAAX,EAAoB;MAChB;MACA,KAAK8W,IAAL,CAAU,kBAAkB3P,yDAAS,CAACnH,OAAD,CAArC;MACA,MAAM+vB,MAAM,GAAG/vB,OAAO,CAAC,GAAD,CAAtB;MACA,MAAM2sB,UAAU,GAAG,KAAKX,cAAL,CAAoB+D,MAApB,CAAnB;;MACA,IAAIpD,UAAJ,EAAgB;QACZ,OAAO,KAAKX,cAAL,CAAoB+D,MAApB,CAAP;QACApD,UAAU,CAAC3sB,OAAO;QAAE;QAAQ,GAAV,CAAR,CAAV;MACH;IACJ,CATD,MAUK,IAAI,WAAWA,OAAf,EAAwB;MACzB,MAAM,uCAAuCA,OAAO,CAAC,OAAD,CAApD;IACH,CAFI,MAGA,IAAI,OAAOA,OAAX,EAAoB;MACrB;MACA,KAAKgwB,WAAL,CAAiBhwB,OAAO,CAAC,GAAD,CAAxB,EAA+BA,OAAO,CAAC,GAAD,CAAtC;IACH;EACJ;;EACDgwB,WAAW,CAAC74B,MAAD,EAAS6U,IAAT,EAAe;IACtB,KAAK8K,IAAL,CAAU,qBAAV,EAAiC3f,MAAjC,EAAyC6U,IAAzC;;IACA,IAAI7U,MAAM,KAAK,GAAf,EAAoB;MAChB,KAAKyzB,aAAL,CAAmB5e,IAAI;MAAE;MAAQ,GAAV,CAAvB,EAAuCA,IAAI;MAAE;MAAQ,GAAV,CAA3C;MACA;MAAY,KADZ,EACmBA,IAAI,CAAC,GAAD,CADvB;IAEH,CAHD,MAIK,IAAI7U,MAAM,KAAK,GAAf,EAAoB;MACrB,KAAKyzB,aAAL,CAAmB5e,IAAI;MAAE;MAAQ,GAAV,CAAvB,EAAuCA,IAAI;MAAE;MAAQ,GAAV,CAA3C;MACA;MAAa,IADb,EACmBA,IAAI,CAAC,GAAD,CADvB;IAEH,CAHI,MAIA,IAAI7U,MAAM,KAAK,GAAf,EAAoB;MACrB,KAAK84B,gBAAL,CAAsBjkB,IAAI;MAAE;MAAQ,GAAV,CAA1B,EAA0CA,IAAI;MAAE;MAAS,GAAX,CAA9C;IACH,CAFI,MAGA,IAAI7U,MAAM,KAAK,IAAf,EAAqB;MACtB,KAAKi4B,cAAL,CAAoBpjB,IAAI;MAAE;MAAe,GAAjB,CAAxB,EAA+CA,IAAI;MAAE;MAAiB,GAAnB,CAAnD;IACH,CAFI,MAGA,IAAI7U,MAAM,KAAK,KAAf,EAAsB;MACvB,KAAKk4B,kBAAL,CAAwBrjB,IAAI;MAAE;MAAe,GAAjB,CAA5B,EAAmDA,IAAI;MAAE;MAAiB,GAAnB,CAAvD;IACH,CAFI,MAGA,IAAI7U,MAAM,KAAK,IAAf,EAAqB;MACtB,KAAK+4B,sBAAL,CAA4BlkB,IAA5B;IACH,CAFI,MAGA;MACDnW,KAAK,CAAC,+CACFsR,yDAAS,CAAChQ,MAAD,CADP,GAEF,oCAFC,CAAL;IAGH;EACJ;;EACD0qB,QAAQ,CAACiD,SAAD,EAAYC,SAAZ,EAAuB;IAC3B,KAAKjO,IAAL,CAAU,kBAAV;IACA,KAAK6U,UAAL,GAAkB,IAAlB;IACA,KAAKa,8BAAL,GAAsC,IAAI2D,IAAJ,GAAWC,OAAX,EAAtC;IACA,KAAKC,gBAAL,CAAsBvL,SAAtB;IACA,KAAKpO,aAAL,GAAqBqO,SAArB;;IACA,IAAI,KAAKuH,gBAAT,EAA2B;MACvB,KAAKgE,iBAAL;IACH;;IACD,KAAKC,aAAL;IACA,KAAKjE,gBAAL,GAAwB,KAAxB;IACA,KAAKzB,gBAAL,CAAsB,IAAtB;EACH;;EACD2F,gBAAgB,CAAClgB,OAAD,EAAU;IACtBhJ,sDAAM,CAAC,CAAC,KAAK4kB,SAAP,EAAkB,wDAAlB,CAAN;;IACA,IAAI,KAAKH,yBAAT,EAAoC;MAChC9T,YAAY,CAAC,KAAK8T,yBAAN,CAAZ;IACH,CAJqB,CAKtB;IACA;;;IACA,KAAKA,yBAAL,GAAiC9f,UAAU,CAAC,MAAM;MAC9C,KAAK8f,yBAAL,GAAiC,IAAjC;MACA,KAAK0E,oBAAL,GAF8C,CAG9C;IACH,CAJ0C,EAIxCvkB,IAAI,CAACC,KAAL,CAAWmE,OAAX,CAJwC,CAA3C;EAKH;;EACDwc,eAAe,GAAG;IACd,IAAI,CAAC,KAAKZ,SAAN,IAAmB,KAAKI,gBAA5B,EAA8C;MAC1C,KAAKkE,gBAAL,CAAsB,CAAtB;IACH;EACJ;;EACD/D,UAAU,CAACtC,OAAD,EAAU;IAChB;IACA,IAAIA,OAAO,IACP,CAAC,KAAKD,QADN,IAEA,KAAK0B,eAAL,KAAyB,KAAKC,kBAFlC,EAEsD;MAClD,KAAK/U,IAAL,CAAU,yCAAV;MACA,KAAK8U,eAAL,GAAuBxB,mBAAvB;;MACA,IAAI,CAAC,KAAK8B,SAAV,EAAqB;QACjB,KAAKsE,gBAAL,CAAsB,CAAtB;MACH;IACJ;;IACD,KAAKtG,QAAL,GAAgBC,OAAhB;EACH;;EACDuC,SAAS,CAACgE,MAAD,EAAS;IACd,IAAIA,MAAJ,EAAY;MACR,KAAK5Z,IAAL,CAAU,sBAAV;MACA,KAAK8U,eAAL,GAAuBxB,mBAAvB;;MACA,IAAI,CAAC,KAAK8B,SAAV,EAAqB;QACjB,KAAKsE,gBAAL,CAAsB,CAAtB;MACH;IACJ,CAND,MAOK;MACD,KAAK1Z,IAAL,CAAU,4CAAV;;MACA,IAAI,KAAKoV,SAAT,EAAoB;QAChB,KAAKA,SAAL,CAAe5S,KAAf;MACH;IACJ;EACJ;;EACDqX,qBAAqB,GAAG;IACpB,KAAK7Z,IAAL,CAAU,0BAAV;IACA,KAAK6U,UAAL,GAAkB,KAAlB;IACA,KAAKO,SAAL,GAAiB,IAAjB,CAHoB,CAIpB;;IACA,KAAK0E,uBAAL,GALoB,CAMpB;;IACA,KAAK5E,cAAL,GAAsB,EAAtB;;IACA,IAAI,KAAK6E,gBAAL,EAAJ,EAA6B;MACzB,IAAI,CAAC,KAAK3G,QAAV,EAAoB;QAChB,KAAKpT,IAAL,CAAU,4CAAV;QACA,KAAK8U,eAAL,GAAuB,KAAKC,kBAA5B;QACA,KAAKU,0BAAL,GAAkC,IAAI4D,IAAJ,GAAWC,OAAX,EAAlC;MACH,CAJD,MAKK,IAAI,KAAK5D,8BAAT,EAAyC;QAC1C;QACA,MAAMsE,6BAA6B,GAAG,IAAIX,IAAJ,GAAWC,OAAX,KAAuB,KAAK5D,8BAAlE;;QACA,IAAIsE,6BAA6B,GAAGtG,6BAApC,EAAmE;UAC/D,KAAKoB,eAAL,GAAuBxB,mBAAvB;QACH;;QACD,KAAKoC,8BAAL,GAAsC,IAAtC;MACH;;MACD,MAAMuE,2BAA2B,GAAG,IAAIZ,IAAJ,GAAWC,OAAX,KAAuB,KAAK7D,0BAAhE;MACA,IAAIyE,cAAc,GAAG9kB,IAAI,CAACqd,GAAL,CAAS,CAAT,EAAY,KAAKqC,eAAL,GAAuBmF,2BAAnC,CAArB;MACAC,cAAc,GAAG9kB,IAAI,CAACoM,MAAL,KAAgB0Y,cAAjC;MACA,KAAKla,IAAL,CAAU,4BAA4Bka,cAA5B,GAA6C,IAAvD;MACA,KAAKR,gBAAL,CAAsBQ,cAAtB,EAlByB,CAmBzB;;MACA,KAAKpF,eAAL,GAAuB1f,IAAI,CAACmC,GAAL,CAAS,KAAKwd,kBAAd,EAAkC,KAAKD,eAAL,GAAuBrB,0BAAzD,CAAvB;IACH;;IACD,KAAKM,gBAAL,CAAsB,KAAtB;EACH;;EACK4F,oBAAoB,GAAG;IAAA;;IAAA;MACzB,IAAI,KAAI,CAACI,gBAAL,EAAJ,EAA6B;QACzB,KAAI,CAAC/Z,IAAL,CAAU,6BAAV;;QACA,KAAI,CAACyV,0BAAL,GAAkC,IAAI4D,IAAJ,GAAWC,OAAX,EAAlC;QACA,KAAI,CAAC5D,8BAAL,GAAsC,IAAtC;;QACA,MAAMyE,aAAa,GAAG,KAAI,CAAC5M,cAAL,CAAoBthB,IAApB,CAAyB,KAAzB,CAAtB;;QACA,MAAMmuB,OAAO,GAAG,KAAI,CAACrP,QAAL,CAAc9e,IAAd,CAAmB,KAAnB,CAAhB;;QACA,MAAM+B,YAAY,GAAG,KAAI,CAAC6rB,qBAAL,CAA2B5tB,IAA3B,CAAgC,KAAhC,CAArB;;QACA,MAAMsT,MAAM,GAAG,KAAI,CAACvM,EAAL,GAAU,GAAV,GAAgB6gB,oBAAoB,CAACwG,iBAArB,EAA/B;QACA,MAAMza,aAAa,GAAG,KAAI,CAACA,aAA3B;QACA,IAAI0a,QAAQ,GAAG,KAAf;QACA,IAAIC,UAAU,GAAG,IAAjB;;QACA,MAAMC,OAAO,GAAG,YAAY;UACxB,IAAID,UAAJ,EAAgB;YACZA,UAAU,CAAC/X,KAAX;UACH,CAFD,MAGK;YACD8X,QAAQ,GAAG,IAAX;YACAtsB,YAAY;UACf;QACJ,CARD;;QASA,MAAMysB,aAAa,GAAG,UAAUxxB,GAAV,EAAe;UACjCuH,sDAAM,CAAC+pB,UAAD,EAAa,wDAAb,CAAN;UACAA,UAAU,CAAC9N,WAAX,CAAuBxjB,GAAvB;QACH,CAHD;;QAIA,KAAI,CAACmsB,SAAL,GAAiB;UACb5S,KAAK,EAAEgY,OADM;UAEb/N,WAAW,EAAEgO;QAFA,CAAjB;QAIA,MAAMzgB,YAAY,GAAG,KAAI,CAACqb,kBAA1B;QACA,KAAI,CAACA,kBAAL,GAA0B,KAA1B;;QACA,IAAI;UACA;UACA;UACA,MAAM,CAAC3V,SAAD,EAAYD,aAAZ,UAAmCxF,OAAO,CAACygB,GAAR,CAAY,CACjD,KAAI,CAACzG,kBAAL,CAAwBla,QAAxB,CAAiCC,YAAjC,CADiD,EAEjD,KAAI,CAACka,sBAAL,CAA4Bna,QAA5B,CAAqCC,YAArC,CAFiD,CAAZ,CAAzC;;UAIA,IAAI,CAACsgB,QAAL,EAAe;YACXpmB,GAAG,CAAC,4CAAD,CAAH;YACA,KAAI,CAAC4W,UAAL,GAAkBpL,SAAS,IAAIA,SAAS,CAAC1E,WAAzC;YACA,KAAI,CAAC6P,cAAL,GAAsBpL,aAAa,IAAIA,aAAa,CAACiP,KAArD;YACA6L,UAAU,GAAG,IAAI7P,UAAJ,CAAenL,MAAf,EAAuB,KAAI,CAACoL,SAA5B,EAAuC,KAAI,CAACC,cAA5C,EAA4D,KAAI,CAACC,cAAjE,EAAiF,KAAI,CAACC,UAAtF,EAAkGqP,aAAlG,EAAiHC,OAAjH,EAA0HpsB,YAA1H;YACb;YAAc0K,MAAM,IAAI;cACpB1P,IAAI,CAAC0P,MAAM,GAAG,IAAT,GAAgB,KAAI,CAACiS,SAAL,CAAeje,QAAf,EAAhB,GAA4C,GAA7C,CAAJ;;cACA,KAAI,CAACiuB,SAAL,CAAehH,4BAAf;YACH,CAJY,EAIV/T,aAJU,CAAb;UAKH,CATD,MAUK;YACD1L,GAAG,CAAC,uCAAD,CAAH;UACH;QACJ,CApBD,CAqBA,OAAOnV,KAAP,EAAc;UACV,KAAI,CAACihB,IAAL,CAAU,0BAA0BjhB,KAApC;;UACA,IAAI,CAACu7B,QAAL,EAAe;YACX,IAAI,KAAI,CAAC3P,SAAL,CAAe3b,SAAnB,EAA8B;cAC1B;cACA;cACA;cACAhG,IAAI,CAACjK,KAAD,CAAJ;YACH;;YACDy7B,OAAO;UACV;QACJ;MACJ;IAhEwB;EAiE5B;;EACDG,SAAS,CAACjiB,MAAD,EAAS;IACdxE,GAAG,CAAC,yCAAyCwE,MAA1C,CAAH;IACA,KAAK2b,iBAAL,CAAuB3b,MAAvB,IAAiC,IAAjC;;IACA,IAAI,KAAK0c,SAAT,EAAoB;MAChB,KAAKA,SAAL,CAAe5S,KAAf;IACH,CAFD,MAGK;MACD,IAAI,KAAKyS,yBAAT,EAAoC;QAChC9T,YAAY,CAAC,KAAK8T,yBAAN,CAAZ;QACA,KAAKA,yBAAL,GAAiC,IAAjC;MACH;;MACD,IAAI,KAAKJ,UAAT,EAAqB;QACjB,KAAKgF,qBAAL;MACH;IACJ;EACJ;;EACDe,MAAM,CAACliB,MAAD,EAAS;IACXxE,GAAG,CAAC,qCAAqCwE,MAAtC,CAAH;IACA,OAAO,KAAK2b,iBAAL,CAAuB3b,MAAvB,CAAP;;IACA,IAAItH,uDAAO,CAAC,KAAKijB,iBAAN,CAAX,EAAqC;MACjC,KAAKS,eAAL,GAAuBxB,mBAAvB;;MACA,IAAI,CAAC,KAAK8B,SAAV,EAAqB;QACjB,KAAKsE,gBAAL,CAAsB,CAAtB;MACH;IACJ;EACJ;;EACDH,gBAAgB,CAACvL,SAAD,EAAY;IACxB,MAAMpf,KAAK,GAAGof,SAAS,GAAG,IAAIqL,IAAJ,GAAWC,OAAX,EAA1B;IACA,KAAKtF,mBAAL,CAAyB;MAAE6G,gBAAgB,EAAEjsB;IAApB,CAAzB;EACH;;EACDkrB,uBAAuB,GAAG;IACtB,KAAK,IAAI55B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKs0B,gBAAL,CAAsBv0B,MAA1C,EAAkDC,CAAC,EAAnD,EAAuD;MACnD,MAAMquB,GAAG,GAAG,KAAKiG,gBAAL,CAAsBt0B,CAAtB,CAAZ;;MACA,IAAIquB,GAAG;MAAI;MAAS,OAAOA,GAAG,CAAC0H,OAA3B,IAAsC1H,GAAG,CAACwK,MAA9C,EAAsD;QAClD,IAAIxK,GAAG,CAAC3kB,UAAR,EAAoB;UAChB2kB,GAAG,CAAC3kB,UAAJ,CAAe,YAAf;QACH;;QACD,OAAO,KAAK4qB,gBAAL,CAAsBt0B,CAAtB,CAAP;QACA,KAAKw0B,oBAAL;MACH;IACJ,CAVqB,CAWtB;;;IACA,IAAI,KAAKA,oBAAL,KAA8B,CAAlC,EAAqC;MACjC,KAAKF,gBAAL,GAAwB,EAAxB;IACH;EACJ;;EACD2E,gBAAgB,CAAClsB,UAAD,EAAajM,KAAb,EAAoB;IAChC;IACA,IAAI21B,OAAJ;;IACA,IAAI,CAAC31B,KAAL,EAAY;MACR21B,OAAO,GAAG,SAAV;IACH,CAFD,MAGK;MACDA,OAAO,GAAG31B,KAAK,CAAC1F,GAAN,CAAU66B,CAAC,IAAIlgB,iBAAiB,CAACkgB,CAAD,CAAhC,EAAqCve,IAArC,CAA0C,GAA1C,CAAV;IACH;;IACD,MAAM4e,MAAM,GAAG,KAAKgB,aAAL,CAAmBvqB,UAAnB,EAA+B0pB,OAA/B,CAAf;;IACA,IAAIH,MAAM,IAAIA,MAAM,CAAC5sB,UAArB,EAAiC;MAC7B4sB,MAAM,CAAC5sB,UAAP,CAAkB,mBAAlB;IACH;EACJ;;EACD4tB,aAAa,CAACvqB,UAAD,EAAa0pB,OAAb,EAAsB;IAC/B,MAAMmE,oBAAoB,GAAG,IAAI7K,IAAJ,CAAShjB,UAAT,EAAqBP,QAArB,EAA7B,CAD+B,CAC+B;;IAC9D,IAAI8pB,MAAJ;;IACA,IAAI,KAAKlC,OAAL,CAAauC,GAAb,CAAiBiE,oBAAjB,CAAJ,EAA4C;MACxC,MAAMx/B,GAAG,GAAG,KAAKg5B,OAAL,CAAa9tB,GAAb,CAAiBs0B,oBAAjB,CAAZ;MACAtE,MAAM,GAAGl7B,GAAG,CAACkL,GAAJ,CAAQmwB,OAAR,CAAT;MACAr7B,GAAG,CAAC6S,MAAJ,CAAWwoB,OAAX;;MACA,IAAIr7B,GAAG,CAAC2P,IAAJ,KAAa,CAAjB,EAAoB;QAChB,KAAKqpB,OAAL,CAAanmB,MAAb,CAAoB2sB,oBAApB;MACH;IACJ,CAPD,MAQK;MACD;MACAtE,MAAM,GAAGn5B,SAAT;IACH;;IACD,OAAOm5B,MAAP;EACH;;EACD8B,cAAc,CAACyC,UAAD,EAAaC,WAAb,EAA0B;IACpC9mB,GAAG,CAAC,yBAAyB6mB,UAAzB,GAAsC,GAAtC,GAA4CC,WAA7C,CAAH;IACA,KAAKlQ,UAAL,GAAkB,IAAlB;IACA,KAAKuK,kBAAL,GAA0B,IAA1B;IACA,KAAKD,SAAL,CAAe5S,KAAf;;IACA,IAAIuY,UAAU,KAAK,eAAf,IAAkCA,UAAU,KAAK,mBAArD,EAA0E;MACtE;MACA;MACA;MACA,KAAKzF,sBAAL;;MACA,IAAI,KAAKA,sBAAL,IAA+B1B,uBAAnC,EAA4D;QACxD;QACA,KAAKkB,eAAL,GAAuBtB,8BAAvB,CAFwD,CAGxD;QACA;;QACA,KAAKS,kBAAL,CAAwB5Z,qBAAxB;MACH;IACJ;EACJ;;EACDke,kBAAkB,CAACwC,UAAD,EAAaC,WAAb,EAA0B;IACxC9mB,GAAG,CAAC,8BAA8B6mB,UAA9B,GAA2C,GAA3C,GAAiDC,WAAlD,CAAH;IACA,KAAKnQ,cAAL,GAAsB,IAAtB;IACA,KAAKwK,kBAAL,GAA0B,IAA1B,CAHwC,CAIxC;IACA;;IACA,IAAI0F,UAAU,KAAK,eAAf,IAAkCA,UAAU,KAAK,mBAArD,EAA0E;MACtE;MACA;MACA;MACA,KAAKxF,0BAAL;;MACA,IAAI,KAAKA,0BAAL,IAAmC3B,uBAAvC,EAAgE;QAC5D,KAAKM,sBAAL,CAA4B7Z,qBAA5B;MACH;IACJ;EACJ;;EACD+e,sBAAsB,CAAClkB,IAAD,EAAO;IACzB,IAAI,KAAK8f,sBAAT,EAAiC;MAC7B,KAAKA,sBAAL,CAA4B9f,IAA5B;IACH,CAFD,MAGK;MACD,IAAI,SAASA,IAAb,EAAmB;QACf+lB,OAAO,CAAC/mB,GAAR,CAAY,eAAegB,IAAI,CAAC,KAAD,CAAJ,CAAYgmB,OAAZ,CAAoB,IAApB,EAA0B,cAA1B,CAA3B;MACH;IACJ;EACJ;;EACDzB,aAAa,GAAG;IACZ;IACA,KAAK5B,OAAL;IACA,KAAKI,WAAL,GAHY,CAIZ;IACA;;IACA,KAAK,MAAMkD,OAAX,IAAsB,KAAK7G,OAAL,CAAa/mB,MAAb,EAAtB,EAA6C;MACzC,KAAK,MAAM0pB,UAAX,IAAyBkE,OAAO,CAAC5tB,MAAR,EAAzB,EAA2C;QACvC,KAAK4pB,WAAL,CAAiBF,UAAjB;MACH;IACJ;;IACD,KAAK,IAAI/2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKs0B,gBAAL,CAAsBv0B,MAA1C,EAAkDC,CAAC,EAAnD,EAAuD;MACnD,IAAI,KAAKs0B,gBAAL,CAAsBt0B,CAAtB,CAAJ,EAA8B;QAC1B,KAAK44B,QAAL,CAAc54B,CAAd;MACH;IACJ;;IACD,OAAO,KAAK00B,yBAAL,CAA+B30B,MAAtC,EAA8C;MAC1C,MAAMg2B,OAAO,GAAG,KAAKrB,yBAAL,CAA+B7P,KAA/B,EAAhB;MACA,KAAK4T,iBAAL,CAAuB1C,OAAO,CAAC51B,MAA/B,EAAuC41B,OAAO,CAAChpB,UAA/C,EAA2DgpB,OAAO,CAACp1B,IAAnE,EAAyEo1B,OAAO,CAACrsB,UAAjF;IACH;;IACD,KAAK,IAAI1J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKu0B,gBAAL,CAAsBx0B,MAA1C,EAAkDC,CAAC,EAAnD,EAAuD;MACnD,IAAI,KAAKu0B,gBAAL,CAAsBv0B,CAAtB,CAAJ,EAA8B;QAC1B,KAAKq2B,QAAL,CAAcr2B,CAAd;MACH;IACJ;EACJ;EACD;AACJ;AACA;;;EACIs5B,iBAAiB,GAAG;IAChB,MAAMxK,KAAK,GAAG,EAAd;IACA,IAAIoM,UAAU,GAAG,IAAjB;;IACA,IAAI3qB,yDAAS,EAAb,EAAiB;MACb,IAAI,KAAKka,SAAL,CAAe3b,SAAnB,EAA8B;QAC1BosB,UAAU,GAAG,YAAb;MACH,CAFD,MAGK;QACDA,UAAU,GAAG,MAAb;MACH;IACJ;;IACDpM,KAAK,CAAC,SAASoM,UAAT,GAAsB,GAAtB,GAA4BlrB,WAAW,CAACgrB,OAAZ,CAAoB,KAApB,EAA2B,GAA3B,CAA7B,CAAL,GAAqE,CAArE;;IACA,IAAInqB,+DAAe,EAAnB,EAAuB;MACnBie,KAAK,CAAC,mBAAD,CAAL,GAA6B,CAA7B;IACH,CAFD,MAGK,IAAI3d,6DAAa,EAAjB,EAAqB;MACtB2d,KAAK,CAAC,uBAAD,CAAL,GAAiC,CAAjC;IACH;;IACD,KAAKD,WAAL,CAAiBC,KAAjB;EACH;;EACD+K,gBAAgB,GAAG;IACf,MAAMH,MAAM,GAAGjK,aAAa,CAACE,WAAd,GAA4BC,eAA5B,EAAf;IACA,OAAO1e,uDAAO,CAAC,KAAKijB,iBAAN,CAAP,IAAmCuF,MAA1C;EACH;;AAvwB4C;;AAywBjD/F,oBAAoB,CAACO,2BAArB,GAAmD,CAAnD;AACA;AACA;AACA;;AACAP,oBAAoB,CAACwG,iBAArB,GAAyC,CAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMgB,SAAN,CAAgB;EACZ33B,WAAW,CAACC,IAAD,EAAO23B,IAAP,EAAa;IACpB,KAAK33B,IAAL,GAAYA,IAAZ;IACA,KAAK23B,IAAL,GAAYA,IAAZ;EACH;;EACU,OAAJC,IAAI,CAAC53B,IAAD,EAAO23B,IAAP,EAAa;IACpB,OAAO,IAAID,SAAJ,CAAc13B,IAAd,EAAoB23B,IAApB,CAAP;EACH;;AAPW;AAUhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,KAAN,CAAY;EACR;AACJ;AACA;AACA;EACIC,UAAU,GAAG;IACT,OAAO,KAAKC,OAAL,CAAazvB,IAAb,CAAkB,IAAlB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI0vB,mBAAmB,CAACC,OAAD,EAAUC,OAAV,EAAmB;IAClC,MAAMC,UAAU,GAAG,IAAIT,SAAJ,CAAc7lB,QAAd,EAAwBomB,OAAxB,CAAnB;IACA,MAAMG,UAAU,GAAG,IAAIV,SAAJ,CAAc7lB,QAAd,EAAwBqmB,OAAxB,CAAnB;IACA,OAAO,KAAKH,OAAL,CAAaI,UAAb,EAAyBC,UAAzB,MAAyC,CAAhD;EACH;EACD;AACJ;AACA;AACA;;;EACIC,OAAO,GAAG;IACN;IACA,OAAOX,SAAS,CAACY,GAAjB;EACH;;AA3BO;AA8BZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,YAAJ;;AACA,MAAMC,QAAN,SAAuBX,KAAvB,CAA6B;EACF,WAAZU,YAAY,GAAG;IACtB,OAAOA,YAAP;EACH;;EACsB,WAAZA,YAAY,CAAC74B,GAAD,EAAM;IACzB64B,YAAY,GAAG74B,GAAf;EACH;;EACDq4B,OAAO,CAACz4B,CAAD,EAAI0S,CAAJ,EAAO;IACV,OAAOD,WAAW,CAACzS,CAAC,CAACU,IAAH,EAASgS,CAAC,CAAChS,IAAX,CAAlB;EACH;;EACDy4B,WAAW,CAACd,IAAD,EAAO;IACd;IACA;IACA,MAAMhqB,8DAAc,CAAC,iDAAD,CAApB;EACH;;EACDqqB,mBAAmB,CAACC,OAAD,EAAUC,OAAV,EAAmB;IAClC,OAAO,KAAP,CADkC,CACpB;EACjB;;EACDG,OAAO,GAAG;IACN;IACA,OAAOX,SAAS,CAACY,GAAjB;EACH;;EACDI,OAAO,GAAG;IACN;IACA;IACA,OAAO,IAAIhB,SAAJ,CAAc5lB,QAAd,EAAwBymB,YAAxB,CAAP;EACH;;EACDI,QAAQ,CAACC,UAAD,EAAa54B,IAAb,EAAmB;IACvB6M,sDAAM,CAAC,OAAO+rB,UAAP,KAAsB,QAAvB,EAAiC,8CAAjC,CAAN,CADuB,CAEvB;;IACA,OAAO,IAAIlB,SAAJ,CAAckB,UAAd,EAA0BL,YAA1B,CAAP;EACH;EACD;AACJ;AACA;;;EACIxvB,QAAQ,GAAG;IACP,OAAO,MAAP;EACH;;AArCwB;;AAuC7B,MAAM8vB,SAAS,GAAG,IAAIL,QAAJ,EAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,MAAMM,iBAAN,CAAwB;EACpB;AACJ;AACA;AACA;EACI/4B,WAAW,CAAC43B,IAAD,EAAOoB,QAAP,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,gBAAgB,GAAG,IAA5D,EAAkE;IACzE,KAAKD,UAAL,GAAkBA,UAAlB;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,UAAL,GAAkB,EAAlB;IACA,IAAI7K,GAAG,GAAG,CAAV;;IACA,OAAO,CAACqJ,IAAI,CAAClqB,OAAL,EAAR,EAAwB;MACpBkqB,IAAI,GAAGA,IAAP;MACArJ,GAAG,GAAGyK,QAAQ,GAAGC,UAAU,CAACrB,IAAI,CAACl8B,GAAN,EAAWs9B,QAAX,CAAb,GAAoC,CAAlD,CAFoB,CAGpB;;MACA,IAAIE,UAAJ,EAAgB;QACZ3K,GAAG,IAAI,CAAC,CAAR;MACH;;MACD,IAAIA,GAAG,GAAG,CAAV,EAAa;QACT;QACA,IAAI,KAAK2K,UAAT,EAAqB;UACjBtB,IAAI,GAAGA,IAAI,CAACzJ,IAAZ;QACH,CAFD,MAGK;UACDyJ,IAAI,GAAGA,IAAI,CAACxJ,KAAZ;QACH;MACJ,CARD,MASK,IAAIG,GAAG,KAAK,CAAZ,EAAe;QAChB;QACA,KAAK6K,UAAL,CAAgBl9B,IAAhB,CAAqB07B,IAArB;QACA;MACH,CAJI,MAKA;QACD;QACA,KAAKwB,UAAL,CAAgBl9B,IAAhB,CAAqB07B,IAArB;;QACA,IAAI,KAAKsB,UAAT,EAAqB;UACjBtB,IAAI,GAAGA,IAAI,CAACxJ,KAAZ;QACH,CAFD,MAGK;UACDwJ,IAAI,GAAGA,IAAI,CAACzJ,IAAZ;QACH;MACJ;IACJ;EACJ;;EACDkL,OAAO,GAAG;IACN,IAAI,KAAKD,UAAL,CAAgB78B,MAAhB,KAA2B,CAA/B,EAAkC;MAC9B,OAAO,IAAP;IACH;;IACD,IAAIq7B,IAAI,GAAG,KAAKwB,UAAL,CAAgB/J,GAAhB,EAAX;IACA,IAAIjpB,MAAJ;;IACA,IAAI,KAAK+yB,gBAAT,EAA2B;MACvB/yB,MAAM,GAAG,KAAK+yB,gBAAL,CAAsBvB,IAAI,CAACl8B,GAA3B,EAAgCk8B,IAAI,CAACt+B,KAArC,CAAT;IACH,CAFD,MAGK;MACD8M,MAAM,GAAG;QAAE1K,GAAG,EAAEk8B,IAAI,CAACl8B,GAAZ;QAAiBpC,KAAK,EAAEs+B,IAAI,CAACt+B;MAA7B,CAAT;IACH;;IACD,IAAI,KAAK4/B,UAAT,EAAqB;MACjBtB,IAAI,GAAGA,IAAI,CAACzJ,IAAZ;;MACA,OAAO,CAACyJ,IAAI,CAAClqB,OAAL,EAAR,EAAwB;QACpB,KAAK0rB,UAAL,CAAgBl9B,IAAhB,CAAqB07B,IAArB;QACAA,IAAI,GAAGA,IAAI,CAACxJ,KAAZ;MACH;IACJ,CAND,MAOK;MACDwJ,IAAI,GAAGA,IAAI,CAACxJ,KAAZ;;MACA,OAAO,CAACwJ,IAAI,CAAClqB,OAAL,EAAR,EAAwB;QACpB,KAAK0rB,UAAL,CAAgBl9B,IAAhB,CAAqB07B,IAArB;QACAA,IAAI,GAAGA,IAAI,CAACzJ,IAAZ;MACH;IACJ;;IACD,OAAO/nB,MAAP;EACH;;EACDkzB,OAAO,GAAG;IACN,OAAO,KAAKF,UAAL,CAAgB78B,MAAhB,GAAyB,CAAhC;EACH;;EACDg9B,IAAI,GAAG;IACH,IAAI,KAAKH,UAAL,CAAgB78B,MAAhB,KAA2B,CAA/B,EAAkC;MAC9B,OAAO,IAAP;IACH;;IACD,MAAMq7B,IAAI,GAAG,KAAKwB,UAAL,CAAgB,KAAKA,UAAL,CAAgB78B,MAAhB,GAAyB,CAAzC,CAAb;;IACA,IAAI,KAAK48B,gBAAT,EAA2B;MACvB,OAAO,KAAKA,gBAAL,CAAsBvB,IAAI,CAACl8B,GAA3B,EAAgCk8B,IAAI,CAACt+B,KAArC,CAAP;IACH,CAFD,MAGK;MACD,OAAO;QAAEoC,GAAG,EAAEk8B,IAAI,CAACl8B,GAAZ;QAAiBpC,KAAK,EAAEs+B,IAAI,CAACt+B;MAA7B,CAAP;IACH;EACJ;;AArFmB;AAuFxB;AACA;AACA;;;AACA,MAAMkgC,QAAN,CAAe;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;EACIx5B,WAAW,CAACtE,GAAD,EAAMpC,KAAN,EAAamgC,KAAb,EAAoBtL,IAApB,EAA0BC,KAA1B,EAAiC;IACxC,KAAK1yB,GAAL,GAAWA,GAAX;IACA,KAAKpC,KAAL,GAAaA,KAAb;IACA,KAAKmgC,KAAL,GAAaA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBD,QAAQ,CAACE,GAA9C;IACA,KAAKvL,IAAL,GACIA,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsBwL,SAAS,CAACC,UADpC;IAEA,KAAKxL,KAAL,GACIA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBuL,SAAS,CAACC,UADtC;EAEH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,IAAI,CAACn+B,GAAD,EAAMpC,KAAN,EAAamgC,KAAb,EAAoBtL,IAApB,EAA0BC,KAA1B,EAAiC;IACjC,OAAO,IAAIoL,QAAJ,CAAa99B,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,KAAKA,GAAtC,EAA2CpC,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAAxE,EAA+EmgC,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAA5G,EAAmHtL,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsB,KAAKA,IAA9I,EAAoJC,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAAjL,CAAP;EACH;EACD;AACJ;AACA;;;EACI0L,KAAK,GAAG;IACJ,OAAO,KAAK3L,IAAL,CAAU2L,KAAV,KAAoB,CAApB,GAAwB,KAAK1L,KAAL,CAAW0L,KAAX,EAA/B;EACH;EACD;AACJ;AACA;;;EACIpsB,OAAO,GAAG;IACN,OAAO,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIqsB,gBAAgB,CAACp9B,MAAD,EAAS;IACrB,OAAQ,KAAKwxB,IAAL,CAAU4L,gBAAV,CAA2Bp9B,MAA3B,KACJ,CAAC,CAACA,MAAM,CAAC,KAAKjB,GAAN,EAAW,KAAKpC,KAAhB,CADJ,IAEJ,KAAK80B,KAAL,CAAW2L,gBAAX,CAA4Bp9B,MAA5B,CAFJ;EAGH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIq9B,gBAAgB,CAACr9B,MAAD,EAAS;IACrB,OAAQ,KAAKyxB,KAAL,CAAW4L,gBAAX,CAA4Br9B,MAA5B,KACJA,MAAM,CAAC,KAAKjB,GAAN,EAAW,KAAKpC,KAAhB,CADF,IAEJ,KAAK60B,IAAL,CAAU6L,gBAAV,CAA2Br9B,MAA3B,CAFJ;EAGH;EACD;AACJ;AACA;;;EACIs9B,IAAI,GAAG;IACH,IAAI,KAAK9L,IAAL,CAAUzgB,OAAV,EAAJ,EAAyB;MACrB,OAAO,IAAP;IACH,CAFD,MAGK;MACD,OAAO,KAAKygB,IAAL,CAAU8L,IAAV,EAAP;IACH;EACJ;EACD;AACJ;AACA;;;EACIC,MAAM,GAAG;IACL,OAAO,KAAKD,IAAL,GAAYv+B,GAAnB;EACH;EACD;AACJ;AACA;;;EACIy+B,MAAM,GAAG;IACL,IAAI,KAAK/L,KAAL,CAAW1gB,OAAX,EAAJ,EAA0B;MACtB,OAAO,KAAKhS,GAAZ;IACH,CAFD,MAGK;MACD,OAAO,KAAK0yB,KAAL,CAAW+L,MAAX,EAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIC,MAAM,CAAC1+B,GAAD,EAAMpC,KAAN,EAAa2/B,UAAb,EAAyB;IAC3B,IAAIoB,CAAC,GAAG,IAAR;IACA,MAAM9L,GAAG,GAAG0K,UAAU,CAACv9B,GAAD,EAAM2+B,CAAC,CAAC3+B,GAAR,CAAtB;;IACA,IAAI6yB,GAAG,GAAG,CAAV,EAAa;MACT8L,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyBQ,CAAC,CAAClM,IAAF,CAAOiM,MAAP,CAAc1+B,GAAd,EAAmBpC,KAAnB,EAA0B2/B,UAA1B,CAAzB,EAAgE,IAAhE,CAAJ;IACH,CAFD,MAGK,IAAI1K,GAAG,KAAK,CAAZ,EAAe;MAChB8L,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAavgC,KAAb,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,CAAJ;IACH,CAFI,MAGA;MACD+gC,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BQ,CAAC,CAACjM,KAAF,CAAQgM,MAAR,CAAe1+B,GAAf,EAAoBpC,KAApB,EAA2B2/B,UAA3B,CAA/B,CAAJ;IACH;;IACD,OAAOoB,CAAC,CAACC,MAAF,EAAP;EACH;EACD;AACJ;AACA;;;EACIC,UAAU,GAAG;IACT,IAAI,KAAKpM,IAAL,CAAUzgB,OAAV,EAAJ,EAAyB;MACrB,OAAOisB,SAAS,CAACC,UAAjB;IACH;;IACD,IAAIS,CAAC,GAAG,IAAR;;IACA,IAAI,CAACA,CAAC,CAAClM,IAAF,CAAOqM,MAAP,EAAD,IAAoB,CAACH,CAAC,CAAClM,IAAF,CAAOA,IAAP,CAAYqM,MAAZ,EAAzB,EAA+C;MAC3CH,CAAC,GAAGA,CAAC,CAACI,YAAF,EAAJ;IACH;;IACDJ,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyBQ,CAAC,CAAClM,IAAF,CAAOoM,UAAP,EAAzB,EAA8C,IAA9C,CAAJ;IACA,OAAOF,CAAC,CAACC,MAAF,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI57B,MAAM,CAAChD,GAAD,EAAMu9B,UAAN,EAAkB;IACpB,IAAIoB,CAAJ,EAAOK,QAAP;IACAL,CAAC,GAAG,IAAJ;;IACA,IAAIpB,UAAU,CAACv9B,GAAD,EAAM2+B,CAAC,CAAC3+B,GAAR,CAAV,GAAyB,CAA7B,EAAgC;MAC5B,IAAI,CAAC2+B,CAAC,CAAClM,IAAF,CAAOzgB,OAAP,EAAD,IAAqB,CAAC2sB,CAAC,CAAClM,IAAF,CAAOqM,MAAP,EAAtB,IAAyC,CAACH,CAAC,CAAClM,IAAF,CAAOA,IAAP,CAAYqM,MAAZ,EAA9C,EAAoE;QAChEH,CAAC,GAAGA,CAAC,CAACI,YAAF,EAAJ;MACH;;MACDJ,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyBQ,CAAC,CAAClM,IAAF,CAAOzvB,MAAP,CAAchD,GAAd,EAAmBu9B,UAAnB,CAAzB,EAAyD,IAAzD,CAAJ;IACH,CALD,MAMK;MACD,IAAIoB,CAAC,CAAClM,IAAF,CAAOqM,MAAP,EAAJ,EAAqB;QACjBH,CAAC,GAAGA,CAAC,CAACM,YAAF,EAAJ;MACH;;MACD,IAAI,CAACN,CAAC,CAACjM,KAAF,CAAQ1gB,OAAR,EAAD,IAAsB,CAAC2sB,CAAC,CAACjM,KAAF,CAAQoM,MAAR,EAAvB,IAA2C,CAACH,CAAC,CAACjM,KAAF,CAAQD,IAAR,CAAaqM,MAAb,EAAhD,EAAuE;QACnEH,CAAC,GAAGA,CAAC,CAACO,aAAF,EAAJ;MACH;;MACD,IAAI3B,UAAU,CAACv9B,GAAD,EAAM2+B,CAAC,CAAC3+B,GAAR,CAAV,KAA2B,CAA/B,EAAkC;QAC9B,IAAI2+B,CAAC,CAACjM,KAAF,CAAQ1gB,OAAR,EAAJ,EAAuB;UACnB,OAAOisB,SAAS,CAACC,UAAjB;QACH,CAFD,MAGK;UACDc,QAAQ,GAAGL,CAAC,CAACjM,KAAF,CAAQ6L,IAAR,EAAX;UACAI,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAOa,QAAQ,CAACh/B,GAAhB,EAAqBg/B,QAAQ,CAACphC,KAA9B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD+gC,CAAC,CAACjM,KAAF,CAAQmM,UAAR,EAAjD,CAAJ;QACH;MACJ;;MACDF,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BQ,CAAC,CAACjM,KAAF,CAAQ1vB,MAAR,CAAehD,GAAf,EAAoBu9B,UAApB,CAA/B,CAAJ;IACH;;IACD,OAAOoB,CAAC,CAACC,MAAF,EAAP;EACH;EACD;AACJ;AACA;;;EACIE,MAAM,GAAG;IACL,OAAO,KAAKf,KAAZ;EACH;EACD;AACJ;AACA;;;EACIa,MAAM,GAAG;IACL,IAAID,CAAC,GAAG,IAAR;;IACA,IAAIA,CAAC,CAACjM,KAAF,CAAQoM,MAAR,MAAoB,CAACH,CAAC,CAAClM,IAAF,CAAOqM,MAAP,EAAzB,EAA0C;MACtCH,CAAC,GAAGA,CAAC,CAACQ,WAAF,EAAJ;IACH;;IACD,IAAIR,CAAC,CAAClM,IAAF,CAAOqM,MAAP,MAAmBH,CAAC,CAAClM,IAAF,CAAOA,IAAP,CAAYqM,MAAZ,EAAvB,EAA6C;MACzCH,CAAC,GAAGA,CAAC,CAACM,YAAF,EAAJ;IACH;;IACD,IAAIN,CAAC,CAAClM,IAAF,CAAOqM,MAAP,MAAmBH,CAAC,CAACjM,KAAF,CAAQoM,MAAR,EAAvB,EAAyC;MACrCH,CAAC,GAAGA,CAAC,CAACS,UAAF,EAAJ;IACH;;IACD,OAAOT,CAAP;EACH;EACD;AACJ;AACA;;;EACII,YAAY,GAAG;IACX,IAAIJ,CAAC,GAAG,KAAKS,UAAL,EAAR;;IACA,IAAIT,CAAC,CAACjM,KAAF,CAAQD,IAAR,CAAaqM,MAAb,EAAJ,EAA2B;MACvBH,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BQ,CAAC,CAACjM,KAAF,CAAQuM,YAAR,EAA/B,CAAJ;MACAN,CAAC,GAAGA,CAAC,CAACQ,WAAF,EAAJ;MACAR,CAAC,GAAGA,CAAC,CAACS,UAAF,EAAJ;IACH;;IACD,OAAOT,CAAP;EACH;EACD;AACJ;AACA;;;EACIO,aAAa,GAAG;IACZ,IAAIP,CAAC,GAAG,KAAKS,UAAL,EAAR;;IACA,IAAIT,CAAC,CAAClM,IAAF,CAAOA,IAAP,CAAYqM,MAAZ,EAAJ,EAA0B;MACtBH,CAAC,GAAGA,CAAC,CAACM,YAAF,EAAJ;MACAN,CAAC,GAAGA,CAAC,CAACS,UAAF,EAAJ;IACH;;IACD,OAAOT,CAAP;EACH;EACD;AACJ;AACA;;;EACIQ,WAAW,GAAG;IACV,MAAME,EAAE,GAAG,KAAKlB,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsBL,QAAQ,CAACE,GAA/B,EAAoC,IAApC,EAA0C,KAAKtL,KAAL,CAAWD,IAArD,CAAX;IACA,OAAO,KAAKC,KAAL,CAAWyL,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,KAAKJ,KAAjC,EAAwCsB,EAAxC,EAA4C,IAA5C,CAAP;EACH;EACD;AACJ;AACA;;;EACIJ,YAAY,GAAG;IACX,MAAMK,EAAE,GAAG,KAAKnB,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsBL,QAAQ,CAACE,GAA/B,EAAoC,KAAKvL,IAAL,CAAUC,KAA9C,EAAqD,IAArD,CAAX;IACA,OAAO,KAAKD,IAAL,CAAU0L,IAAV,CAAe,IAAf,EAAqB,IAArB,EAA2B,KAAKJ,KAAhC,EAAuC,IAAvC,EAA6CuB,EAA7C,CAAP;EACH;EACD;AACJ;AACA;;;EACIF,UAAU,GAAG;IACT,MAAM3M,IAAI,GAAG,KAAKA,IAAL,CAAU0L,IAAV,CAAe,IAAf,EAAqB,IAArB,EAA2B,CAAC,KAAK1L,IAAL,CAAUsL,KAAtC,EAA6C,IAA7C,EAAmD,IAAnD,CAAb;IACA,MAAMrL,KAAK,GAAG,KAAKA,KAAL,CAAWyL,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,CAAC,KAAKzL,KAAL,CAAWqL,KAAxC,EAA+C,IAA/C,EAAqD,IAArD,CAAd;IACA,OAAO,KAAKI,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsB,CAAC,KAAKJ,KAA5B,EAAmCtL,IAAnC,EAAyCC,KAAzC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACI6M,cAAc,GAAG;IACb,MAAMC,UAAU,GAAG,KAAKC,MAAL,EAAnB;IACA,OAAOzpB,IAAI,CAACkC,GAAL,CAAS,GAAT,EAAcsnB,UAAd,KAA6B,KAAKpB,KAAL,KAAe,CAAnD;EACH;;EACDqB,MAAM,GAAG;IACL,IAAI,KAAKX,MAAL,MAAiB,KAAKrM,IAAL,CAAUqM,MAAV,EAArB,EAAyC;MACrC,MAAM,IAAIhgC,KAAJ,CAAU,4BAA4B,KAAKkB,GAAjC,GAAuC,GAAvC,GAA6C,KAAKpC,KAAlD,GAA0D,GAApE,CAAN;IACH;;IACD,IAAI,KAAK80B,KAAL,CAAWoM,MAAX,EAAJ,EAAyB;MACrB,MAAM,IAAIhgC,KAAJ,CAAU,qBAAqB,KAAKkB,GAA1B,GAAgC,GAAhC,GAAsC,KAAKpC,KAA3C,GAAmD,UAA7D,CAAN;IACH;;IACD,MAAM4hC,UAAU,GAAG,KAAK/M,IAAL,CAAUgN,MAAV,EAAnB;;IACA,IAAID,UAAU,KAAK,KAAK9M,KAAL,CAAW+M,MAAX,EAAnB,EAAwC;MACpC,MAAM,IAAI3gC,KAAJ,CAAU,qBAAV,CAAN;IACH,CAFD,MAGK;MACD,OAAO0gC,UAAU,IAAI,KAAKV,MAAL,KAAgB,CAAhB,GAAoB,CAAxB,CAAjB;IACH;EACJ;;AA/PU;;AAiQfhB,QAAQ,CAACE,GAAT,GAAe,IAAf;AACAF,QAAQ,CAAC4B,KAAT,GAAiB,KAAjB;AACA;AACA;AACA;;AACA,MAAMC,aAAN,CAAoB;EAChB;AACJ;AACA;AACA;AACA;EACIxB,IAAI,CAACn+B,GAAD,EAAMpC,KAAN,EAAamgC,KAAb,EAAoBtL,IAApB,EAA0BC,KAA1B,EAAiC;IACjC,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIgM,MAAM,CAAC1+B,GAAD,EAAMpC,KAAN,EAAa2/B,UAAb,EAAyB;IAC3B,OAAO,IAAIO,QAAJ,CAAa99B,GAAb,EAAkBpC,KAAlB,EAAyB,IAAzB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIoF,MAAM,CAAChD,GAAD,EAAMu9B,UAAN,EAAkB;IACpB,OAAO,IAAP;EACH;EACD;AACJ;AACA;;;EACIa,KAAK,GAAG;IACJ,OAAO,CAAP;EACH;EACD;AACJ;AACA;;;EACIpsB,OAAO,GAAG;IACN,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIqsB,gBAAgB,CAACp9B,MAAD,EAAS;IACrB,OAAO,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIq9B,gBAAgB,CAACr9B,MAAD,EAAS;IACrB,OAAO,KAAP;EACH;;EACDu9B,MAAM,GAAG;IACL,OAAO,IAAP;EACH;;EACDC,MAAM,GAAG;IACL,OAAO,IAAP;EACH;;EACDgB,MAAM,GAAG;IACL,OAAO,CAAP;EACH;EACD;AACJ;AACA;;;EACIX,MAAM,GAAG;IACL,OAAO,KAAP;EACH;;AA9Ee;AAgFpB;AACA;AACA;AACA;;;AACA,MAAMb,SAAN,CAAgB;EACZ;AACJ;AACA;AACA;EACI35B,WAAW,CAACs7B,WAAD,EAAcC,KAAK,GAAG5B,SAAS,CAACC,UAAhC,EAA4C;IACnD,KAAK0B,WAAL,GAAmBA,WAAnB;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACInB,MAAM,CAAC1+B,GAAD,EAAMpC,KAAN,EAAa;IACf,OAAO,IAAIqgC,SAAJ,CAAc,KAAK2B,WAAnB,EAAgC,KAAKC,KAAL,CAClCnB,MADkC,CAC3B1+B,GAD2B,EACtBpC,KADsB,EACf,KAAKgiC,WADU,EAElCzB,IAFkC,CAE7B,IAF6B,EAEvB,IAFuB,EAEjBL,QAAQ,CAAC4B,KAFQ,EAED,IAFC,EAEK,IAFL,CAAhC,CAAP;EAGH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACI18B,MAAM,CAAChD,GAAD,EAAM;IACR,OAAO,IAAIi+B,SAAJ,CAAc,KAAK2B,WAAnB,EAAgC,KAAKC,KAAL,CAClC78B,MADkC,CAC3BhD,GAD2B,EACtB,KAAK4/B,WADiB,EAElCzB,IAFkC,CAE7B,IAF6B,EAEvB,IAFuB,EAEjBL,QAAQ,CAAC4B,KAFQ,EAED,IAFC,EAEK,IAFL,CAAhC,CAAP;EAGH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIt4B,GAAG,CAACpH,GAAD,EAAM;IACL,IAAI6yB,GAAJ;IACA,IAAIqJ,IAAI,GAAG,KAAK2D,KAAhB;;IACA,OAAO,CAAC3D,IAAI,CAAClqB,OAAL,EAAR,EAAwB;MACpB6gB,GAAG,GAAG,KAAK+M,WAAL,CAAiB5/B,GAAjB,EAAsBk8B,IAAI,CAACl8B,GAA3B,CAAN;;MACA,IAAI6yB,GAAG,KAAK,CAAZ,EAAe;QACX,OAAOqJ,IAAI,CAACt+B,KAAZ;MACH,CAFD,MAGK,IAAIi1B,GAAG,GAAG,CAAV,EAAa;QACdqJ,IAAI,GAAGA,IAAI,CAACzJ,IAAZ;MACH,CAFI,MAGA,IAAII,GAAG,GAAG,CAAV,EAAa;QACdqJ,IAAI,GAAGA,IAAI,CAACxJ,KAAZ;MACH;IACJ;;IACD,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIoN,iBAAiB,CAAC9/B,GAAD,EAAM;IACnB,IAAI6yB,GAAJ;IAAA,IAASqJ,IAAI,GAAG,KAAK2D,KAArB;IAAA,IAA4BE,WAAW,GAAG,IAA1C;;IACA,OAAO,CAAC7D,IAAI,CAAClqB,OAAL,EAAR,EAAwB;MACpB6gB,GAAG,GAAG,KAAK+M,WAAL,CAAiB5/B,GAAjB,EAAsBk8B,IAAI,CAACl8B,GAA3B,CAAN;;MACA,IAAI6yB,GAAG,KAAK,CAAZ,EAAe;QACX,IAAI,CAACqJ,IAAI,CAACzJ,IAAL,CAAUzgB,OAAV,EAAL,EAA0B;UACtBkqB,IAAI,GAAGA,IAAI,CAACzJ,IAAZ;;UACA,OAAO,CAACyJ,IAAI,CAACxJ,KAAL,CAAW1gB,OAAX,EAAR,EAA8B;YAC1BkqB,IAAI,GAAGA,IAAI,CAACxJ,KAAZ;UACH;;UACD,OAAOwJ,IAAI,CAACl8B,GAAZ;QACH,CAND,MAOK,IAAI+/B,WAAJ,EAAiB;UAClB,OAAOA,WAAW,CAAC//B,GAAnB;QACH,CAFI,MAGA;UACD,OAAO,IAAP,CADC,CACY;QAChB;MACJ,CAdD,MAeK,IAAI6yB,GAAG,GAAG,CAAV,EAAa;QACdqJ,IAAI,GAAGA,IAAI,CAACzJ,IAAZ;MACH,CAFI,MAGA,IAAII,GAAG,GAAG,CAAV,EAAa;QACdkN,WAAW,GAAG7D,IAAd;QACAA,IAAI,GAAGA,IAAI,CAACxJ,KAAZ;MACH;IACJ;;IACD,MAAM,IAAI5zB,KAAJ,CAAU,uEAAV,CAAN;EACH;EACD;AACJ;AACA;;;EACIkT,OAAO,GAAG;IACN,OAAO,KAAK6tB,KAAL,CAAW7tB,OAAX,EAAP;EACH;EACD;AACJ;AACA;;;EACIosB,KAAK,GAAG;IACJ,OAAO,KAAKyB,KAAL,CAAWzB,KAAX,EAAP;EACH;EACD;AACJ;AACA;;;EACII,MAAM,GAAG;IACL,OAAO,KAAKqB,KAAL,CAAWrB,MAAX,EAAP;EACH;EACD;AACJ;AACA;;;EACIC,MAAM,GAAG;IACL,OAAO,KAAKoB,KAAL,CAAWpB,MAAX,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIJ,gBAAgB,CAACp9B,MAAD,EAAS;IACrB,OAAO,KAAK4+B,KAAL,CAAWxB,gBAAX,CAA4Bp9B,MAA5B,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIq9B,gBAAgB,CAACr9B,MAAD,EAAS;IACrB,OAAO,KAAK4+B,KAAL,CAAWvB,gBAAX,CAA4Br9B,MAA5B,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACI++B,WAAW,CAACC,eAAD,EAAkB;IACzB,OAAO,IAAI5C,iBAAJ,CAAsB,KAAKwC,KAA3B,EAAkC,IAAlC,EAAwC,KAAKD,WAA7C,EAA0D,KAA1D,EAAiEK,eAAjE,CAAP;EACH;;EACDC,eAAe,CAAClgC,GAAD,EAAMigC,eAAN,EAAuB;IAClC,OAAO,IAAI5C,iBAAJ,CAAsB,KAAKwC,KAA3B,EAAkC7/B,GAAlC,EAAuC,KAAK4/B,WAA5C,EAAyD,KAAzD,EAAgEK,eAAhE,CAAP;EACH;;EACDE,sBAAsB,CAACngC,GAAD,EAAMigC,eAAN,EAAuB;IACzC,OAAO,IAAI5C,iBAAJ,CAAsB,KAAKwC,KAA3B,EAAkC7/B,GAAlC,EAAuC,KAAK4/B,WAA5C,EAAyD,IAAzD,EAA+DK,eAA/D,CAAP;EACH;;EACDG,kBAAkB,CAACH,eAAD,EAAkB;IAChC,OAAO,IAAI5C,iBAAJ,CAAsB,KAAKwC,KAA3B,EAAkC,IAAlC,EAAwC,KAAKD,WAA7C,EAA0D,IAA1D,EAAgEK,eAAhE,CAAP;EACH;;AAzJW;AA2JhB;AACA;AACA;;;AACAhC,SAAS,CAACC,UAAV,GAAuB,IAAIyB,aAAJ,EAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASU,oBAAT,CAA8B5N,IAA9B,EAAoCC,KAApC,EAA2C;EACvC,OAAOpc,WAAW,CAACmc,IAAI,CAACluB,IAAN,EAAYmuB,KAAK,CAACnuB,IAAlB,CAAlB;AACH;;AACD,SAAS+7B,eAAT,CAAyB7N,IAAzB,EAA+BC,KAA/B,EAAsC;EAClC,OAAOpc,WAAW,CAACmc,IAAD,EAAOC,KAAP,CAAlB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI6N,UAAJ;;AACA,SAASC,YAAT,CAAsBv8B,GAAtB,EAA2B;EACvBs8B,UAAU,GAAGt8B,GAAb;AACH;;AACD,MAAMw8B,gBAAgB,GAAG,UAAU71B,QAAV,EAAoB;EACzC,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IAC9B,OAAO,YAAY4M,qBAAqB,CAAC5M,QAAD,CAAxC;EACH,CAFD,MAGK;IACD,OAAO,YAAYA,QAAnB;EACH;AACJ,CAPD;AAQA;AACA;AACA;;;AACA,MAAM81B,oBAAoB,GAAG,UAAUC,YAAV,EAAwB;EACjD,IAAIA,YAAY,CAACC,UAAb,EAAJ,EAA+B;IAC3B,MAAM38B,GAAG,GAAG08B,YAAY,CAAC18B,GAAb,EAAZ;IACAmN,sDAAM,CAAC,OAAOnN,GAAP,KAAe,QAAf,IACH,OAAOA,GAAP,KAAe,QADZ,IAEF,OAAOA,GAAP,KAAe,QAAf,IAA2BkN,wDAAQ,CAAClN,GAAD,EAAM,KAAN,CAFlC,EAEiD,sCAFjD,CAAN;EAGH,CALD,MAMK;IACDmN,sDAAM,CAACuvB,YAAY,KAAKJ,UAAjB,IAA+BI,YAAY,CAAC3uB,OAAb,EAAhC,EAAwD,8BAAxD,CAAN;EACH,CATgD,CAUjD;;;EACAZ,sDAAM,CAACuvB,YAAY,KAAKJ,UAAjB,IAA+BI,YAAY,CAACl1B,WAAb,GAA2BuG,OAA3B,EAAhC,EAAsE,oDAAtE,CAAN;AACH,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI6uB,yBAAJ;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,QAAN,CAAe;EACX;AACJ;AACA;AACA;AACA;EACIx8B,WAAW,CAACy8B,MAAD,EAASC,aAAa,GAAGF,QAAQ,CAACD,yBAAT,CAAmC3C,UAA5D,EAAwE;IAC/E,KAAK6C,MAAL,GAAcA,MAAd;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,SAAL,GAAiB,IAAjB;IACA7vB,sDAAM,CAAC,KAAK2vB,MAAL,KAAgB9iC,SAAhB,IAA6B,KAAK8iC,MAAL,KAAgB,IAA9C,EAAoD,0DAApD,CAAN;IACAL,oBAAoB,CAAC,KAAKM,aAAN,CAApB;EACH;;EACmC,WAAzBH,yBAAyB,CAAC58B,GAAD,EAAM;IACtC48B,yBAAyB,GAAG58B,GAA5B;EACH;;EACmC,WAAzB48B,yBAAyB,GAAG;IACnC,OAAOA,yBAAP;EACH;EACD;;;EACAD,UAAU,GAAG;IACT,OAAO,IAAP;EACH;EACD;;;EACAn1B,WAAW,GAAG;IACV,OAAO,KAAKu1B,aAAZ;EACH;EACD;;;EACAE,cAAc,CAACC,eAAD,EAAkB;IAC5B,OAAO,IAAIL,QAAJ,CAAa,KAAKC,MAAlB,EAA0BI,eAA1B,CAAP;EACH;EACD;;;EACAC,iBAAiB,CAACC,SAAD,EAAY;IACzB;IACA,IAAIA,SAAS,KAAK,WAAlB,EAA+B;MAC3B,OAAO,KAAKL,aAAZ;IACH,CAFD,MAGK;MACD,OAAOF,QAAQ,CAACD,yBAAT,CAAmC3C,UAA1C;IACH;EACJ;EACD;;;EACAoD,QAAQ,CAACh2B,IAAD,EAAO;IACX,IAAI4mB,WAAW,CAAC5mB,IAAD,CAAf,EAAuB;MACnB,OAAO,IAAP;IACH,CAFD,MAGK,IAAI+lB,YAAY,CAAC/lB,IAAD,CAAZ,KAAuB,WAA3B,EAAwC;MACzC,OAAO,KAAK01B,aAAZ;IACH,CAFI,MAGA;MACD,OAAOF,QAAQ,CAACD,yBAAT,CAAmC3C,UAA1C;IACH;EACJ;;EACD1yB,QAAQ,GAAG;IACP,OAAO,KAAP;EACH;EACD;;;EACA+1B,uBAAuB,CAACF,SAAD,EAAYG,SAAZ,EAAuB;IAC1C,OAAO,IAAP;EACH;EACD;;;EACAC,oBAAoB,CAACJ,SAAD,EAAYK,YAAZ,EAA0B;IAC1C,IAAIL,SAAS,KAAK,WAAlB,EAA+B;MAC3B,OAAO,KAAKH,cAAL,CAAoBQ,YAApB,CAAP;IACH,CAFD,MAGK,IAAIA,YAAY,CAAC1vB,OAAb,MAA0BqvB,SAAS,KAAK,WAA5C,EAAyD;MAC1D,OAAO,IAAP;IACH,CAFI,MAGA;MACD,OAAOP,QAAQ,CAACD,yBAAT,CAAmC3C,UAAnC,CAA8CuD,oBAA9C,CAAmEJ,SAAnE,EAA8EK,YAA9E,EAA4FR,cAA5F,CAA2G,KAAKF,aAAhH,CAAP;IACH;EACJ;EACD;;;EACAW,WAAW,CAACr2B,IAAD,EAAOo2B,YAAP,EAAqB;IAC5B,MAAME,KAAK,GAAGvQ,YAAY,CAAC/lB,IAAD,CAA1B;;IACA,IAAIs2B,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAOF,YAAP;IACH,CAFD,MAGK,IAAIA,YAAY,CAAC1vB,OAAb,MAA0B4vB,KAAK,KAAK,WAAxC,EAAqD;MACtD,OAAO,IAAP;IACH,CAFI,MAGA;MACDxwB,sDAAM,CAACwwB,KAAK,KAAK,WAAV,IAAyBtQ,aAAa,CAAChmB,IAAD,CAAb,KAAwB,CAAlD,EAAqD,4CAArD,CAAN;MACA,OAAO,KAAKm2B,oBAAL,CAA0BG,KAA1B,EAAiCd,QAAQ,CAACD,yBAAT,CAAmC3C,UAAnC,CAA8CyD,WAA9C,CAA0DpQ,YAAY,CAACjmB,IAAD,CAAtE,EAA8Eo2B,YAA9E,CAAjC,CAAP;IACH;EACJ;EACD;;;EACA1vB,OAAO,GAAG;IACN,OAAO,KAAP;EACH;EACD;;;EACApG,WAAW,GAAG;IACV,OAAO,CAAP;EACH;EACD;;;EACAi2B,YAAY,CAAC3K,KAAD,EAAQj2B,MAAR,EAAgB;IACxB,OAAO,KAAP;EACH;;EACDgD,GAAG,CAAC69B,YAAD,EAAe;IACd,IAAIA,YAAY,IAAI,CAAC,KAAKr2B,WAAL,GAAmBuG,OAAnB,EAArB,EAAmD;MAC/C,OAAO;QACH,UAAU,KAAK+vB,QAAL,EADP;QAEH,aAAa,KAAKt2B,WAAL,GAAmBxH,GAAnB;MAFV,CAAP;IAIH,CALD,MAMK;MACD,OAAO,KAAK89B,QAAL,EAAP;IACH;EACJ;EACD;;;EACA3S,IAAI,GAAG;IACH,IAAI,KAAK6R,SAAL,KAAmB,IAAvB,EAA6B;MACzB,IAAIe,MAAM,GAAG,EAAb;;MACA,IAAI,CAAC,KAAKhB,aAAL,CAAmBhvB,OAAnB,EAAL,EAAmC;QAC/BgwB,MAAM,IACF,cACIvB,gBAAgB,CAAC,KAAKO,aAAL,CAAmB/8B,GAAnB,EAAD,CADpB,GAEI,GAHR;MAIH;;MACD,MAAM/D,IAAI,GAAG,OAAO,KAAK6gC,MAAzB;MACAiB,MAAM,IAAI9hC,IAAI,GAAG,GAAjB;;MACA,IAAIA,IAAI,KAAK,QAAb,EAAuB;QACnB8hC,MAAM,IAAIxqB,qBAAqB,CAAC,KAAKupB,MAAN,CAA/B;MACH,CAFD,MAGK;QACDiB,MAAM,IAAI,KAAKjB,MAAf;MACH;;MACD,KAAKE,SAAL,GAAiBptB,IAAI,CAACmuB,MAAD,CAArB;IACH;;IACD,OAAO,KAAKf,SAAZ;EACH;EACD;AACJ;AACA;AACA;;;EACIc,QAAQ,GAAG;IACP,OAAO,KAAKhB,MAAZ;EACH;;EACDkB,SAAS,CAACz0B,KAAD,EAAQ;IACb,IAAIA,KAAK,KAAKszB,QAAQ,CAACD,yBAAT,CAAmC3C,UAAjD,EAA6D;MACzD,OAAO,CAAP;IACH,CAFD,MAGK,IAAI1wB,KAAK,YAAYszB,QAAQ,CAACD,yBAA9B,EAAyD;MAC1D,OAAO,CAAC,CAAR;IACH,CAFI,MAGA;MACDzvB,sDAAM,CAAC5D,KAAK,CAACozB,UAAN,EAAD,EAAqB,mBAArB,CAAN;MACA,OAAO,KAAKsB,kBAAL,CAAwB10B,KAAxB,CAAP;IACH;EACJ;EACD;AACJ;AACA;;;EACI00B,kBAAkB,CAACC,SAAD,EAAY;IAC1B,MAAMC,aAAa,GAAG,OAAOD,SAAS,CAACpB,MAAvC;IACA,MAAMsB,YAAY,GAAG,OAAO,KAAKtB,MAAjC;IACA,MAAMuB,UAAU,GAAGxB,QAAQ,CAACyB,gBAAT,CAA0B5/B,OAA1B,CAAkCy/B,aAAlC,CAAnB;IACA,MAAMI,SAAS,GAAG1B,QAAQ,CAACyB,gBAAT,CAA0B5/B,OAA1B,CAAkC0/B,YAAlC,CAAlB;IACAjxB,sDAAM,CAACkxB,UAAU,IAAI,CAAf,EAAkB,wBAAwBF,aAA1C,CAAN;IACAhxB,sDAAM,CAACoxB,SAAS,IAAI,CAAd,EAAiB,wBAAwBH,YAAzC,CAAN;;IACA,IAAIC,UAAU,KAAKE,SAAnB,EAA8B;MAC1B;MACA,IAAIH,YAAY,KAAK,QAArB,EAA+B;QAC3B;QACA,OAAO,CAAP;MACH,CAHD,MAIK;QACD;QACA,IAAI,KAAKtB,MAAL,GAAcoB,SAAS,CAACpB,MAA5B,EAAoC;UAChC,OAAO,CAAC,CAAR;QACH,CAFD,MAGK,IAAI,KAAKA,MAAL,KAAgBoB,SAAS,CAACpB,MAA9B,EAAsC;UACvC,OAAO,CAAP;QACH,CAFI,MAGA;UACD,OAAO,CAAP;QACH;MACJ;IACJ,CAlBD,MAmBK;MACD,OAAOyB,SAAS,GAAGF,UAAnB;IACH;EACJ;;EACDG,SAAS,GAAG;IACR,OAAO,IAAP;EACH;;EACDC,SAAS,GAAG;IACR,OAAO,IAAP;EACH;;EACDC,MAAM,CAACn1B,KAAD,EAAQ;IACV,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH,CAFD,MAGK,IAAIA,KAAK,CAACozB,UAAN,EAAJ,EAAwB;MACzB,MAAMuB,SAAS,GAAG30B,KAAlB;MACA,OAAQ,KAAKuzB,MAAL,KAAgBoB,SAAS,CAACpB,MAA1B,IACJ,KAAKC,aAAL,CAAmB2B,MAAnB,CAA0BR,SAAS,CAACnB,aAApC,CADJ;IAEH,CAJI,MAKA;MACD,OAAO,KAAP;IACH;EACJ;;AAzMU;AA2Mf;AACA;AACA;AACA;;;AACAF,QAAQ,CAACyB,gBAAT,GAA4B,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgC,QAAhC,CAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIK,cAAJ;AACA,IAAIC,UAAJ;;AACA,SAASC,eAAT,CAAyB7+B,GAAzB,EAA8B;EAC1B2+B,cAAc,GAAG3+B,GAAjB;AACH;;AACD,SAAS8+B,UAAT,CAAoB9+B,GAApB,EAAyB;EACrB4+B,UAAU,GAAG5+B,GAAb;AACH;;AACD,MAAM++B,aAAN,SAA4B5G,KAA5B,CAAkC;EAC9BE,OAAO,CAACz4B,CAAD,EAAI0S,CAAJ,EAAO;IACV,MAAM0sB,SAAS,GAAGp/B,CAAC,CAACq4B,IAAF,CAAOzwB,WAAP,EAAlB;IACA,MAAMy3B,SAAS,GAAG3sB,CAAC,CAAC2lB,IAAF,CAAOzwB,WAAP,EAAlB;IACA,MAAM03B,QAAQ,GAAGF,SAAS,CAAChB,SAAV,CAAoBiB,SAApB,CAAjB;;IACA,IAAIC,QAAQ,KAAK,CAAjB,EAAoB;MAChB,OAAO7sB,WAAW,CAACzS,CAAC,CAACU,IAAH,EAASgS,CAAC,CAAChS,IAAX,CAAlB;IACH,CAFD,MAGK;MACD,OAAO4+B,QAAP;IACH;EACJ;;EACDnG,WAAW,CAACd,IAAD,EAAO;IACd,OAAO,CAACA,IAAI,CAACzwB,WAAL,GAAmBuG,OAAnB,EAAR;EACH;;EACDuqB,mBAAmB,CAACC,OAAD,EAAUC,OAAV,EAAmB;IAClC,OAAO,CAACD,OAAO,CAAC/wB,WAAR,GAAsBk3B,MAAtB,CAA6BlG,OAAO,CAAChxB,WAAR,EAA7B,CAAR;EACH;;EACDmxB,OAAO,GAAG;IACN;IACA,OAAOX,SAAS,CAACY,GAAjB;EACH;;EACDI,OAAO,GAAG;IACN,OAAO,IAAIhB,SAAJ,CAAc5lB,QAAd,EAAwB,IAAIyqB,QAAJ,CAAa,iBAAb,EAAgC+B,UAAhC,CAAxB,CAAP;EACH;;EACD3F,QAAQ,CAACC,UAAD,EAAa54B,IAAb,EAAmB;IACvB,MAAMo8B,YAAY,GAAGiC,cAAc,CAACzF,UAAD,CAAnC;IACA,OAAO,IAAIlB,SAAJ,CAAc13B,IAAd,EAAoB,IAAIu8B,QAAJ,CAAa,iBAAb,EAAgCH,YAAhC,CAApB,CAAP;EACH;EACD;AACJ;AACA;;;EACIrzB,QAAQ,GAAG;IACP,OAAO,WAAP;EACH;;AAlC6B;;AAoClC,MAAM81B,cAAc,GAAG,IAAIJ,aAAJ,EAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMK,KAAK,GAAGrtB,IAAI,CAAClB,GAAL,CAAS,CAAT,CAAd;;AACA,MAAMwuB,SAAN,CAAgB;EACZh/B,WAAW,CAACzD,MAAD,EAAS;IAChB,MAAM0iC,QAAQ,GAAIC,GAAD,IACjB;IACA7qB,QAAQ,CAAE3C,IAAI,CAAClB,GAAL,CAAS0uB,GAAT,IAAgBH,KAAlB,EAA0B,EAA1B,CAFR;;IAGA,MAAMI,OAAO,GAAInrB,IAAD,IAAUK,QAAQ,CAAC7N,KAAK,CAACwN,IAAI,GAAG,CAAR,CAAL,CAAgBE,IAAhB,CAAqB,GAArB,CAAD,EAA4B,CAA5B,CAAlC;;IACA,KAAK4lB,KAAL,GAAamF,QAAQ,CAAC1iC,MAAM,GAAG,CAAV,CAArB;IACA,KAAK6iC,QAAL,GAAgB,KAAKtF,KAAL,GAAa,CAA7B;IACA,MAAMuF,IAAI,GAAGF,OAAO,CAAC,KAAKrF,KAAN,CAApB;IACA,KAAKwF,KAAL,GAAc/iC,MAAM,GAAG,CAAV,GAAe8iC,IAA5B;EACH;;EACDE,YAAY,GAAG;IACX;IACA,MAAMn5B,MAAM,GAAG,EAAE,KAAKk5B,KAAL,GAAc,OAAO,KAAKF,QAA5B,CAAf;IACA,KAAKA,QAAL;IACA,OAAOh5B,MAAP;EACH;;AAhBW;AAkBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMo5B,aAAa,GAAG,UAAUC,SAAV,EAAqBlR,GAArB,EAA0BmR,KAA1B,EAAiCC,SAAjC,EAA4C;EAC9DF,SAAS,CAAC/sB,IAAV,CAAe6b,GAAf;;EACA,MAAMqR,iBAAiB,GAAG,UAAUC,GAAV,EAAeC,IAAf,EAAqB;IAC3C,MAAMvjC,MAAM,GAAGujC,IAAI,GAAGD,GAAtB;IACA,IAAIE,SAAJ;IACA,IAAIrkC,GAAJ;;IACA,IAAIa,MAAM,KAAK,CAAf,EAAkB;MACd,OAAO,IAAP;IACH,CAFD,MAGK,IAAIA,MAAM,KAAK,CAAf,EAAkB;MACnBwjC,SAAS,GAAGN,SAAS,CAACI,GAAD,CAArB;MACAnkC,GAAG,GAAGgkC,KAAK,GAAGA,KAAK,CAACK,SAAD,CAAR,GAAsBA,SAAjC;MACA,OAAO,IAAIvG,QAAJ,CAAa99B,GAAb,EAAkBqkC,SAAS,CAACnI,IAA5B,EAAkC4B,QAAQ,CAAC4B,KAA3C,EAAkD,IAAlD,EAAwD,IAAxD,CAAP;IACH,CAJI,MAKA;MACD;MACA,MAAM4E,MAAM,GAAG3rB,QAAQ,CAAE9X,MAAM,GAAG,CAAX,EAAe,EAAf,CAAR,GAA6BsjC,GAA5C;MACA,MAAM1R,IAAI,GAAGyR,iBAAiB,CAACC,GAAD,EAAMG,MAAN,CAA9B;MACA,MAAM5R,KAAK,GAAGwR,iBAAiB,CAACI,MAAM,GAAG,CAAV,EAAaF,IAAb,CAA/B;MACAC,SAAS,GAAGN,SAAS,CAACO,MAAD,CAArB;MACAtkC,GAAG,GAAGgkC,KAAK,GAAGA,KAAK,CAACK,SAAD,CAAR,GAAsBA,SAAjC;MACA,OAAO,IAAIvG,QAAJ,CAAa99B,GAAb,EAAkBqkC,SAAS,CAACnI,IAA5B,EAAkC4B,QAAQ,CAAC4B,KAA3C,EAAkDjN,IAAlD,EAAwDC,KAAxD,CAAP;IACH;EACJ,CArBD;;EAsBA,MAAM6R,gBAAgB,GAAG,UAAUC,MAAV,EAAkB;IACvC,IAAItI,IAAI,GAAG,IAAX;IACA,IAAIjuB,IAAI,GAAG,IAAX;IACA,IAAIipB,KAAK,GAAG6M,SAAS,CAACljC,MAAtB;;IACA,MAAM4jC,YAAY,GAAG,UAAUC,SAAV,EAAqB3G,KAArB,EAA4B;MAC7C,MAAMoG,GAAG,GAAGjN,KAAK,GAAGwN,SAApB;MACA,MAAMN,IAAI,GAAGlN,KAAb;MACAA,KAAK,IAAIwN,SAAT;MACA,MAAMC,SAAS,GAAGT,iBAAiB,CAACC,GAAG,GAAG,CAAP,EAAUC,IAAV,CAAnC;MACA,MAAMC,SAAS,GAAGN,SAAS,CAACI,GAAD,CAA3B;MACA,MAAMnkC,GAAG,GAAGgkC,KAAK,GAAGA,KAAK,CAACK,SAAD,CAAR,GAAsBA,SAAvC;MACAO,aAAa,CAAC,IAAI9G,QAAJ,CAAa99B,GAAb,EAAkBqkC,SAAS,CAACnI,IAA5B,EAAkC6B,KAAlC,EAAyC,IAAzC,EAA+C4G,SAA/C,CAAD,CAAb;IACH,CARD;;IASA,MAAMC,aAAa,GAAG,UAAUC,OAAV,EAAmB;MACrC,IAAI3I,IAAJ,EAAU;QACNA,IAAI,CAACzJ,IAAL,GAAYoS,OAAZ;QACA3I,IAAI,GAAG2I,OAAP;MACH,CAHD,MAIK;QACD52B,IAAI,GAAG42B,OAAP;QACA3I,IAAI,GAAG2I,OAAP;MACH;IACJ,CATD;;IAUA,KAAK,IAAI/jC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0jC,MAAM,CAACpG,KAA3B,EAAkC,EAAEt9B,CAApC,EAAuC;MACnC,MAAMgkC,KAAK,GAAGN,MAAM,CAACX,YAAP,EAAd,CADmC,CAEnC;;MACA,MAAMa,SAAS,GAAG1uB,IAAI,CAACkC,GAAL,CAAS,CAAT,EAAYssB,MAAM,CAACpG,KAAP,IAAgBt9B,CAAC,GAAG,CAApB,CAAZ,CAAlB;;MACA,IAAIgkC,KAAJ,EAAW;QACPL,YAAY,CAACC,SAAD,EAAY5G,QAAQ,CAAC4B,KAArB,CAAZ;MACH,CAFD,MAGK;QACD;QACA+E,YAAY,CAACC,SAAD,EAAY5G,QAAQ,CAAC4B,KAArB,CAAZ;QACA+E,YAAY,CAACC,SAAD,EAAY5G,QAAQ,CAACE,GAArB,CAAZ;MACH;IACJ;;IACD,OAAO/vB,IAAP;EACH,CArCD;;EAsCA,MAAMu2B,MAAM,GAAG,IAAIlB,SAAJ,CAAcS,SAAS,CAACljC,MAAxB,CAAf;EACA,MAAMoN,IAAI,GAAGs2B,gBAAgB,CAACC,MAAD,CAA7B,CA/D8D,CAgE9D;;EACA,OAAO,IAAIvG,SAAJ,CAAcgG,SAAS,IAAIpR,GAA3B,EAAgC5kB,IAAhC,CAAP;AACH,CAlED;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI82B,gBAAJ;;AACA,MAAMC,cAAc,GAAG,EAAvB;;AACA,MAAMC,QAAN,CAAe;EACX3gC,WAAW,CAAC4gC,QAAD,EAAWC,SAAX,EAAsB;IAC7B,KAAKD,QAAL,GAAgBA,QAAhB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;EACH;EACD;AACJ;AACA;;;EACsB,WAAPC,OAAO,GAAG;IACjBh0B,sDAAM,CAAC4zB,cAAc,IAAI5B,cAAnB,EAAmC,qCAAnC,CAAN;IACA2B,gBAAgB,GACZA,gBAAgB,IACZ,IAAIE,QAAJ,CAAa;MAAE,aAAaD;IAAf,CAAb,EAA8C;MAAE,aAAa5B;IAAf,CAA9C,CAFR;IAGA,OAAO2B,gBAAP;EACH;;EACD39B,GAAG,CAACi+B,QAAD,EAAW;IACV,MAAMC,SAAS,GAAGzzB,uDAAO,CAAC,KAAKqzB,QAAN,EAAgBG,QAAhB,CAAzB;;IACA,IAAI,CAACC,SAAL,EAAgB;MACZ,MAAM,IAAIxmC,KAAJ,CAAU,0BAA0BumC,QAApC,CAAN;IACH;;IACD,IAAIC,SAAS,YAAYrH,SAAzB,EAAoC;MAChC,OAAOqH,SAAP;IACH,CAFD,MAGK;MACD;MACA;MACA,OAAO,IAAP;IACH;EACJ;;EACDC,QAAQ,CAACC,eAAD,EAAkB;IACtB,OAAOr0B,wDAAQ,CAAC,KAAKg0B,SAAN,EAAiBK,eAAe,CAACl4B,QAAhB,EAAjB,CAAf;EACH;;EACDm4B,QAAQ,CAACD,eAAD,EAAkBE,gBAAlB,EAAoC;IACxCt0B,sDAAM,CAACo0B,eAAe,KAAKpI,SAArB,EAAgC,qEAAhC,CAAN;IACA,MAAM2G,SAAS,GAAG,EAAlB;IACA,IAAI4B,eAAe,GAAG,KAAtB;IACA,MAAMC,IAAI,GAAGF,gBAAgB,CAAC1F,WAAjB,CAA6B/D,SAAS,CAACE,IAAvC,CAAb;IACA,IAAI38B,IAAI,GAAGomC,IAAI,CAACjI,OAAL,EAAX;;IACA,OAAOn+B,IAAP,EAAa;MACTmmC,eAAe,GACXA,eAAe,IAAIH,eAAe,CAACxI,WAAhB,CAA4Bx9B,IAAI,CAAC08B,IAAjC,CADvB;MAEA6H,SAAS,CAACvjC,IAAV,CAAehB,IAAf;MACAA,IAAI,GAAGomC,IAAI,CAACjI,OAAL,EAAP;IACH;;IACD,IAAIkI,QAAJ;;IACA,IAAIF,eAAJ,EAAqB;MACjBE,QAAQ,GAAG/B,aAAa,CAACC,SAAD,EAAYyB,eAAe,CAACnJ,UAAhB,EAAZ,CAAxB;IACH,CAFD,MAGK;MACDwJ,QAAQ,GAAGb,cAAX;IACH;;IACD,MAAMc,SAAS,GAAGN,eAAe,CAACl4B,QAAhB,EAAlB;IACA,MAAMy4B,WAAW,GAAGhiC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKmhC,SAAvB,CAApB;IACAY,WAAW,CAACD,SAAD,CAAX,GAAyBN,eAAzB;IACA,MAAMQ,UAAU,GAAGjiC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKkhC,QAAvB,CAAnB;IACAc,UAAU,CAACF,SAAD,CAAV,GAAwBD,QAAxB;IACA,OAAO,IAAIZ,QAAJ,CAAae,UAAb,EAAyBD,WAAzB,CAAP;EACH;EACD;AACJ;AACA;;;EACIE,YAAY,CAAC5B,SAAD,EAAYqB,gBAAZ,EAA8B;IACtC,MAAMM,UAAU,GAAG9pC,mDAAG,CAAC,KAAKgpC,QAAN,EAAgB,CAACgB,eAAD,EAAkBJ,SAAlB,KAAgC;MAClE,MAAM5O,KAAK,GAAGrlB,uDAAO,CAAC,KAAKszB,SAAN,EAAiBW,SAAjB,CAArB;MACA10B,sDAAM,CAAC8lB,KAAD,EAAQ,sCAAsC4O,SAA9C,CAAN;;MACA,IAAII,eAAe,KAAKlB,cAAxB,EAAwC;QACpC;QACA,IAAI9N,KAAK,CAAC8F,WAAN,CAAkBqH,SAAS,CAACnI,IAA5B,CAAJ,EAAuC;UACnC;UACA,MAAM6H,SAAS,GAAG,EAAlB;UACA,MAAM6B,IAAI,GAAGF,gBAAgB,CAAC1F,WAAjB,CAA6B/D,SAAS,CAACE,IAAvC,CAAb;UACA,IAAI38B,IAAI,GAAGomC,IAAI,CAACjI,OAAL,EAAX;;UACA,OAAOn+B,IAAP,EAAa;YACT,IAAIA,IAAI,CAAC+E,IAAL,KAAc8/B,SAAS,CAAC9/B,IAA5B,EAAkC;cAC9Bw/B,SAAS,CAACvjC,IAAV,CAAehB,IAAf;YACH;;YACDA,IAAI,GAAGomC,IAAI,CAACjI,OAAL,EAAP;UACH;;UACDoG,SAAS,CAACvjC,IAAV,CAAe6jC,SAAf;UACA,OAAOP,aAAa,CAACC,SAAD,EAAY7M,KAAK,CAACmF,UAAN,EAAZ,CAApB;QACH,CAbD,MAcK;UACD;UACA,OAAO2I,cAAP;QACH;MACJ,CApBD,MAqBK;QACD,MAAMmB,YAAY,GAAGT,gBAAgB,CAACt+B,GAAjB,CAAqBi9B,SAAS,CAAC9/B,IAA/B,CAArB;QACA,IAAI6hC,WAAW,GAAGF,eAAlB;;QACA,IAAIC,YAAJ,EAAkB;UACdC,WAAW,GAAGA,WAAW,CAACpjC,MAAZ,CAAmB,IAAIi5B,SAAJ,CAAcoI,SAAS,CAAC9/B,IAAxB,EAA8B4hC,YAA9B,CAAnB,CAAd;QACH;;QACD,OAAOC,WAAW,CAAC1H,MAAZ,CAAmB2F,SAAnB,EAA8BA,SAAS,CAACnI,IAAxC,CAAP;MACH;IACJ,CAhCqB,CAAtB;IAiCA,OAAO,IAAI+I,QAAJ,CAAae,UAAb,EAAyB,KAAKb,SAA9B,CAAP;EACH;EACD;AACJ;AACA;;;EACIkB,iBAAiB,CAAChC,SAAD,EAAYqB,gBAAZ,EAA8B;IAC3C,MAAMM,UAAU,GAAG9pC,mDAAG,CAAC,KAAKgpC,QAAN,EAAiBgB,eAAD,IAAqB;MACvD,IAAIA,eAAe,KAAKlB,cAAxB,EAAwC;QACpC;QACA,OAAOkB,eAAP;MACH,CAHD,MAIK;QACD,MAAMC,YAAY,GAAGT,gBAAgB,CAACt+B,GAAjB,CAAqBi9B,SAAS,CAAC9/B,IAA/B,CAArB;;QACA,IAAI4hC,YAAJ,EAAkB;UACd,OAAOD,eAAe,CAACljC,MAAhB,CAAuB,IAAIi5B,SAAJ,CAAcoI,SAAS,CAAC9/B,IAAxB,EAA8B4hC,YAA9B,CAAvB,CAAP;QACH,CAFD,MAGK;UACD;UACA,OAAOD,eAAP;QACH;MACJ;IACJ,CAfqB,CAAtB;IAgBA,OAAO,IAAIjB,QAAJ,CAAae,UAAb,EAAyB,KAAKb,SAA9B,CAAP;EACH;;AAtHU;AAyHf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIjH,UAAJ;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMoI,YAAN,CAAmB;EACf;AACJ;AACA;AACA;EACIhiC,WAAW,CAACiiC,SAAD,EAAYvF,aAAZ,EAA2BwF,SAA3B,EAAsC;IAC7C,KAAKD,SAAL,GAAiBA,SAAjB;IACA,KAAKvF,aAAL,GAAqBA,aAArB;IACA,KAAKwF,SAAL,GAAiBA,SAAjB;IACA,KAAKvF,SAAL,GAAiB,IAAjB;IACA;AACR;AACA;AACA;AACA;;IACQ,IAAI,KAAKD,aAAT,EAAwB;MACpBN,oBAAoB,CAAC,KAAKM,aAAN,CAApB;IACH;;IACD,IAAI,KAAKuF,SAAL,CAAev0B,OAAf,EAAJ,EAA8B;MAC1BZ,sDAAM,CAAC,CAAC,KAAK4vB,aAAN,IAAuB,KAAKA,aAAL,CAAmBhvB,OAAnB,EAAxB,EAAsD,sCAAtD,CAAN;IACH;EACJ;;EACoB,WAAVksB,UAAU,GAAG;IACpB,OAAQA,UAAU,KACbA,UAAU,GAAG,IAAIoI,YAAJ,CAAiB,IAAIrI,SAAJ,CAAcqC,eAAd,CAAjB,EAAiD,IAAjD,EAAuD2E,QAAQ,CAACG,OAAhE,CADA,CAAlB;EAEH;EACD;;;EACAxE,UAAU,GAAG;IACT,OAAO,KAAP;EACH;EACD;;;EACAn1B,WAAW,GAAG;IACV,OAAO,KAAKu1B,aAAL,IAAsB9C,UAA7B;EACH;EACD;;;EACAgD,cAAc,CAACC,eAAD,EAAkB;IAC5B,IAAI,KAAKoF,SAAL,CAAev0B,OAAf,EAAJ,EAA8B;MAC1B;MACA,OAAO,IAAP;IACH,CAHD,MAIK;MACD,OAAO,IAAIs0B,YAAJ,CAAiB,KAAKC,SAAtB,EAAiCpF,eAAjC,EAAkD,KAAKqF,SAAvD,CAAP;IACH;EACJ;EACD;;;EACApF,iBAAiB,CAACC,SAAD,EAAY;IACzB;IACA,IAAIA,SAAS,KAAK,WAAlB,EAA+B;MAC3B,OAAO,KAAK51B,WAAL,EAAP;IACH,CAFD,MAGK;MACD,MAAMtJ,KAAK,GAAG,KAAKokC,SAAL,CAAen/B,GAAf,CAAmBi6B,SAAnB,CAAd;MACA,OAAOl/B,KAAK,KAAK,IAAV,GAAiB+7B,UAAjB,GAA8B/7B,KAArC;IACH;EACJ;EACD;;;EACAm/B,QAAQ,CAACh2B,IAAD,EAAO;IACX,MAAMs2B,KAAK,GAAGvQ,YAAY,CAAC/lB,IAAD,CAA1B;;IACA,IAAIs2B,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,OAAO,KAAKR,iBAAL,CAAuBQ,KAAvB,EAA8BN,QAA9B,CAAuC/P,YAAY,CAACjmB,IAAD,CAAnD,CAAP;EACH;EACD;;;EACAE,QAAQ,CAAC61B,SAAD,EAAY;IAChB,OAAO,KAAKkF,SAAL,CAAen/B,GAAf,CAAmBi6B,SAAnB,MAAkC,IAAzC;EACH;EACD;;;EACAI,oBAAoB,CAACJ,SAAD,EAAYK,YAAZ,EAA0B;IAC1CtwB,sDAAM,CAACswB,YAAD,EAAe,4CAAf,CAAN;;IACA,IAAIL,SAAS,KAAK,WAAlB,EAA+B;MAC3B,OAAO,KAAKH,cAAL,CAAoBQ,YAApB,CAAP;IACH,CAFD,MAGK;MACD,MAAM2C,SAAS,GAAG,IAAIpI,SAAJ,CAAcoF,SAAd,EAAyBK,YAAzB,CAAlB;MACA,IAAI0E,WAAJ,EAAiBK,WAAjB;;MACA,IAAI/E,YAAY,CAAC1vB,OAAb,EAAJ,EAA4B;QACxBo0B,WAAW,GAAG,KAAKG,SAAL,CAAevjC,MAAf,CAAsBq+B,SAAtB,CAAd;QACAoF,WAAW,GAAG,KAAKD,SAAL,CAAeH,iBAAf,CAAiChC,SAAjC,EAA4C,KAAKkC,SAAjD,CAAd;MACH,CAHD,MAIK;QACDH,WAAW,GAAG,KAAKG,SAAL,CAAe7H,MAAf,CAAsB2C,SAAtB,EAAiCK,YAAjC,CAAd;QACA+E,WAAW,GAAG,KAAKD,SAAL,CAAeP,YAAf,CAA4B5B,SAA5B,EAAuC,KAAKkC,SAA5C,CAAd;MACH;;MACD,MAAMn4B,WAAW,GAAGg4B,WAAW,CAACp0B,OAAZ,KACdksB,UADc,GAEd,KAAK8C,aAFX;MAGA,OAAO,IAAIsF,YAAJ,CAAiBF,WAAjB,EAA8Bh4B,WAA9B,EAA2Cq4B,WAA3C,CAAP;IACH;EACJ;EACD;;;EACA9E,WAAW,CAACr2B,IAAD,EAAOo2B,YAAP,EAAqB;IAC5B,MAAME,KAAK,GAAGvQ,YAAY,CAAC/lB,IAAD,CAA1B;;IACA,IAAIs2B,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAOF,YAAP;IACH,CAFD,MAGK;MACDtwB,sDAAM,CAACigB,YAAY,CAAC/lB,IAAD,CAAZ,KAAuB,WAAvB,IAAsCgmB,aAAa,CAAChmB,IAAD,CAAb,KAAwB,CAA/D,EAAkE,4CAAlE,CAAN;MACA,MAAMo7B,iBAAiB,GAAG,KAAKtF,iBAAL,CAAuBQ,KAAvB,EAA8BD,WAA9B,CAA0CpQ,YAAY,CAACjmB,IAAD,CAAtD,EAA8Do2B,YAA9D,CAA1B;MACA,OAAO,KAAKD,oBAAL,CAA0BG,KAA1B,EAAiC8E,iBAAjC,CAAP;IACH;EACJ;EACD;;;EACA10B,OAAO,GAAG;IACN,OAAO,KAAKu0B,SAAL,CAAev0B,OAAf,EAAP;EACH;EACD;;;EACApG,WAAW,GAAG;IACV,OAAO,KAAK26B,SAAL,CAAenI,KAAf,EAAP;EACH;EACD;;;EACAn6B,GAAG,CAAC69B,YAAD,EAAe;IACd,IAAI,KAAK9vB,OAAL,EAAJ,EAAoB;MAChB,OAAO,IAAP;IACH;;IACD,MAAMhU,GAAG,GAAG,EAAZ;IACA,IAAI2oC,OAAO,GAAG,CAAd;IAAA,IAAiBlI,MAAM,GAAG,CAA1B;IAAA,IAA6BmI,cAAc,GAAG,IAA9C;IACA,KAAK/E,YAAL,CAAkBuB,cAAlB,EAAkC,CAACpjC,GAAD,EAAMwhC,SAAN,KAAoB;MAClDxjC,GAAG,CAACgC,GAAD,CAAH,GAAWwhC,SAAS,CAACv9B,GAAV,CAAc69B,YAAd,CAAX;MACA6E,OAAO;;MACP,IAAIC,cAAc,IAAIN,YAAY,CAAC9sB,eAAb,CAA6BT,IAA7B,CAAkC/Y,GAAlC,CAAtB,EAA8D;QAC1Dy+B,MAAM,GAAGzoB,IAAI,CAACqd,GAAL,CAASoL,MAAT,EAAiBnpB,MAAM,CAACtV,GAAD,CAAvB,CAAT;MACH,CAFD,MAGK;QACD4mC,cAAc,GAAG,KAAjB;MACH;IACJ,CATD;;IAUA,IAAI,CAAC9E,YAAD,IAAiB8E,cAAjB,IAAmCnI,MAAM,GAAG,IAAIkI,OAApD,EAA6D;MACzD;MACA,MAAME,KAAK,GAAG,EAAd,CAFyD,CAGzD;;MACA,KAAK,MAAM7mC,GAAX,IAAkBhC,GAAlB,EAAuB;QACnB6oC,KAAK,CAAC7mC,GAAD,CAAL,GAAahC,GAAG,CAACgC,GAAD,CAAhB;MACH;;MACD,OAAO6mC,KAAP;IACH,CARD,MASK;MACD,IAAI/E,YAAY,IAAI,CAAC,KAAKr2B,WAAL,GAAmBuG,OAAnB,EAArB,EAAmD;QAC/ChU,GAAG,CAAC,WAAD,CAAH,GAAmB,KAAKyN,WAAL,GAAmBxH,GAAnB,EAAnB;MACH;;MACD,OAAOjG,GAAP;IACH;EACJ;EACD;;;EACAoxB,IAAI,GAAG;IACH,IAAI,KAAK6R,SAAL,KAAmB,IAAvB,EAA6B;MACzB,IAAIe,MAAM,GAAG,EAAb;;MACA,IAAI,CAAC,KAAKv2B,WAAL,GAAmBuG,OAAnB,EAAL,EAAmC;QAC/BgwB,MAAM,IACF,cACIvB,gBAAgB,CAAC,KAAKh1B,WAAL,GAAmBxH,GAAnB,EAAD,CADpB,GAEI,GAHR;MAIH;;MACD,KAAK49B,YAAL,CAAkBuB,cAAlB,EAAkC,CAACpjC,GAAD,EAAMwhC,SAAN,KAAoB;QAClD,MAAMsF,SAAS,GAAGtF,SAAS,CAACpS,IAAV,EAAlB;;QACA,IAAI0X,SAAS,KAAK,EAAlB,EAAsB;UAClB9E,MAAM,IAAI,MAAMhiC,GAAN,GAAY,GAAZ,GAAkB8mC,SAA5B;QACH;MACJ,CALD;MAMA,KAAK7F,SAAL,GAAiBe,MAAM,KAAK,EAAX,GAAgB,EAAhB,GAAqBnuB,IAAI,CAACmuB,MAAD,CAA1C;IACH;;IACD,OAAO,KAAKf,SAAZ;EACH;EACD;;;EACAM,uBAAuB,CAACF,SAAD,EAAYG,SAAZ,EAAuBtK,KAAvB,EAA8B;IACjD,MAAM6P,GAAG,GAAG,KAAKC,aAAL,CAAmB9P,KAAnB,CAAZ;;IACA,IAAI6P,GAAJ,EAAS;MACL,MAAME,WAAW,GAAGF,GAAG,CAACjH,iBAAJ,CAAsB,IAAI7D,SAAJ,CAAcoF,SAAd,EAAyBG,SAAzB,CAAtB,CAApB;MACA,OAAOyF,WAAW,GAAGA,WAAW,CAAC1iC,IAAf,GAAsB,IAAxC;IACH,CAHD,MAIK;MACD,OAAO,KAAKgiC,SAAL,CAAezG,iBAAf,CAAiCuB,SAAjC,CAAP;IACH;EACJ;;EACD6F,iBAAiB,CAAC1B,eAAD,EAAkB;IAC/B,MAAMuB,GAAG,GAAG,KAAKC,aAAL,CAAmBxB,eAAnB,CAAZ;;IACA,IAAIuB,GAAJ,EAAS;MACL,MAAMvI,MAAM,GAAGuI,GAAG,CAACvI,MAAJ,EAAf;MACA,OAAOA,MAAM,IAAIA,MAAM,CAACj6B,IAAxB;IACH,CAHD,MAIK;MACD,OAAO,KAAKgiC,SAAL,CAAe/H,MAAf,EAAP;IACH;EACJ;;EACD2I,aAAa,CAAC3B,eAAD,EAAkB;IAC3B,MAAMhH,MAAM,GAAG,KAAK0I,iBAAL,CAAuB1B,eAAvB,CAAf;;IACA,IAAIhH,MAAJ,EAAY;MACR,OAAO,IAAIvC,SAAJ,CAAcuC,MAAd,EAAsB,KAAK+H,SAAL,CAAen/B,GAAf,CAAmBo3B,MAAnB,CAAtB,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ;EACD;AACJ;AACA;;;EACI4I,gBAAgB,CAAC5B,eAAD,EAAkB;IAC9B,MAAMuB,GAAG,GAAG,KAAKC,aAAL,CAAmBxB,eAAnB,CAAZ;;IACA,IAAIuB,GAAJ,EAAS;MACL,MAAMtI,MAAM,GAAGsI,GAAG,CAACtI,MAAJ,EAAf;MACA,OAAOA,MAAM,IAAIA,MAAM,CAACl6B,IAAxB;IACH,CAHD,MAIK;MACD,OAAO,KAAKgiC,SAAL,CAAe9H,MAAf,EAAP;IACH;EACJ;;EACD4I,YAAY,CAAC7B,eAAD,EAAkB;IAC1B,MAAM/G,MAAM,GAAG,KAAK2I,gBAAL,CAAsB5B,eAAtB,CAAf;;IACA,IAAI/G,MAAJ,EAAY;MACR,OAAO,IAAIxC,SAAJ,CAAcwC,MAAd,EAAsB,KAAK8H,SAAL,CAAen/B,GAAf,CAAmBq3B,MAAnB,CAAtB,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ;;EACDoD,YAAY,CAAC3K,KAAD,EAAQj2B,MAAR,EAAgB;IACxB,MAAM8lC,GAAG,GAAG,KAAKC,aAAL,CAAmB9P,KAAnB,CAAZ;;IACA,IAAI6P,GAAJ,EAAS;MACL,OAAOA,GAAG,CAAC1I,gBAAJ,CAAqBiJ,WAAW,IAAI;QACvC,OAAOrmC,MAAM,CAACqmC,WAAW,CAAC/iC,IAAb,EAAmB+iC,WAAW,CAACpL,IAA/B,CAAb;MACH,CAFM,CAAP;IAGH,CAJD,MAKK;MACD,OAAO,KAAKqK,SAAL,CAAelI,gBAAf,CAAgCp9B,MAAhC,CAAP;IACH;EACJ;;EACD++B,WAAW,CAACwF,eAAD,EAAkB;IACzB,OAAO,KAAKtF,eAAL,CAAqBsF,eAAe,CAAC5I,OAAhB,EAArB,EAAgD4I,eAAhD,CAAP;EACH;;EACDtF,eAAe,CAACqH,SAAD,EAAY/B,eAAZ,EAA6B;IACxC,MAAMuB,GAAG,GAAG,KAAKC,aAAL,CAAmBxB,eAAnB,CAAZ;;IACA,IAAIuB,GAAJ,EAAS;MACL,OAAOA,GAAG,CAAC7G,eAAJ,CAAoBqH,SAApB,EAA+BvnC,GAAG,IAAIA,GAAtC,CAAP;IACH,CAFD,MAGK;MACD,MAAMwnC,QAAQ,GAAG,KAAKjB,SAAL,CAAerG,eAAf,CAA+BqH,SAAS,CAAChjC,IAAzC,EAA+C03B,SAAS,CAACE,IAAzD,CAAjB;MACA,IAAI38B,IAAI,GAAGgoC,QAAQ,CAAC3J,IAAT,EAAX;;MACA,OAAOr+B,IAAI,IAAI,IAAR,IAAgBgmC,eAAe,CAAClJ,OAAhB,CAAwB98B,IAAxB,EAA8B+nC,SAA9B,IAA2C,CAAlE,EAAqE;QACjEC,QAAQ,CAAC7J,OAAT;QACAn+B,IAAI,GAAGgoC,QAAQ,CAAC3J,IAAT,EAAP;MACH;;MACD,OAAO2J,QAAP;IACH;EACJ;;EACDpH,kBAAkB,CAACoF,eAAD,EAAkB;IAChC,OAAO,KAAKrF,sBAAL,CAA4BqF,eAAe,CAACvI,OAAhB,EAA5B,EAAuDuI,eAAvD,CAAP;EACH;;EACDrF,sBAAsB,CAACsH,OAAD,EAAUjC,eAAV,EAA2B;IAC7C,MAAMuB,GAAG,GAAG,KAAKC,aAAL,CAAmBxB,eAAnB,CAAZ;;IACA,IAAIuB,GAAJ,EAAS;MACL,OAAOA,GAAG,CAAC5G,sBAAJ,CAA2BsH,OAA3B,EAAoCznC,GAAG,IAAI;QAC9C,OAAOA,GAAP;MACH,CAFM,CAAP;IAGH,CAJD,MAKK;MACD,MAAMwnC,QAAQ,GAAG,KAAKjB,SAAL,CAAepG,sBAAf,CAAsCsH,OAAO,CAACljC,IAA9C,EAAoD03B,SAAS,CAACE,IAA9D,CAAjB;MACA,IAAI38B,IAAI,GAAGgoC,QAAQ,CAAC3J,IAAT,EAAX;;MACA,OAAOr+B,IAAI,IAAI,IAAR,IAAgBgmC,eAAe,CAAClJ,OAAhB,CAAwB98B,IAAxB,EAA8BioC,OAA9B,IAAyC,CAAhE,EAAmE;QAC/DD,QAAQ,CAAC7J,OAAT;QACAn+B,IAAI,GAAGgoC,QAAQ,CAAC3J,IAAT,EAAP;MACH;;MACD,OAAO2J,QAAP;IACH;EACJ;;EACDvF,SAAS,CAACz0B,KAAD,EAAQ;IACb,IAAI,KAAKwE,OAAL,EAAJ,EAAoB;MAChB,IAAIxE,KAAK,CAACwE,OAAN,EAAJ,EAAqB;QACjB,OAAO,CAAP;MACH,CAFD,MAGK;QACD,OAAO,CAAC,CAAR;MACH;IACJ,CAPD,MAQK,IAAIxE,KAAK,CAACozB,UAAN,MAAsBpzB,KAAK,CAACwE,OAAN,EAA1B,EAA2C;MAC5C,OAAO,CAAP;IACH,CAFI,MAGA,IAAIxE,KAAK,KAAKk6B,QAAd,EAAwB;MACzB,OAAO,CAAC,CAAR;IACH,CAFI,MAGA;MACD;MACA,OAAO,CAAP;IACH;EACJ;;EACDjF,SAAS,CAAC+C,eAAD,EAAkB;IACvB,IAAIA,eAAe,KAAKpI,SAApB,IACA,KAAKoJ,SAAL,CAAejB,QAAf,CAAwBC,eAAxB,CADJ,EAC8C;MAC1C,OAAO,IAAP;IACH,CAHD,MAIK;MACD,MAAMiB,WAAW,GAAG,KAAKD,SAAL,CAAef,QAAf,CAAwBD,eAAxB,EAAyC,KAAKe,SAA9C,CAApB;MACA,OAAO,IAAID,YAAJ,CAAiB,KAAKC,SAAtB,EAAiC,KAAKvF,aAAtC,EAAqDyF,WAArD,CAAP;IACH;EACJ;;EACD/D,SAAS,CAACxL,KAAD,EAAQ;IACb,OAAOA,KAAK,KAAKkG,SAAV,IAAuB,KAAKoJ,SAAL,CAAejB,QAAf,CAAwBrO,KAAxB,CAA9B;EACH;;EACDyL,MAAM,CAACn1B,KAAD,EAAQ;IACV,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,IAAP;IACH,CAFD,MAGK,IAAIA,KAAK,CAACozB,UAAN,EAAJ,EAAwB;MACzB,OAAO,KAAP;IACH,CAFI,MAGA;MACD,MAAM+G,iBAAiB,GAAGn6B,KAA1B;;MACA,IAAI,CAAC,KAAK/B,WAAL,GAAmBk3B,MAAnB,CAA0BgF,iBAAiB,CAACl8B,WAAlB,EAA1B,CAAL,EAAiE;QAC7D,OAAO,KAAP;MACH,CAFD,MAGK,IAAI,KAAK86B,SAAL,CAAenI,KAAf,OAA2BuJ,iBAAiB,CAACpB,SAAlB,CAA4BnI,KAA5B,EAA/B,EAAoE;QACrE,MAAMwJ,QAAQ,GAAG,KAAK5H,WAAL,CAAiBoD,cAAjB,CAAjB;QACA,MAAMyE,SAAS,GAAGF,iBAAiB,CAAC3H,WAAlB,CAA8BoD,cAA9B,CAAlB;QACA,IAAI0E,WAAW,GAAGF,QAAQ,CAACjK,OAAT,EAAlB;QACA,IAAIoK,YAAY,GAAGF,SAAS,CAAClK,OAAV,EAAnB;;QACA,OAAOmK,WAAW,IAAIC,YAAtB,EAAoC;UAChC,IAAID,WAAW,CAACvjC,IAAZ,KAAqBwjC,YAAY,CAACxjC,IAAlC,IACA,CAACujC,WAAW,CAAC5L,IAAZ,CAAiByG,MAAjB,CAAwBoF,YAAY,CAAC7L,IAArC,CADL,EACiD;YAC7C,OAAO,KAAP;UACH;;UACD4L,WAAW,GAAGF,QAAQ,CAACjK,OAAT,EAAd;UACAoK,YAAY,GAAGF,SAAS,CAAClK,OAAV,EAAf;QACH;;QACD,OAAOmK,WAAW,KAAK,IAAhB,IAAwBC,YAAY,KAAK,IAAhD;MACH,CAdI,MAeA;QACD,OAAO,KAAP;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIf,aAAa,CAACxB,eAAD,EAAkB;IAC3B,IAAIA,eAAe,KAAKpI,SAAxB,EAAmC;MAC/B,OAAO,IAAP;IACH,CAFD,MAGK;MACD,OAAO,KAAKoJ,SAAL,CAAep/B,GAAf,CAAmBo+B,eAAe,CAACl4B,QAAhB,EAAnB,CAAP;IACH;EACJ;;AArVc;;AAuVnBg5B,YAAY,CAAC9sB,eAAb,GAA+B,gBAA/B;;AACA,MAAMwuB,OAAN,SAAsB1B,YAAtB,CAAmC;EAC/BhiC,WAAW,GAAG;IACV,MAAM,IAAI25B,SAAJ,CAAcqC,eAAd,CAAN,EAAsCgG,YAAY,CAACpI,UAAnD,EAA+D+G,QAAQ,CAACG,OAAxE;EACH;;EACDnD,SAAS,CAACz0B,KAAD,EAAQ;IACb,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAChB,OAAO,CAAP;IACH,CAFD,MAGK;MACD,OAAO,CAAP;IACH;EACJ;;EACDm1B,MAAM,CAACn1B,KAAD,EAAQ;IACV;IACA,OAAOA,KAAK,KAAK,IAAjB;EACH;;EACD/B,WAAW,GAAG;IACV,OAAO,IAAP;EACH;;EACD21B,iBAAiB,CAACC,SAAD,EAAY;IACzB,OAAOiF,YAAY,CAACpI,UAApB;EACH;;EACDlsB,OAAO,GAAG;IACN,OAAO,KAAP;EACH;;AAxB8B;AA0BnC;AACA;AACA;;;AACA,MAAM01B,QAAQ,GAAG,IAAIM,OAAJ,EAAjB;AACAjkC,MAAM,CAACkkC,gBAAP,CAAwBhM,SAAxB,EAAmC;EAC/BY,GAAG,EAAE;IACDj/B,KAAK,EAAE,IAAIq+B,SAAJ,CAAc7lB,QAAd,EAAwBkwB,YAAY,CAACpI,UAArC;EADN,CAD0B;EAI/BgK,GAAG,EAAE;IACDtqC,KAAK,EAAE,IAAIq+B,SAAJ,CAAc5lB,QAAd,EAAwBqxB,QAAxB;EADN;AAJ0B,CAAnC;AAQA;AACA;AACA;;AACA3K,QAAQ,CAACD,YAAT,GAAwBwJ,YAAY,CAACpI,UAArC;AACA4C,QAAQ,CAACD,yBAAT,GAAqCyF,YAArC;AACA9F,YAAY,CAACkH,QAAD,CAAZ;AACA3E,UAAU,CAAC2E,QAAD,CAAV;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMS,SAAS,GAAG,IAAlB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4Bz9B,QAAQ,GAAG,IAAvC,EAA6C;EACzC,IAAIy9B,IAAI,KAAK,IAAb,EAAmB;IACf,OAAO/B,YAAY,CAACpI,UAApB;EACH;;EACD,IAAI,OAAOmK,IAAP,KAAgB,QAAhB,IAA4B,eAAeA,IAA/C,EAAqD;IACjDz9B,QAAQ,GAAGy9B,IAAI,CAAC,WAAD,CAAf;EACH;;EACDj3B,sDAAM,CAACxG,QAAQ,KAAK,IAAb,IACH,OAAOA,QAAP,KAAoB,QADjB,IAEH,OAAOA,QAAP,KAAoB,QAFjB,IAGF,OAAOA,QAAP,KAAoB,QAApB,IAAgC,SAASA,QAHxC,EAGmD,kCAAkC,OAAOA,QAH5F,CAAN;;EAIA,IAAI,OAAOy9B,IAAP,KAAgB,QAAhB,IAA4B,YAAYA,IAAxC,IAAgDA,IAAI,CAAC,QAAD,CAAJ,KAAmB,IAAvE,EAA6E;IACzEA,IAAI,GAAGA,IAAI,CAAC,QAAD,CAAX;EACH,CAbwC,CAczC;;;EACA,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,SAASA,IAAzC,EAA+C;IAC3C,MAAMC,QAAQ,GAAGD,IAAjB;IACA,OAAO,IAAIvH,QAAJ,CAAawH,QAAb,EAAuBF,YAAY,CAACx9B,QAAD,CAAnC,CAAP;EACH;;EACD,IAAI,EAAEy9B,IAAI,YAAYv9B,KAAlB,KAA4Bq9B,SAAhC,EAA2C;IACvC,MAAMI,QAAQ,GAAG,EAAjB;IACA,IAAIC,oBAAoB,GAAG,KAA3B;IACA,MAAMC,YAAY,GAAGJ,IAArB;IACA/wB,IAAI,CAACmxB,YAAD,EAAe,CAACzoC,GAAD,EAAMmC,KAAN,KAAgB;MAC/B,IAAInC,GAAG,CAACqX,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,GAA5B,EAAiC;QAC7B;QACA,MAAMmqB,SAAS,GAAG4G,YAAY,CAACjmC,KAAD,CAA9B;;QACA,IAAI,CAACq/B,SAAS,CAACxvB,OAAV,EAAL,EAA0B;UACtBw2B,oBAAoB,GAChBA,oBAAoB,IAAI,CAAChH,SAAS,CAAC/1B,WAAV,GAAwBuG,OAAxB,EAD7B;UAEAu2B,QAAQ,CAAC/nC,IAAT,CAAc,IAAIy7B,SAAJ,CAAcj8B,GAAd,EAAmBwhC,SAAnB,CAAd;QACH;MACJ;IACJ,CAVG,CAAJ;;IAWA,IAAI+G,QAAQ,CAAC1nC,MAAT,KAAoB,CAAxB,EAA2B;MACvB,OAAOylC,YAAY,CAACpI,UAApB;IACH;;IACD,MAAMwK,QAAQ,GAAG5E,aAAa,CAACyE,QAAD,EAAWlI,oBAAX,EAAiCgE,SAAS,IAAIA,SAAS,CAAC9/B,IAAxD,EAA8D+7B,eAA9D,CAA9B;;IACA,IAAIkI,oBAAJ,EAA0B;MACtB,MAAMG,cAAc,GAAG7E,aAAa,CAACyE,QAAD,EAAWnF,cAAc,CAAC/G,UAAf,EAAX,CAApC;MACA,OAAO,IAAIiK,YAAJ,CAAiBoC,QAAjB,EAA2BN,YAAY,CAACx9B,QAAD,CAAvC,EAAmD,IAAIq6B,QAAJ,CAAa;QAAE,aAAa0D;MAAf,CAAb,EAA8C;QAAE,aAAavF;MAAf,CAA9C,CAAnD,CAAP;IACH,CAHD,MAIK;MACD,OAAO,IAAIkD,YAAJ,CAAiBoC,QAAjB,EAA2BN,YAAY,CAACx9B,QAAD,CAAvC,EAAmDq6B,QAAQ,CAACG,OAA5D,CAAP;IACH;EACJ,CA1BD,MA2BK;IACD,IAAIlJ,IAAI,GAAGoK,YAAY,CAACpI,UAAxB;IACA5mB,IAAI,CAAC+wB,IAAD,EAAO,CAACroC,GAAD,EAAM4oC,SAAN,KAAoB;MAC3B,IAAIz3B,wDAAQ,CAACk3B,IAAD,EAAOroC,GAAP,CAAZ,EAAyB;QACrB,IAAIA,GAAG,CAACqX,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,GAA5B,EAAiC;UAC7B;UACA,MAAMmqB,SAAS,GAAG4G,YAAY,CAACQ,SAAD,CAA9B;;UACA,IAAIpH,SAAS,CAACZ,UAAV,MAA0B,CAACY,SAAS,CAACxvB,OAAV,EAA/B,EAAoD;YAChDkqB,IAAI,GAAGA,IAAI,CAACuF,oBAAL,CAA0BzhC,GAA1B,EAA+BwhC,SAA/B,CAAP;UACH;QACJ;MACJ;IACJ,CAVG,CAAJ;IAWA,OAAOtF,IAAI,CAACgF,cAAL,CAAoBkH,YAAY,CAACx9B,QAAD,CAAhC,CAAP;EACH;AACJ;;AACDk4B,eAAe,CAACsF,YAAD,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMS,SAAN,SAAwBzM,KAAxB,CAA8B;EAC1B93B,WAAW,CAACwkC,UAAD,EAAa;IACpB;IACA,KAAKA,UAAL,GAAkBA,UAAlB;IACA13B,sDAAM,CAAC,CAAC8gB,WAAW,CAAC4W,UAAD,CAAZ,IAA4BzX,YAAY,CAACyX,UAAD,CAAZ,KAA6B,WAA1D,EAAuE,yDAAvE,CAAN;EACH;;EACDC,YAAY,CAACtmC,IAAD,EAAO;IACf,OAAOA,IAAI,CAAC6+B,QAAL,CAAc,KAAKwH,UAAnB,CAAP;EACH;;EACD9L,WAAW,CAACd,IAAD,EAAO;IACd,OAAO,CAACA,IAAI,CAACoF,QAAL,CAAc,KAAKwH,UAAnB,EAA+B92B,OAA/B,EAAR;EACH;;EACDsqB,OAAO,CAACz4B,CAAD,EAAI0S,CAAJ,EAAO;IACV,MAAMyyB,MAAM,GAAG,KAAKD,YAAL,CAAkBllC,CAAC,CAACq4B,IAApB,CAAf;IACA,MAAM+M,MAAM,GAAG,KAAKF,YAAL,CAAkBxyB,CAAC,CAAC2lB,IAApB,CAAf;IACA,MAAMiH,QAAQ,GAAG6F,MAAM,CAAC/G,SAAP,CAAiBgH,MAAjB,CAAjB;;IACA,IAAI9F,QAAQ,KAAK,CAAjB,EAAoB;MAChB,OAAO7sB,WAAW,CAACzS,CAAC,CAACU,IAAH,EAASgS,CAAC,CAAChS,IAAX,CAAlB;IACH,CAFD,MAGK;MACD,OAAO4+B,QAAP;IACH;EACJ;;EACDjG,QAAQ,CAACC,UAAD,EAAa54B,IAAb,EAAmB;IACvB,MAAM2kC,SAAS,GAAGd,YAAY,CAACjL,UAAD,CAA9B;IACA,MAAMjB,IAAI,GAAGoK,YAAY,CAACpI,UAAb,CAAwByD,WAAxB,CAAoC,KAAKmH,UAAzC,EAAqDI,SAArD,CAAb;IACA,OAAO,IAAIjN,SAAJ,CAAc13B,IAAd,EAAoB23B,IAApB,CAAP;EACH;;EACDe,OAAO,GAAG;IACN,MAAMf,IAAI,GAAGoK,YAAY,CAACpI,UAAb,CAAwByD,WAAxB,CAAoC,KAAKmH,UAAzC,EAAqDpB,QAArD,CAAb;IACA,OAAO,IAAIzL,SAAJ,CAAc5lB,QAAd,EAAwB6lB,IAAxB,CAAP;EACH;;EACD5uB,QAAQ,GAAG;IACP,OAAOqkB,SAAS,CAAC,KAAKmX,UAAN,EAAkB,CAAlB,CAAT,CAA8BtwB,IAA9B,CAAmC,GAAnC,CAAP;EACH;;AAlCyB;AAqC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM2wB,UAAN,SAAyB/M,KAAzB,CAA+B;EAC3BE,OAAO,CAACz4B,CAAD,EAAI0S,CAAJ,EAAO;IACV,MAAM4sB,QAAQ,GAAGt/B,CAAC,CAACq4B,IAAF,CAAO+F,SAAP,CAAiB1rB,CAAC,CAAC2lB,IAAnB,CAAjB;;IACA,IAAIiH,QAAQ,KAAK,CAAjB,EAAoB;MAChB,OAAO7sB,WAAW,CAACzS,CAAC,CAACU,IAAH,EAASgS,CAAC,CAAChS,IAAX,CAAlB;IACH,CAFD,MAGK;MACD,OAAO4+B,QAAP;IACH;EACJ;;EACDnG,WAAW,CAACd,IAAD,EAAO;IACd,OAAO,IAAP;EACH;;EACDK,mBAAmB,CAACC,OAAD,EAAUC,OAAV,EAAmB;IAClC,OAAO,CAACD,OAAO,CAACmG,MAAR,CAAelG,OAAf,CAAR;EACH;;EACDG,OAAO,GAAG;IACN;IACA,OAAOX,SAAS,CAACY,GAAjB;EACH;;EACDI,OAAO,GAAG;IACN;IACA,OAAOhB,SAAS,CAACiM,GAAjB;EACH;;EACDhL,QAAQ,CAACC,UAAD,EAAa54B,IAAb,EAAmB;IACvB,MAAM2kC,SAAS,GAAGd,YAAY,CAACjL,UAAD,CAA9B;IACA,OAAO,IAAIlB,SAAJ,CAAc13B,IAAd,EAAoB2kC,SAApB,CAAP;EACH;EACD;AACJ;AACA;;;EACI57B,QAAQ,GAAG;IACP,OAAO,QAAP;EACH;;AAjC0B;;AAmC/B,MAAM87B,WAAW,GAAG,IAAID,UAAJ,EAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,WAAT,CAAqBC,YAArB,EAAmC;EAC/B,OAAO;IAAEppC,IAAI,EAAE;IAAQ;IAAhB;IAAwCopC;EAAxC,CAAP;AACH;;AACD,SAASC,gBAAT,CAA0BlI,SAA1B,EAAqCiI,YAArC,EAAmD;EAC/C,OAAO;IAAEppC,IAAI,EAAE;IAAc;IAAtB;IAAoDopC,YAApD;IAAkEjI;EAAlE,CAAP;AACH;;AACD,SAASmI,kBAAT,CAA4BnI,SAA5B,EAAuCiI,YAAvC,EAAqD;EACjD,OAAO;IAAEppC,IAAI,EAAE;IAAgB;IAAxB;IAAwDopC,YAAxD;IAAsEjI;EAAtE,CAAP;AACH;;AACD,SAASoI,kBAAT,CAA4BpI,SAA5B,EAAuCiI,YAAvC,EAAqDI,OAArD,EAA8D;EAC1D,OAAO;IACHxpC,IAAI,EAAE;IAAgB;IADnB;IAEHopC,YAFG;IAGHjI,SAHG;IAIHqI;EAJG,CAAP;AAMH;;AACD,SAASC,gBAAT,CAA0BtI,SAA1B,EAAqCiI,YAArC,EAAmD;EAC/C,OAAO;IAAEppC,IAAI,EAAE;IAAc;IAAtB;IAAoDopC,YAApD;IAAkEjI;EAAlE,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMuI,aAAN,CAAoB;EAChBtlC,WAAW,CAACulC,MAAD,EAAS;IAChB,KAAKA,MAAL,GAAcA,MAAd;EACH;;EACDlI,WAAW,CAACl/B,IAAD,EAAOzC,GAAP,EAAY8pC,QAAZ,EAAsBC,YAAtB,EAAoCC,MAApC,EAA4CC,oBAA5C,EAAkE;IACzE74B,sDAAM,CAAC3O,IAAI,CAACigC,SAAL,CAAe,KAAKmH,MAApB,CAAD,EAA8B,mDAA9B,CAAN;IACA,MAAMK,QAAQ,GAAGznC,IAAI,CAAC2+B,iBAAL,CAAuBphC,GAAvB,CAAjB,CAFyE,CAGzE;;IACA,IAAIkqC,QAAQ,CAAC5I,QAAT,CAAkByI,YAAlB,EAAgCpH,MAAhC,CAAuCmH,QAAQ,CAACxI,QAAT,CAAkByI,YAAlB,CAAvC,CAAJ,EAA6E;MACzE;MACA;MACA;MACA,IAAIG,QAAQ,CAACl4B,OAAT,OAAuB83B,QAAQ,CAAC93B,OAAT,EAA3B,EAA+C;QAC3C;QACA;QACA;QACA,OAAOvP,IAAP;MACH;IACJ;;IACD,IAAIwnC,oBAAoB,IAAI,IAA5B,EAAkC;MAC9B,IAAIH,QAAQ,CAAC93B,OAAT,EAAJ,EAAwB;QACpB,IAAIvP,IAAI,CAAC+I,QAAL,CAAcxL,GAAd,CAAJ,EAAwB;UACpBiqC,oBAAoB,CAACE,gBAArB,CAAsCX,kBAAkB,CAACxpC,GAAD,EAAMkqC,QAAN,CAAxD;QACH,CAFD,MAGK;UACD94B,sDAAM,CAAC3O,IAAI,CAACm+B,UAAL,EAAD,EAAoB,qEAApB,CAAN;QACH;MACJ,CAPD,MAQK,IAAIsJ,QAAQ,CAACl4B,OAAT,EAAJ,EAAwB;QACzBi4B,oBAAoB,CAACE,gBAArB,CAAsCZ,gBAAgB,CAACvpC,GAAD,EAAM8pC,QAAN,CAAtD;MACH,CAFI,MAGA;QACDG,oBAAoB,CAACE,gBAArB,CAAsCV,kBAAkB,CAACzpC,GAAD,EAAM8pC,QAAN,EAAgBI,QAAhB,CAAxD;MACH;IACJ;;IACD,IAAIznC,IAAI,CAACm+B,UAAL,MAAqBkJ,QAAQ,CAAC93B,OAAT,EAAzB,EAA6C;MACzC,OAAOvP,IAAP;IACH,CAFD,MAGK;MACD;MACA,OAAOA,IAAI,CAACg/B,oBAAL,CAA0BzhC,GAA1B,EAA+B8pC,QAA/B,EAAyCrH,SAAzC,CAAmD,KAAKoH,MAAxD,CAAP;IACH;EACJ;;EACDO,cAAc,CAACV,OAAD,EAAUW,OAAV,EAAmBJ,oBAAnB,EAAyC;IACnD,IAAIA,oBAAoB,IAAI,IAA5B,EAAkC;MAC9B,IAAI,CAACP,OAAO,CAAC9I,UAAR,EAAL,EAA2B;QACvB8I,OAAO,CAAC7H,YAAR,CAAqBuB,cAArB,EAAqC,CAACpjC,GAAD,EAAMwhC,SAAN,KAAoB;UACrD,IAAI,CAAC6I,OAAO,CAAC7+B,QAAR,CAAiBxL,GAAjB,CAAL,EAA4B;YACxBiqC,oBAAoB,CAACE,gBAArB,CAAsCX,kBAAkB,CAACxpC,GAAD,EAAMwhC,SAAN,CAAxD;UACH;QACJ,CAJD;MAKH;;MACD,IAAI,CAAC6I,OAAO,CAACzJ,UAAR,EAAL,EAA2B;QACvByJ,OAAO,CAACxI,YAAR,CAAqBuB,cAArB,EAAqC,CAACpjC,GAAD,EAAMwhC,SAAN,KAAoB;UACrD,IAAIkI,OAAO,CAACl+B,QAAR,CAAiBxL,GAAjB,CAAJ,EAA2B;YACvB,MAAMkqC,QAAQ,GAAGR,OAAO,CAACtI,iBAAR,CAA0BphC,GAA1B,CAAjB;;YACA,IAAI,CAACkqC,QAAQ,CAACvH,MAAT,CAAgBnB,SAAhB,CAAL,EAAiC;cAC7ByI,oBAAoB,CAACE,gBAArB,CAAsCV,kBAAkB,CAACzpC,GAAD,EAAMwhC,SAAN,EAAiB0I,QAAjB,CAAxD;YACH;UACJ,CALD,MAMK;YACDD,oBAAoB,CAACE,gBAArB,CAAsCZ,gBAAgB,CAACvpC,GAAD,EAAMwhC,SAAN,CAAtD;UACH;QACJ,CAVD;MAWH;IACJ;;IACD,OAAO6I,OAAO,CAAC5H,SAAR,CAAkB,KAAKoH,MAAvB,CAAP;EACH;;EACD3I,cAAc,CAACwI,OAAD,EAAUt7B,WAAV,EAAuB;IACjC,IAAIs7B,OAAO,CAAC13B,OAAR,EAAJ,EAAuB;MACnB,OAAOs0B,YAAY,CAACpI,UAApB;IACH,CAFD,MAGK;MACD,OAAOwL,OAAO,CAACxI,cAAR,CAAuB9yB,WAAvB,CAAP;IACH;EACJ;;EACDk8B,YAAY,GAAG;IACX,OAAO,KAAP;EACH;;EACDC,gBAAgB,GAAG;IACf,OAAO,IAAP;EACH;;EACDhS,QAAQ,GAAG;IACP,OAAO,KAAKsR,MAAZ;EACH;;AApFe;AAuFpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMW,YAAN,CAAmB;EACflmC,WAAW,CAACmZ,MAAD,EAAS;IAChB,KAAKgtB,cAAL,GAAsB,IAAIb,aAAJ,CAAkBnsB,MAAM,CAAC8a,QAAP,EAAlB,CAAtB;IACA,KAAKsR,MAAL,GAAcpsB,MAAM,CAAC8a,QAAP,EAAd;IACA,KAAKmS,UAAL,GAAkBF,YAAY,CAACG,aAAb,CAA2BltB,MAA3B,CAAlB;IACA,KAAKmtB,QAAL,GAAgBJ,YAAY,CAACK,WAAb,CAAyBptB,MAAzB,CAAhB;IACA,KAAKqtB,iBAAL,GAAyB,CAACrtB,MAAM,CAACstB,cAAjC;IACA,KAAKC,eAAL,GAAuB,CAACvtB,MAAM,CAACwtB,aAA/B;EACH;;EACDC,YAAY,GAAG;IACX,OAAO,KAAKR,UAAZ;EACH;;EACDS,UAAU,GAAG;IACT,OAAO,KAAKP,QAAZ;EACH;;EACDQ,OAAO,CAAClP,IAAD,EAAO;IACV,MAAMmP,aAAa,GAAG,KAAKP,iBAAL,GAChB,KAAKjB,MAAL,CAAYvN,OAAZ,CAAoB,KAAK4O,YAAL,EAApB,EAAyChP,IAAzC,KAAkD,CADlC,GAEhB,KAAK2N,MAAL,CAAYvN,OAAZ,CAAoB,KAAK4O,YAAL,EAApB,EAAyChP,IAAzC,IAAiD,CAFvD;IAGA,MAAMoP,WAAW,GAAG,KAAKN,eAAL,GACd,KAAKnB,MAAL,CAAYvN,OAAZ,CAAoBJ,IAApB,EAA0B,KAAKiP,UAAL,EAA1B,KAAgD,CADlC,GAEd,KAAKtB,MAAL,CAAYvN,OAAZ,CAAoBJ,IAApB,EAA0B,KAAKiP,UAAL,EAA1B,IAA+C,CAFrD;IAGA,OAAOE,aAAa,IAAIC,WAAxB;EACH;;EACD3J,WAAW,CAACl/B,IAAD,EAAOzC,GAAP,EAAY8pC,QAAZ,EAAsBC,YAAtB,EAAoCC,MAApC,EAA4CC,oBAA5C,EAAkE;IACzE,IAAI,CAAC,KAAKmB,OAAL,CAAa,IAAInP,SAAJ,CAAcj8B,GAAd,EAAmB8pC,QAAnB,CAAb,CAAL,EAAiD;MAC7CA,QAAQ,GAAGxD,YAAY,CAACpI,UAAxB;IACH;;IACD,OAAO,KAAKuM,cAAL,CAAoB9I,WAApB,CAAgCl/B,IAAhC,EAAsCzC,GAAtC,EAA2C8pC,QAA3C,EAAqDC,YAArD,EAAmEC,MAAnE,EAA2EC,oBAA3E,CAAP;EACH;;EACDG,cAAc,CAACV,OAAD,EAAUW,OAAV,EAAmBJ,oBAAnB,EAAyC;IACnD,IAAII,OAAO,CAACzJ,UAAR,EAAJ,EAA0B;MACtB;MACAyJ,OAAO,GAAG/D,YAAY,CAACpI,UAAvB;IACH;;IACD,IAAIqN,QAAQ,GAAGlB,OAAO,CAAC5H,SAAR,CAAkB,KAAKoH,MAAvB,CAAf,CALmD,CAMnD;;IACA0B,QAAQ,GAAGA,QAAQ,CAACrK,cAAT,CAAwBoF,YAAY,CAACpI,UAArC,CAAX;IACA,MAAMsN,IAAI,GAAG,IAAb;IACAnB,OAAO,CAACxI,YAAR,CAAqBuB,cAArB,EAAqC,CAACpjC,GAAD,EAAMwhC,SAAN,KAAoB;MACrD,IAAI,CAACgK,IAAI,CAACJ,OAAL,CAAa,IAAInP,SAAJ,CAAcj8B,GAAd,EAAmBwhC,SAAnB,CAAb,CAAL,EAAkD;QAC9C+J,QAAQ,GAAGA,QAAQ,CAAC9J,oBAAT,CAA8BzhC,GAA9B,EAAmCsmC,YAAY,CAACpI,UAAhD,CAAX;MACH;IACJ,CAJD;IAKA,OAAO,KAAKuM,cAAL,CAAoBL,cAApB,CAAmCV,OAAnC,EAA4C6B,QAA5C,EAAsDtB,oBAAtD,CAAP;EACH;;EACD/I,cAAc,CAACwI,OAAD,EAAUt7B,WAAV,EAAuB;IACjC;IACA,OAAOs7B,OAAP;EACH;;EACDY,YAAY,GAAG;IACX,OAAO,IAAP;EACH;;EACDC,gBAAgB,GAAG;IACf,OAAO,KAAKE,cAAZ;EACH;;EACDlS,QAAQ,GAAG;IACP,OAAO,KAAKsR,MAAZ;EACH;;EACmB,OAAbc,aAAa,CAACltB,MAAD,EAAS;IACzB,IAAIA,MAAM,CAACguB,QAAP,EAAJ,EAAuB;MACnB,MAAMC,SAAS,GAAGjuB,MAAM,CAACkuB,iBAAP,EAAlB;MACA,OAAOluB,MAAM,CAAC8a,QAAP,GAAkB2E,QAAlB,CAA2Bzf,MAAM,CAACmuB,kBAAP,EAA3B,EAAwDF,SAAxD,CAAP;IACH,CAHD,MAIK;MACD,OAAOjuB,MAAM,CAAC8a,QAAP,GAAkBqE,OAAlB,EAAP;IACH;EACJ;;EACiB,OAAXiO,WAAW,CAACptB,MAAD,EAAS;IACvB,IAAIA,MAAM,CAACouB,MAAP,EAAJ,EAAqB;MACjB,MAAMC,OAAO,GAAGruB,MAAM,CAACsuB,eAAP,EAAhB;MACA,OAAOtuB,MAAM,CAAC8a,QAAP,GAAkB2E,QAAlB,CAA2Bzf,MAAM,CAACuuB,gBAAP,EAA3B,EAAsDF,OAAtD,CAAP;IACH,CAHD,MAIK;MACD,OAAOruB,MAAM,CAAC8a,QAAP,GAAkB0E,OAAlB,EAAP;IACH;EACJ;;AA5Ec;AA+EnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMgP,aAAN,CAAoB;EAChB3nC,WAAW,CAACmZ,MAAD,EAAS;IAChB,KAAKyuB,sBAAL,GAA+BhQ,IAAD,IAAU,KAAKiQ,QAAL,GAAgB,KAAKC,aAAL,CAAmBlQ,IAAnB,CAAhB,GAA2C,KAAKmQ,eAAL,CAAqBnQ,IAArB,CAAnF;;IACA,KAAKoQ,oBAAL,GAA6BpQ,IAAD,IAAU,KAAKiQ,QAAL,GAAgB,KAAKE,eAAL,CAAqBnQ,IAArB,CAAhB,GAA6C,KAAKkQ,aAAL,CAAmBlQ,IAAnB,CAAnF;;IACA,KAAKmQ,eAAL,GAAwBnQ,IAAD,IAAU;MAC7B,MAAMqQ,UAAU,GAAG,KAAK1C,MAAL,CAAYvN,OAAZ,CAAoB,KAAKkQ,aAAL,CAAmBtB,YAAnB,EAApB,EAAuDhP,IAAvD,CAAnB;MACA,OAAO,KAAK4O,iBAAL,GAAyByB,UAAU,IAAI,CAAvC,GAA2CA,UAAU,GAAG,CAA/D;IACH,CAHD;;IAIA,KAAKH,aAAL,GAAsBlQ,IAAD,IAAU;MAC3B,MAAMqQ,UAAU,GAAG,KAAK1C,MAAL,CAAYvN,OAAZ,CAAoBJ,IAApB,EAA0B,KAAKsQ,aAAL,CAAmBrB,UAAnB,EAA1B,CAAnB;MACA,OAAO,KAAKH,eAAL,GAAuBuB,UAAU,IAAI,CAArC,GAAyCA,UAAU,GAAG,CAA7D;IACH,CAHD;;IAIA,KAAKC,aAAL,GAAqB,IAAIhC,YAAJ,CAAiB/sB,MAAjB,CAArB;IACA,KAAKosB,MAAL,GAAcpsB,MAAM,CAAC8a,QAAP,EAAd;IACA,KAAKkU,MAAL,GAAchvB,MAAM,CAACivB,QAAP,EAAd;IACA,KAAKP,QAAL,GAAgB,CAAC1uB,MAAM,CAACkvB,cAAP,EAAjB;IACA,KAAK7B,iBAAL,GAAyB,CAACrtB,MAAM,CAACstB,cAAjC;IACA,KAAKC,eAAL,GAAuB,CAACvtB,MAAM,CAACwtB,aAA/B;EACH;;EACDtJ,WAAW,CAACl/B,IAAD,EAAOzC,GAAP,EAAY8pC,QAAZ,EAAsBC,YAAtB,EAAoCC,MAApC,EAA4CC,oBAA5C,EAAkE;IACzE,IAAI,CAAC,KAAKuC,aAAL,CAAmBpB,OAAnB,CAA2B,IAAInP,SAAJ,CAAcj8B,GAAd,EAAmB8pC,QAAnB,CAA3B,CAAL,EAA+D;MAC3DA,QAAQ,GAAGxD,YAAY,CAACpI,UAAxB;IACH;;IACD,IAAIz7B,IAAI,CAAC2+B,iBAAL,CAAuBphC,GAAvB,EAA4B2iC,MAA5B,CAAmCmH,QAAnC,CAAJ,EAAkD;MAC9C;MACA,OAAOrnC,IAAP;IACH,CAHD,MAIK,IAAIA,IAAI,CAACmJ,WAAL,KAAqB,KAAK6gC,MAA9B,EAAsC;MACvC,OAAO,KAAKD,aAAL,CACFjC,gBADE,GAEF5I,WAFE,CAEUl/B,IAFV,EAEgBzC,GAFhB,EAEqB8pC,QAFrB,EAE+BC,YAF/B,EAE6CC,MAF7C,EAEqDC,oBAFrD,CAAP;IAGH,CAJI,MAKA;MACD,OAAO,KAAK2C,qBAAL,CAA2BnqC,IAA3B,EAAiCzC,GAAjC,EAAsC8pC,QAAtC,EAAgDE,MAAhD,EAAwDC,oBAAxD,CAAP;IACH;EACJ;;EACDG,cAAc,CAACV,OAAD,EAAUW,OAAV,EAAmBJ,oBAAnB,EAAyC;IACnD,IAAIsB,QAAJ;;IACA,IAAIlB,OAAO,CAACzJ,UAAR,MAAwByJ,OAAO,CAACr4B,OAAR,EAA5B,EAA+C;MAC3C;MACAu5B,QAAQ,GAAGjF,YAAY,CAACpI,UAAb,CAAwBuE,SAAxB,CAAkC,KAAKoH,MAAvC,CAAX;IACH,CAHD,MAIK;MACD,IAAI,KAAK4C,MAAL,GAAc,CAAd,GAAkBpC,OAAO,CAACz+B,WAAR,EAAlB,IACAy+B,OAAO,CAAC3H,SAAR,CAAkB,KAAKmH,MAAvB,CADJ,EACoC;QAChC;QACA0B,QAAQ,GAAGjF,YAAY,CAACpI,UAAb,CAAwBuE,SAAxB,CAAkC,KAAKoH,MAAvC,CAAX,CAFgC,CAGhC;;QACA,IAAIrC,QAAJ;;QACA,IAAI,KAAK2E,QAAT,EAAmB;UACf3E,QAAQ,GAAG6C,OAAO,CAAClK,sBAAR,CAA+B,KAAKqM,aAAL,CAAmBrB,UAAnB,EAA/B,EAAgE,KAAKtB,MAArE,CAAX;QACH,CAFD,MAGK;UACDrC,QAAQ,GAAG6C,OAAO,CAACnK,eAAR,CAAwB,KAAKsM,aAAL,CAAmBtB,YAAnB,EAAxB,EAA2D,KAAKrB,MAAhE,CAAX;QACH;;QACD,IAAIzL,KAAK,GAAG,CAAZ;;QACA,OAAOoJ,QAAQ,CAAC5J,OAAT,MAAsBQ,KAAK,GAAG,KAAKqO,MAA1C,EAAkD;UAC9C,MAAMjtC,IAAI,GAAGgoC,QAAQ,CAAC7J,OAAT,EAAb;;UACA,IAAI,CAAC,KAAKuO,sBAAL,CAA4B1sC,IAA5B,CAAL,EAAwC;YACpC;YACA;UACH,CAHD,MAIK,IAAI,CAAC,KAAK8sC,oBAAL,CAA0B9sC,IAA1B,CAAL,EAAsC;YACvC;YACA;UACH,CAHI,MAIA;YACD+rC,QAAQ,GAAGA,QAAQ,CAAC9J,oBAAT,CAA8BjiC,IAAI,CAAC+E,IAAnC,EAAyC/E,IAAI,CAAC08B,IAA9C,CAAX;YACAkC,KAAK;UACR;QACJ;MACJ,CA5BD,MA6BK;QACD;QACAmN,QAAQ,GAAGlB,OAAO,CAAC5H,SAAR,CAAkB,KAAKoH,MAAvB,CAAX,CAFC,CAGD;;QACA0B,QAAQ,GAAGA,QAAQ,CAACrK,cAAT,CAAwBoF,YAAY,CAACpI,UAArC,CAAX;QACA,IAAIsJ,QAAJ;;QACA,IAAI,KAAK2E,QAAT,EAAmB;UACf3E,QAAQ,GAAG+D,QAAQ,CAACnL,kBAAT,CAA4B,KAAKyJ,MAAjC,CAAX;QACH,CAFD,MAGK;UACDrC,QAAQ,GAAG+D,QAAQ,CAACvL,WAAT,CAAqB,KAAK6J,MAA1B,CAAX;QACH;;QACD,IAAIzL,KAAK,GAAG,CAAZ;;QACA,OAAOoJ,QAAQ,CAAC5J,OAAT,EAAP,EAA2B;UACvB,MAAMp+B,IAAI,GAAGgoC,QAAQ,CAAC7J,OAAT,EAAb;UACA,MAAMkP,OAAO,GAAGzO,KAAK,GAAG,KAAKqO,MAAb,IACZ,KAAKP,sBAAL,CAA4B1sC,IAA5B,CADY,IAEZ,KAAK8sC,oBAAL,CAA0B9sC,IAA1B,CAFJ;;UAGA,IAAIqtC,OAAJ,EAAa;YACTzO,KAAK;UACR,CAFD,MAGK;YACDmN,QAAQ,GAAGA,QAAQ,CAAC9J,oBAAT,CAA8BjiC,IAAI,CAAC+E,IAAnC,EAAyC+hC,YAAY,CAACpI,UAAtD,CAAX;UACH;QACJ;MACJ;IACJ;;IACD,OAAO,KAAKsO,aAAL,CACFjC,gBADE,GAEFH,cAFE,CAEaV,OAFb,EAEsB6B,QAFtB,EAEgCtB,oBAFhC,CAAP;EAGH;;EACD/I,cAAc,CAACwI,OAAD,EAAUt7B,WAAV,EAAuB;IACjC;IACA,OAAOs7B,OAAP;EACH;;EACDY,YAAY,GAAG;IACX,OAAO,IAAP;EACH;;EACDC,gBAAgB,GAAG;IACf,OAAO,KAAKiC,aAAL,CAAmBjC,gBAAnB,EAAP;EACH;;EACDhS,QAAQ,GAAG;IACP,OAAO,KAAKsR,MAAZ;EACH;;EACD+C,qBAAqB,CAACnqC,IAAD,EAAOqqC,QAAP,EAAiBC,SAAjB,EAA4B/C,MAA5B,EAAoCgD,iBAApC,EAAuD;IACxE;IACA,IAAIna,GAAJ;;IACA,IAAI,KAAKsZ,QAAT,EAAmB;MACf,MAAMhJ,QAAQ,GAAG,KAAK0G,MAAL,CAAYxN,UAAZ,EAAjB;;MACAxJ,GAAG,GAAG,CAAChvB,CAAD,EAAI0S,CAAJ,KAAU4sB,QAAQ,CAAC5sB,CAAD,EAAI1S,CAAJ,CAAxB;IACH,CAHD,MAIK;MACDgvB,GAAG,GAAG,KAAKgX,MAAL,CAAYxN,UAAZ,EAAN;IACH;;IACD,MAAM4Q,aAAa,GAAGxqC,IAAtB;IACA2O,sDAAM,CAAC67B,aAAa,CAACrhC,WAAd,OAAgC,KAAK6gC,MAAtC,EAA8C,EAA9C,CAAN;IACA,MAAMS,iBAAiB,GAAG,IAAIjR,SAAJ,CAAc6Q,QAAd,EAAwBC,SAAxB,CAA1B;IACA,MAAMI,cAAc,GAAG,KAAKhB,QAAL,GACjBc,aAAa,CAAC9F,aAAd,CAA4B,KAAK0C,MAAjC,CADiB,GAEjBoD,aAAa,CAAC5F,YAAd,CAA2B,KAAKwC,MAAhC,CAFN;IAGA,MAAMgD,OAAO,GAAG,KAAKL,aAAL,CAAmBpB,OAAnB,CAA2B8B,iBAA3B,CAAhB;;IACA,IAAID,aAAa,CAACzhC,QAAd,CAAuBshC,QAAvB,CAAJ,EAAsC;MAClC,MAAMM,YAAY,GAAGH,aAAa,CAAC7L,iBAAd,CAAgC0L,QAAhC,CAArB;MACA,IAAIO,SAAS,GAAGrD,MAAM,CAACsD,kBAAP,CAA0B,KAAKzD,MAA/B,EAAuCsD,cAAvC,EAAuD,KAAKhB,QAA5D,CAAhB;;MACA,OAAOkB,SAAS,IAAI,IAAb,KACFA,SAAS,CAAC9oC,IAAV,KAAmBuoC,QAAnB,IAA+BG,aAAa,CAACzhC,QAAd,CAAuB6hC,SAAS,CAAC9oC,IAAjC,CAD7B,CAAP,EAC6E;QACzE;QACA;QACA;QACA8oC,SAAS,GAAGrD,MAAM,CAACsD,kBAAP,CAA0B,KAAKzD,MAA/B,EAAuCwD,SAAvC,EAAkD,KAAKlB,QAAvD,CAAZ;MACH;;MACD,MAAMoB,WAAW,GAAGF,SAAS,IAAI,IAAb,GAAoB,CAApB,GAAwBxa,GAAG,CAACwa,SAAD,EAAYH,iBAAZ,CAA/C;MACA,MAAMM,eAAe,GAAGX,OAAO,IAAI,CAACE,SAAS,CAAC/6B,OAAV,EAAZ,IAAmCu7B,WAAW,IAAI,CAA1E;;MACA,IAAIC,eAAJ,EAAqB;QACjB,IAAIR,iBAAiB,IAAI,IAAzB,EAA+B;UAC3BA,iBAAiB,CAAC7C,gBAAlB,CAAmCV,kBAAkB,CAACqD,QAAD,EAAWC,SAAX,EAAsBK,YAAtB,CAArD;QACH;;QACD,OAAOH,aAAa,CAACxL,oBAAd,CAAmCqL,QAAnC,EAA6CC,SAA7C,CAAP;MACH,CALD,MAMK;QACD,IAAIC,iBAAiB,IAAI,IAAzB,EAA+B;UAC3BA,iBAAiB,CAAC7C,gBAAlB,CAAmCX,kBAAkB,CAACsD,QAAD,EAAWM,YAAX,CAArD;QACH;;QACD,MAAMK,aAAa,GAAGR,aAAa,CAACxL,oBAAd,CAAmCqL,QAAnC,EAA6CxG,YAAY,CAACpI,UAA1D,CAAtB;QACA,MAAMwP,gBAAgB,GAAGL,SAAS,IAAI,IAAb,IAAqB,KAAKb,aAAL,CAAmBpB,OAAnB,CAA2BiC,SAA3B,CAA9C;;QACA,IAAIK,gBAAJ,EAAsB;UAClB,IAAIV,iBAAiB,IAAI,IAAzB,EAA+B;YAC3BA,iBAAiB,CAAC7C,gBAAlB,CAAmCZ,gBAAgB,CAAC8D,SAAS,CAAC9oC,IAAX,EAAiB8oC,SAAS,CAACnR,IAA3B,CAAnD;UACH;;UACD,OAAOuR,aAAa,CAAChM,oBAAd,CAAmC4L,SAAS,CAAC9oC,IAA7C,EAAmD8oC,SAAS,CAACnR,IAA7D,CAAP;QACH,CALD,MAMK;UACD,OAAOuR,aAAP;QACH;MACJ;IACJ,CAlCD,MAmCK,IAAIV,SAAS,CAAC/6B,OAAV,EAAJ,EAAyB;MAC1B;MACA,OAAOvP,IAAP;IACH,CAHI,MAIA,IAAIoqC,OAAJ,EAAa;MACd,IAAIha,GAAG,CAACsa,cAAD,EAAiBD,iBAAjB,CAAH,IAA0C,CAA9C,EAAiD;QAC7C,IAAIF,iBAAiB,IAAI,IAAzB,EAA+B;UAC3BA,iBAAiB,CAAC7C,gBAAlB,CAAmCX,kBAAkB,CAAC2D,cAAc,CAAC5oC,IAAhB,EAAsB4oC,cAAc,CAACjR,IAArC,CAArD;UACA8Q,iBAAiB,CAAC7C,gBAAlB,CAAmCZ,gBAAgB,CAACuD,QAAD,EAAWC,SAAX,CAAnD;QACH;;QACD,OAAOE,aAAa,CACfxL,oBADE,CACmBqL,QADnB,EAC6BC,SAD7B,EAEFtL,oBAFE,CAEmB0L,cAAc,CAAC5oC,IAFlC,EAEwC+hC,YAAY,CAACpI,UAFrD,CAAP;MAGH,CARD,MASK;QACD,OAAOz7B,IAAP;MACH;IACJ,CAbI,MAcA;MACD,OAAOA,IAAP;IACH;EACJ;;AA7Le;AAgMpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMkrC,WAAN,CAAkB;EACdrpC,WAAW,GAAG;IACV,KAAKspC,SAAL,GAAiB,KAAjB;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,aAAL,GAAqB,KAArB;IACA,KAAK/C,cAAL,GAAsB,KAAtB,CAJU,CAImB;;IAC7B,KAAKgD,OAAL,GAAe,KAAf;IACA,KAAKC,WAAL,GAAmB,KAAnB;IACA,KAAK/C,aAAL,GAAqB,KAArB,CAPU,CAOkB;;IAC5B,KAAKwB,MAAL,GAAc,CAAd;IACA,KAAKwB,SAAL,GAAiB,EAAjB;IACA,KAAKC,gBAAL,GAAwB,IAAxB;IACA,KAAKC,eAAL,GAAuB,EAAvB;IACA,KAAKC,cAAL,GAAsB,IAAtB;IACA,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKxE,MAAL,GAAczG,cAAd;EACH;;EACDqI,QAAQ,GAAG;IACP,OAAO,KAAKoC,SAAZ;EACH;EACD;AACJ;AACA;;;EACIlB,cAAc,GAAG;IACb,IAAI,KAAKsB,SAAL,KAAmB,EAAvB,EAA2B;MACvB;MACA;MACA;MACA;MACA,OAAO,KAAKJ,SAAZ;IACH,CAND,MAOK;MACD,OAAO,KAAKI,SAAL,KAAmB;MAAI;MAA9B;IACH;EACJ;EACD;AACJ;AACA;;;EACIrC,kBAAkB,GAAG;IACjBx6B,sDAAM,CAAC,KAAKy8B,SAAN,EAAiB,kCAAjB,CAAN;IACA,OAAO,KAAKK,gBAAZ;EACH;EACD;AACJ;AACA;AACA;;;EACIvC,iBAAiB,GAAG;IAChBv6B,sDAAM,CAAC,KAAKy8B,SAAN,EAAiB,kCAAjB,CAAN;;IACA,IAAI,KAAKC,aAAT,EAAwB;MACpB,OAAO,KAAKK,eAAZ;IACH,CAFD,MAGK;MACD,OAAO/3B,QAAP;IACH;EACJ;;EACDy1B,MAAM,GAAG;IACL,OAAO,KAAKkC,OAAZ;EACH;EACD;AACJ;AACA;;;EACI/B,gBAAgB,GAAG;IACf56B,sDAAM,CAAC,KAAK28B,OAAN,EAAe,gCAAf,CAAN;IACA,OAAO,KAAKK,cAAZ;EACH;EACD;AACJ;AACA;AACA;;;EACIrC,eAAe,GAAG;IACd36B,sDAAM,CAAC,KAAK28B,OAAN,EAAe,gCAAf,CAAN;;IACA,IAAI,KAAKC,WAAT,EAAsB;MAClB,OAAO,KAAKK,aAAZ;IACH,CAFD,MAGK;MACD,OAAOh4B,QAAP;IACH;EACJ;;EACDi4B,QAAQ,GAAG;IACP,OAAO,KAAKV,SAAZ;EACH;EACD;AACJ;AACA;;;EACIW,gBAAgB,GAAG;IACf,OAAO,KAAKX,SAAL,IAAkB,KAAKK,SAAL,KAAmB,EAA5C;EACH;EACD;AACJ;AACA;;;EACIvB,QAAQ,GAAG;IACPt7B,sDAAM,CAAC,KAAKw8B,SAAN,EAAiB,kCAAjB,CAAN;IACA,OAAO,KAAKnB,MAAZ;EACH;;EACDlU,QAAQ,GAAG;IACP,OAAO,KAAKsR,MAAZ;EACH;;EACDjS,YAAY,GAAG;IACX,OAAO,EAAE,KAAKiW,SAAL,IAAkB,KAAKE,OAAvB,IAAkC,KAAKH,SAAzC,CAAP;EACH;;EACDjW,SAAS,GAAG;IACR,OAAO,KAAKC,YAAL,MAAuB,KAAKiS,MAAL,KAAgBzG,cAA9C;EACH;;EACDjF,IAAI,GAAG;IACH,MAAMA,IAAI,GAAG,IAAIwP,WAAJ,EAAb;IACAxP,IAAI,CAACyP,SAAL,GAAiB,KAAKA,SAAtB;IACAzP,IAAI,CAACsO,MAAL,GAAc,KAAKA,MAAnB;IACAtO,IAAI,CAAC0P,SAAL,GAAiB,KAAKA,SAAtB;IACA1P,IAAI,CAAC4M,cAAL,GAAsB,KAAKA,cAA3B;IACA5M,IAAI,CAAC+P,gBAAL,GAAwB,KAAKA,gBAA7B;IACA/P,IAAI,CAAC2P,aAAL,GAAqB,KAAKA,aAA1B;IACA3P,IAAI,CAACgQ,eAAL,GAAuB,KAAKA,eAA5B;IACAhQ,IAAI,CAAC4P,OAAL,GAAe,KAAKA,OAApB;IACA5P,IAAI,CAAC8M,aAAL,GAAqB,KAAKA,aAA1B;IACA9M,IAAI,CAACiQ,cAAL,GAAsB,KAAKA,cAA3B;IACAjQ,IAAI,CAAC6P,WAAL,GAAmB,KAAKA,WAAxB;IACA7P,IAAI,CAACkQ,aAAL,GAAqB,KAAKA,aAA1B;IACAlQ,IAAI,CAAC0L,MAAL,GAAc,KAAKA,MAAnB;IACA1L,IAAI,CAAC8P,SAAL,GAAiB,KAAKA,SAAtB;IACA,OAAO9P,IAAP;EACH;;AAxHa;;AA0HlB,SAASqQ,wBAAT,CAAkCC,WAAlC,EAA+C;EAC3C,IAAIA,WAAW,CAAC7W,YAAZ,EAAJ,EAAgC;IAC5B,OAAO,IAAIgS,aAAJ,CAAkB6E,WAAW,CAAClW,QAAZ,EAAlB,CAAP;EACH,CAFD,MAGK,IAAIkW,WAAW,CAACH,QAAZ,EAAJ,EAA4B;IAC7B,OAAO,IAAIrC,aAAJ,CAAkBwC,WAAlB,CAAP;EACH,CAFI,MAGA;IACD,OAAO,IAAIjE,YAAJ,CAAiBiE,WAAjB,CAAP;EACH;AACJ;;AACD,SAASC,uBAAT,CAAiCD,WAAjC,EAA8CE,QAA9C,EAAwD;EACpD,MAAMC,SAAS,GAAGH,WAAW,CAACtQ,IAAZ,EAAlB;EACAyQ,SAAS,CAAChB,SAAV,GAAsB,IAAtB;EACAgB,SAAS,CAACnC,MAAV,GAAmBkC,QAAnB;EACAC,SAAS,CAACX,SAAV,GAAsB;EAAI;EAA1B;EACA,OAAOW,SAAP;AACH;;AACD,SAASC,sBAAT,CAAgCJ,WAAhC,EAA6CE,QAA7C,EAAuD;EACnD,MAAMC,SAAS,GAAGH,WAAW,CAACtQ,IAAZ,EAAlB;EACAyQ,SAAS,CAAChB,SAAV,GAAsB,IAAtB;EACAgB,SAAS,CAACnC,MAAV,GAAmBkC,QAAnB;EACAC,SAAS,CAACX,SAAV,GAAsB;EAAI;EAA1B;EACA,OAAOW,SAAP;AACH;;AACD,SAASE,kBAAT,CAA4BL,WAA5B,EAAyCtR,UAAzC,EAAqDn9B,GAArD,EAA0D;EACtD,MAAM4uC,SAAS,GAAGH,WAAW,CAACtQ,IAAZ,EAAlB;EACAyQ,SAAS,CAACf,SAAV,GAAsB,IAAtB;;EACA,IAAI1Q,UAAU,KAAKl/B,SAAnB,EAA8B;IAC1Bk/B,UAAU,GAAG,IAAb;EACH;;EACDyR,SAAS,CAACV,gBAAV,GAA6B/Q,UAA7B;;EACA,IAAIn9B,GAAG,IAAI,IAAX,EAAiB;IACb4uC,SAAS,CAACd,aAAV,GAA0B,IAA1B;IACAc,SAAS,CAACT,eAAV,GAA4BnuC,GAA5B;EACH,CAHD,MAIK;IACD4uC,SAAS,CAACd,aAAV,GAA0B,KAA1B;IACAc,SAAS,CAACT,eAAV,GAA4B,EAA5B;EACH;;EACD,OAAOS,SAAP;AACH;;AACD,SAASG,qBAAT,CAA+BN,WAA/B,EAA4CtR,UAA5C,EAAwDn9B,GAAxD,EAA6D;EACzD,IAAIyd,MAAJ;;EACA,IAAIgxB,WAAW,CAAC5E,MAAZ,KAAuBzM,SAAvB,IAAoC,CAAC,CAACp9B,GAA1C,EAA+C;IAC3Cyd,MAAM,GAAGqxB,kBAAkB,CAACL,WAAD,EAActR,UAAd,EAA0Bn9B,GAA1B,CAA3B;EACH,CAFD,MAGK;IACDyd,MAAM,GAAGqxB,kBAAkB,CAACL,WAAD,EAActR,UAAd,EAA0B9mB,QAA1B,CAA3B;EACH;;EACDoH,MAAM,CAACstB,cAAP,GAAwB,IAAxB;EACA,OAAOttB,MAAP;AACH;;AACD,SAASuxB,gBAAT,CAA0BP,WAA1B,EAAuCtR,UAAvC,EAAmDn9B,GAAnD,EAAwD;EACpD,MAAM4uC,SAAS,GAAGH,WAAW,CAACtQ,IAAZ,EAAlB;EACAyQ,SAAS,CAACb,OAAV,GAAoB,IAApB;;EACA,IAAI5Q,UAAU,KAAKl/B,SAAnB,EAA8B;IAC1Bk/B,UAAU,GAAG,IAAb;EACH;;EACDyR,SAAS,CAACR,cAAV,GAA2BjR,UAA3B;;EACA,IAAIn9B,GAAG,KAAK/B,SAAZ,EAAuB;IACnB2wC,SAAS,CAACZ,WAAV,GAAwB,IAAxB;IACAY,SAAS,CAACP,aAAV,GAA0BruC,GAA1B;EACH,CAHD,MAIK;IACD4uC,SAAS,CAACZ,WAAV,GAAwB,KAAxB;IACAY,SAAS,CAACP,aAAV,GAA0B,EAA1B;EACH;;EACD,OAAOO,SAAP;AACH;;AACD,SAASK,oBAAT,CAA8BR,WAA9B,EAA2CtR,UAA3C,EAAuDn9B,GAAvD,EAA4D;EACxD,IAAIyd,MAAJ;;EACA,IAAIgxB,WAAW,CAAC5E,MAAZ,KAAuBzM,SAAvB,IAAoC,CAAC,CAACp9B,GAA1C,EAA+C;IAC3Cyd,MAAM,GAAGuxB,gBAAgB,CAACP,WAAD,EAActR,UAAd,EAA0Bn9B,GAA1B,CAAzB;EACH,CAFD,MAGK;IACDyd,MAAM,GAAGuxB,gBAAgB,CAACP,WAAD,EAActR,UAAd,EAA0B/mB,QAA1B,CAAzB;EACH;;EACDqH,MAAM,CAACwtB,aAAP,GAAuB,IAAvB;EACA,OAAOxtB,MAAP;AACH;;AACD,SAASyxB,kBAAT,CAA4BT,WAA5B,EAAyCvX,KAAzC,EAAgD;EAC5C,MAAM0X,SAAS,GAAGH,WAAW,CAACtQ,IAAZ,EAAlB;EACAyQ,SAAS,CAAC/E,MAAV,GAAmB3S,KAAnB;EACA,OAAO0X,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASO,sCAAT,CAAgDV,WAAhD,EAA6D;EACzD,MAAMW,EAAE,GAAG,EAAX;;EACA,IAAIX,WAAW,CAAC9W,SAAZ,EAAJ,EAA6B;IACzB,OAAOyX,EAAP;EACH;;EACD,IAAIC,OAAJ;;EACA,IAAIZ,WAAW,CAAC5E,MAAZ,KAAuBzG,cAA3B,EAA2C;IACvCiM,OAAO,GAAG;IAAY;IAAtB;EACH,CAFD,MAGK,IAAIZ,WAAW,CAAC5E,MAAZ,KAAuBT,WAA3B,EAAwC;IACzCiG,OAAO,GAAG;IAAS;IAAnB;EACH,CAFI,MAGA,IAAIZ,WAAW,CAAC5E,MAAZ,KAAuBzM,SAA3B,EAAsC;IACvCiS,OAAO,GAAG;IAAO;IAAjB;EACH,CAFI,MAGA;IACDj+B,sDAAM,CAACq9B,WAAW,CAAC5E,MAAZ,YAA8BhB,SAA/B,EAA0C,0BAA1C,CAAN;IACAwG,OAAO,GAAGZ,WAAW,CAAC5E,MAAZ,CAAmBv8B,QAAnB,EAAV;EACH;;EACD8hC,EAAE,CAAC;EAAU;EAAX,CAAF,GAAoDn+B,yDAAS,CAACo+B,OAAD,CAA7D;;EACA,IAAIZ,WAAW,CAACZ,SAAhB,EAA2B;IACvB,MAAMyB,UAAU,GAAGb,WAAW,CAAC1D,cAAZ,GACb;IAAa;IADA,EAEb;IAAU;IAFhB;IAGAqE,EAAE,CAACE,UAAD,CAAF,GAAiBr+B,yDAAS,CAACw9B,WAAW,CAACP,gBAAb,CAA1B;;IACA,IAAIO,WAAW,CAACX,aAAhB,EAA+B;MAC3BsB,EAAE,CAACE,UAAD,CAAF,IAAkB,MAAMr+B,yDAAS,CAACw9B,WAAW,CAACN,eAAb,CAAjC;IACH;EACJ;;EACD,IAAIM,WAAW,CAACV,OAAhB,EAAyB;IACrB,MAAMwB,QAAQ,GAAGd,WAAW,CAACxD,aAAZ,GACX;IAAY;IADD,EAEX;IAAQ;IAFd;IAGAmE,EAAE,CAACG,QAAD,CAAF,GAAet+B,yDAAS,CAACw9B,WAAW,CAACL,cAAb,CAAxB;;IACA,IAAIK,WAAW,CAACT,WAAhB,EAA6B;MACzBoB,EAAE,CAACG,QAAD,CAAF,IAAgB,MAAMt+B,yDAAS,CAACw9B,WAAW,CAACJ,aAAb,CAA/B;IACH;EACJ;;EACD,IAAII,WAAW,CAACb,SAAhB,EAA2B;IACvB,IAAIa,WAAW,CAAC9B,cAAZ,EAAJ,EAAkC;MAC9ByC,EAAE,CAAC;MAAe;MAAhB,CAAF,GAA+DX,WAAW,CAAChC,MAA3E;IACH,CAFD,MAGK;MACD2C,EAAE,CAAC;MAAc;MAAf,CAAF,GAA6DX,WAAW,CAAChC,MAAzE;IACH;EACJ;;EACD,OAAO2C,EAAP;AACH;;AACD,SAASI,yBAAT,CAAmCf,WAAnC,EAAgD;EAC5C,MAAMzwC,GAAG,GAAG,EAAZ;;EACA,IAAIywC,WAAW,CAACZ,SAAhB,EAA2B;IACvB7vC,GAAG,CAAC;IAAK;IAAN,CAAH,GACIywC,WAAW,CAACP,gBADhB;;IAEA,IAAIO,WAAW,CAACX,aAAhB,EAA+B;MAC3B9vC,GAAG,CAAC;MAAK;MAAN,CAAH,GACIywC,WAAW,CAACN,eADhB;IAEH;;IACDnwC,GAAG,CAAC;IAAM;IAAP,CAAH,GACI,CAACywC,WAAW,CAAC1D,cADjB;EAEH;;EACD,IAAI0D,WAAW,CAACV,OAAhB,EAAyB;IACrB/vC,GAAG,CAAC;IAAK;IAAN,CAAH,GAA0DywC,WAAW,CAACL,cAAtE;;IACA,IAAIK,WAAW,CAACT,WAAhB,EAA6B;MACzBhwC,GAAG,CAAC;MAAK;MAAN,CAAH,GAAyDywC,WAAW,CAACJ,aAArE;IACH;;IACDrwC,GAAG,CAAC;IAAM;IAAP,CAAH,GACI,CAACywC,WAAW,CAACxD,aADjB;EAEH;;EACD,IAAIwD,WAAW,CAACb,SAAhB,EAA2B;IACvB5vC,GAAG,CAAC;IAAI;IAAL,CAAH,GAA+CywC,WAAW,CAAChC,MAA3D;IACA,IAAIgD,QAAQ,GAAGhB,WAAW,CAACR,SAA3B;;IACA,IAAIwB,QAAQ,KAAK,EAAjB,EAAqB;MACjB,IAAIhB,WAAW,CAAC9B,cAAZ,EAAJ,EAAkC;QAC9B8C,QAAQ,GAAG;QAAI;QAAf;MACH,CAFD,MAGK;QACDA,QAAQ,GAAG;QAAI;QAAf;MACH;IACJ;;IACDzxC,GAAG,CAAC;IAAK;IAAN,CAAH,GAAoDyxC,QAApD;EACH,CAhC2C,CAiC5C;;;EACA,IAAIhB,WAAW,CAAC5E,MAAZ,KAAuBzG,cAA3B,EAA2C;IACvCplC,GAAG,CAAC;IAAI;IAAL,CAAH,GAA+CywC,WAAW,CAAC5E,MAAZ,CAAmBv8B,QAAnB,EAA/C;EACH;;EACD,OAAOtP,GAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM0xC,kBAAN,SAAiCxgB,aAAjC,CAA+C;EAC3C;AACJ;AACA;AACA;EACI5qB,WAAW,CAACinB,SAAD,EAAYmJ,aAAZ,EAA2BG,kBAA3B,EAA+CC,sBAA/C,EAAuE;IAC9E;IACA,KAAKvJ,SAAL,GAAiBA,SAAjB;IACA,KAAKmJ,aAAL,GAAqBA,aAArB;IACA,KAAKG,kBAAL,GAA0BA,kBAA1B;IACA,KAAKC,sBAAL,GAA8BA,sBAA9B;IACA;;IACA,KAAKlU,IAAL,GAAY7L,UAAU,CAAC,SAAD,CAAtB;IACA;AACR;AACA;AACA;;IACQ,KAAK46B,QAAL,GAAgB,EAAhB;EACH;;EACDhgB,WAAW,CAACC,KAAD,EAAQ;IACf,MAAM,IAAI9wB,KAAJ,CAAU,yBAAV,CAAN;EACH;;EACkB,OAAZ8wC,YAAY,CAAChuC,KAAD,EAAQ01B,GAAR,EAAa;IAC5B,IAAIA,GAAG,KAAKr5B,SAAZ,EAAuB;MACnB,OAAO,SAASq5B,GAAhB;IACH,CAFD,MAGK;MACDlmB,sDAAM,CAACxP,KAAK,CAAC81B,YAAN,CAAmBC,SAAnB,EAAD,EAAiC,gDAAjC,CAAN;MACA,OAAO/1B,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EAAP;IACH;EACJ;EACD;;;EACA8pB,MAAM,CAACx1B,KAAD,EAAQy1B,aAAR,EAAuBC,GAAvB,EAA4B9sB,UAA5B,EAAwC;IAC1C,MAAMqD,UAAU,GAAGjM,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EAAnB;;IACA,KAAKsT,IAAL,CAAU,uBAAuB/S,UAAvB,GAAoC,GAApC,GAA0CjM,KAAK,CAAC41B,gBAA1D,EAF0C,CAG1C;;IACA,MAAMqY,QAAQ,GAAGH,kBAAkB,CAACE,YAAnB,CAAgChuC,KAAhC,EAAuC01B,GAAvC,CAAjB;IACA,MAAMwY,UAAU,GAAG,EAAnB;IACA,KAAKH,QAAL,CAAcE,QAAd,IAA0BC,UAA1B;IACA,MAAMC,qBAAqB,GAAGZ,sCAAsC,CAACvtC,KAAK,CAAC81B,YAAP,CAApE;IACA,KAAKsY,YAAL,CAAkBniC,UAAU,GAAG,OAA/B,EAAwCkiC,qBAAxC,EAA+D,CAACpwC,KAAD,EAAQ+K,MAAR,KAAmB;MAC9E,IAAIjJ,IAAI,GAAGiJ,MAAX;;MACA,IAAI/K,KAAK,KAAK,GAAd,EAAmB;QACf8B,IAAI,GAAG,IAAP;QACA9B,KAAK,GAAG,IAAR;MACH;;MACD,IAAIA,KAAK,KAAK,IAAd,EAAoB;QAChB,KAAK+0B,aAAL,CAAmB7mB,UAAnB,EAA+BpM,IAA/B;QAAqC;QAAa,KAAlD,EAAyD61B,GAAzD;MACH;;MACD,IAAIzlB,uDAAO,CAAC,KAAK89B,QAAN,EAAgBE,QAAhB,CAAP,KAAqCC,UAAzC,EAAqD;QACjD,IAAI7X,MAAJ;;QACA,IAAI,CAACt4B,KAAL,EAAY;UACRs4B,MAAM,GAAG,IAAT;QACH,CAFD,MAGK,IAAIt4B,KAAK,KAAK,GAAd,EAAmB;UACpBs4B,MAAM,GAAG,mBAAT;QACH,CAFI,MAGA;UACDA,MAAM,GAAG,gBAAgBt4B,KAAzB;QACH;;QACD6K,UAAU,CAACytB,MAAD,EAAS,IAAT,CAAV;MACH;IACJ,CAtBD;EAuBH;EACD;;;EACAmB,QAAQ,CAACx3B,KAAD,EAAQ01B,GAAR,EAAa;IACjB,MAAMuY,QAAQ,GAAGH,kBAAkB,CAACE,YAAnB,CAAgChuC,KAAhC,EAAuC01B,GAAvC,CAAjB;IACA,OAAO,KAAKqY,QAAL,CAAcE,QAAd,CAAP;EACH;;EACDzoC,GAAG,CAACxF,KAAD,EAAQ;IACP,MAAMmuC,qBAAqB,GAAGZ,sCAAsC,CAACvtC,KAAK,CAAC81B,YAAP,CAApE;;IACA,MAAM7pB,UAAU,GAAGjM,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,EAAnB;;IACA,MAAMN,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;IACA,KAAKwmC,YAAL,CAAkBniC,UAAU,GAAG,OAA/B,EAAwCkiC,qBAAxC,EAA+D,CAACpwC,KAAD,EAAQ+K,MAAR,KAAmB;MAC9E,IAAIjJ,IAAI,GAAGiJ,MAAX;;MACA,IAAI/K,KAAK,KAAK,GAAd,EAAmB;QACf8B,IAAI,GAAG,IAAP;QACA9B,KAAK,GAAG,IAAR;MACH;;MACD,IAAIA,KAAK,KAAK,IAAd,EAAoB;QAChB,KAAK+0B,aAAL,CAAmB7mB,UAAnB,EAA+BpM,IAA/B;QACA;QAAa,KADb;QAEA;QAAS,IAFT;QAGAuL,QAAQ,CAACC,OAAT,CAAiBxL,IAAjB;MACH,CALD,MAMK;QACDuL,QAAQ,CAACE,MAAT,CAAgB,IAAIpO,KAAJ,CAAU2C,IAAV,CAAhB;MACH;IACJ,CAfD;IAgBA,OAAOuL,QAAQ,CAACI,OAAhB;EACH;EACD;;;EACAiiB,gBAAgB,CAACC,KAAD,EAAQ,CACpB;EACH;EACD;AACJ;AACA;AACA;;;EACI0gB,YAAY,CAACniC,UAAD,EAAakiC,qBAAqB,GAAG,EAArC,EAAyC9jC,QAAzC,EAAmD;IAC3D8jC,qBAAqB,CAAC,QAAD,CAArB,GAAkC,QAAlC;IACA,OAAOl1B,OAAO,CAACygB,GAAR,CAAY,CACf,KAAKzG,kBAAL,CAAwBla,QAAxB;IAAiC;IAAkB,KAAnD,CADe,EAEf,KAAKma,sBAAL,CAA4Bna,QAA5B;IAAqC;IAAkB,KAAvD,CAFe,CAAZ,EAGJhQ,IAHI,CAGC,CAAC,CAAC2V,SAAD,EAAYD,aAAZ,CAAD,KAAgC;MACpC,IAAIC,SAAS,IAAIA,SAAS,CAAC1E,WAA3B,EAAwC;QACpCm0B,qBAAqB,CAAC,MAAD,CAArB,GAAgCzvB,SAAS,CAAC1E,WAA1C;MACH;;MACD,IAAIyE,aAAa,IAAIA,aAAa,CAACiP,KAAnC,EAA0C;QACtCygB,qBAAqB,CAAC,IAAD,CAArB,GAA8B1vB,aAAa,CAACiP,KAA5C;MACH;;MACD,MAAMlgB,GAAG,GAAG,CAAC,KAAKmc,SAAL,CAAe7O,MAAf,GAAwB,UAAxB,GAAqC,SAAtC,IACR,KAAK6O,SAAL,CAAetc,IADP,GAERpB,UAFQ,GAGR,GAHQ,GAIR,KAJQ,GAKR,KAAK0d,SAAL,CAAe5b,SALP,GAMRwC,2DAAW,CAAC49B,qBAAD,CANf;MAOA,KAAKnvB,IAAL,CAAU,8BAA8BxR,GAAxC;MACA,MAAM6gC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;;MACAD,GAAG,CAACtpB,kBAAJ,GAAyB,MAAM;QAC3B,IAAI1a,QAAQ,IAAIgkC,GAAG,CAACt6B,UAAJ,KAAmB,CAAnC,EAAsC;UAClC,KAAKiL,IAAL,CAAU,uBAAuBxR,GAAvB,GAA6B,oBAAvC,EAA6D6gC,GAAG,CAAChY,MAAjE,EAAyE,WAAzE,EAAsFgY,GAAG,CAACE,YAA1F;UACA,IAAIlX,GAAG,GAAG,IAAV;;UACA,IAAIgX,GAAG,CAAChY,MAAJ,IAAc,GAAd,IAAqBgY,GAAG,CAAChY,MAAJ,GAAa,GAAtC,EAA2C;YACvC,IAAI;cACAgB,GAAG,GAAG/nB,wDAAQ,CAAC++B,GAAG,CAACE,YAAL,CAAd;YACH,CAFD,CAGA,OAAO38B,CAAP,EAAU;cACN5J,IAAI,CAAC,uCACDwF,GADC,GAED,IAFC,GAGD6gC,GAAG,CAACE,YAHJ,CAAJ;YAIH;;YACDlkC,QAAQ,CAAC,IAAD,EAAOgtB,GAAP,CAAR;UACH,CAXD,MAYK;YACD;YACA,IAAIgX,GAAG,CAAChY,MAAJ,KAAe,GAAf,IAAsBgY,GAAG,CAAChY,MAAJ,KAAe,GAAzC,EAA8C;cAC1CruB,IAAI,CAAC,wCACDwF,GADC,GAED,WAFC,GAGD6gC,GAAG,CAAChY,MAHJ,CAAJ;YAIH;;YACDhsB,QAAQ,CAACgkC,GAAG,CAAChY,MAAL,CAAR;UACH;;UACDhsB,QAAQ,GAAG,IAAX;QACH;MACJ,CA5BD;;MA6BAgkC,GAAG,CAAClvB,IAAJ,CAAS,KAAT,EAAgB3R,GAAhB;MAAqB;MAAkB,IAAvC;MACA6gC,GAAG,CAAC1sB,IAAJ;IACH,CAlDM,CAAP;EAmDH;;AAxJ0C;AA2J/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAM6sB,cAAN,CAAqB;EACjB9rC,WAAW,GAAG;IACV,KAAK+rC,SAAL,GAAiB/J,YAAY,CAACpI,UAA9B;EACH;;EACDoS,OAAO,CAAChlC,IAAD,EAAO;IACV,OAAO,KAAK+kC,SAAL,CAAe/O,QAAf,CAAwBh2B,IAAxB,CAAP;EACH;;EACDilC,cAAc,CAACjlC,IAAD,EAAOklC,eAAP,EAAwB;IAClC,KAAKH,SAAL,GAAiB,KAAKA,SAAL,CAAe1O,WAAf,CAA2Br2B,IAA3B,EAAiCklC,eAAjC,CAAjB;EACH;;AATgB;AAYrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,qBAAT,GAAiC;EAC7B,OAAO;IACH7yC,KAAK,EAAE,IADJ;IAEH2qC,QAAQ,EAAE,IAAIpT,GAAJ;EAFP,CAAP;AAIH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASub,0BAAT,CAAoCC,kBAApC,EAAwDrlC,IAAxD,EAA8D7J,IAA9D,EAAoE;EAChE,IAAIywB,WAAW,CAAC5mB,IAAD,CAAf,EAAuB;IACnBqlC,kBAAkB,CAAC/yC,KAAnB,GAA2B6D,IAA3B;IACAkvC,kBAAkB,CAACpI,QAAnB,CAA4BqI,KAA5B;EACH,CAHD,MAIK,IAAID,kBAAkB,CAAC/yC,KAAnB,KAA6B,IAAjC,EAAuC;IACxC+yC,kBAAkB,CAAC/yC,KAAnB,GAA2B+yC,kBAAkB,CAAC/yC,KAAnB,CAAyB+jC,WAAzB,CAAqCr2B,IAArC,EAA2C7J,IAA3C,CAA3B;EACH,CAFI,MAGA;IACD,MAAMqrC,QAAQ,GAAGzb,YAAY,CAAC/lB,IAAD,CAA7B;;IACA,IAAI,CAACqlC,kBAAkB,CAACpI,QAAnB,CAA4B9Q,GAA5B,CAAgCqV,QAAhC,CAAL,EAAgD;MAC5C6D,kBAAkB,CAACpI,QAAnB,CAA4BpqC,GAA5B,CAAgC2uC,QAAhC,EAA0C2D,qBAAqB,EAA/D;IACH;;IACD,MAAMtuC,KAAK,GAAGwuC,kBAAkB,CAACpI,QAAnB,CAA4BnhC,GAA5B,CAAgC0lC,QAAhC,CAAd;IACAxhC,IAAI,GAAGimB,YAAY,CAACjmB,IAAD,CAAnB;IACAolC,0BAA0B,CAACvuC,KAAD,EAAQmJ,IAAR,EAAc7J,IAAd,CAA1B;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASovC,wBAAT,CAAkCF,kBAAlC,EAAsDrlC,IAAtD,EAA4D;EACxD,IAAI4mB,WAAW,CAAC5mB,IAAD,CAAf,EAAuB;IACnBqlC,kBAAkB,CAAC/yC,KAAnB,GAA2B,IAA3B;IACA+yC,kBAAkB,CAACpI,QAAnB,CAA4BqI,KAA5B;IACA,OAAO,IAAP;EACH,CAJD,MAKK;IACD,IAAID,kBAAkB,CAAC/yC,KAAnB,KAA6B,IAAjC,EAAuC;MACnC,IAAI+yC,kBAAkB,CAAC/yC,KAAnB,CAAyBgjC,UAAzB,EAAJ,EAA2C;QACvC;QACA,OAAO,KAAP;MACH,CAHD,MAIK;QACD,MAAMhjC,KAAK,GAAG+yC,kBAAkB,CAAC/yC,KAAjC;QACA+yC,kBAAkB,CAAC/yC,KAAnB,GAA2B,IAA3B;QACAA,KAAK,CAACikC,YAAN,CAAmBuB,cAAnB,EAAmC,CAACpjC,GAAD,EAAM8wC,IAAN,KAAe;UAC9CJ,0BAA0B,CAACC,kBAAD,EAAqB,IAAI9f,IAAJ,CAAS7wB,GAAT,CAArB,EAAoC8wC,IAApC,CAA1B;QACH,CAFD;QAGA,OAAOD,wBAAwB,CAACF,kBAAD,EAAqBrlC,IAArB,CAA/B;MACH;IACJ,CAbD,MAcK,IAAIqlC,kBAAkB,CAACpI,QAAnB,CAA4B18B,IAA5B,GAAmC,CAAvC,EAA0C;MAC3C,MAAMihC,QAAQ,GAAGzb,YAAY,CAAC/lB,IAAD,CAA7B;MACAA,IAAI,GAAGimB,YAAY,CAACjmB,IAAD,CAAnB;;MACA,IAAIqlC,kBAAkB,CAACpI,QAAnB,CAA4B9Q,GAA5B,CAAgCqV,QAAhC,CAAJ,EAA+C;QAC3C,MAAMiE,YAAY,GAAGF,wBAAwB,CAACF,kBAAkB,CAACpI,QAAnB,CAA4BnhC,GAA5B,CAAgC0lC,QAAhC,CAAD,EAA4CxhC,IAA5C,CAA7C;;QACA,IAAIylC,YAAJ,EAAkB;UACdJ,kBAAkB,CAACpI,QAAnB,CAA4Bx5B,MAA5B,CAAmC+9B,QAAnC;QACH;MACJ;;MACD,OAAO6D,kBAAkB,CAACpI,QAAnB,CAA4B18B,IAA5B,KAAqC,CAA5C;IACH,CAVI,MAWA;MACD,OAAO,IAAP;IACH;EACJ;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmlC,6BAAT,CAAuCL,kBAAvC,EAA2DM,UAA3D,EAAuEC,IAAvE,EAA6E;EACzE,IAAIP,kBAAkB,CAAC/yC,KAAnB,KAA6B,IAAjC,EAAuC;IACnCszC,IAAI,CAACD,UAAD,EAAaN,kBAAkB,CAAC/yC,KAAhC,CAAJ;EACH,CAFD,MAGK;IACDuzC,8BAA8B,CAACR,kBAAD,EAAqB,CAAC3wC,GAAD,EAAM8wC,IAAN,KAAe;MAC9D,MAAMxlC,IAAI,GAAG,IAAIulB,IAAJ,CAASogB,UAAU,CAAC3jC,QAAX,KAAwB,GAAxB,GAA8BtN,GAAvC,CAAb;MACAgxC,6BAA6B,CAACF,IAAD,EAAOxlC,IAAP,EAAa4lC,IAAb,CAA7B;IACH,CAH6B,CAA9B;EAIH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,8BAAT,CAAwCR,kBAAxC,EAA4DO,IAA5D,EAAkE;EAC9DP,kBAAkB,CAACpI,QAAnB,CAA4BhoC,OAA5B,CAAoC,CAACuwC,IAAD,EAAO9wC,GAAP,KAAe;IAC/CkxC,IAAI,CAAClxC,GAAD,EAAM8wC,IAAN,CAAJ;EACH,CAFD;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMM,aAAN,CAAoB;EAChB9sC,WAAW,CAAC+sC,WAAD,EAAc;IACrB,KAAKA,WAAL,GAAmBA,WAAnB;IACA,KAAKC,KAAL,GAAa,IAAb;EACH;;EACDlqC,GAAG,GAAG;IACF,MAAMmqC,QAAQ,GAAG,KAAKF,WAAL,CAAiBjqC,GAAjB,EAAjB;IACA,MAAMoI,KAAK,GAAGzL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkButC,QAAlB,CAAd;;IACA,IAAI,KAAKD,KAAT,EAAgB;MACZh6B,IAAI,CAAC,KAAKg6B,KAAN,EAAa,CAACE,IAAD,EAAO5zC,KAAP,KAAiB;QAC9B4R,KAAK,CAACgiC,IAAD,CAAL,GAAchiC,KAAK,CAACgiC,IAAD,CAAL,GAAc5zC,KAA5B;MACH,CAFG,CAAJ;IAGH;;IACD,KAAK0zC,KAAL,GAAaC,QAAb;IACA,OAAO/hC,KAAP;EACH;;AAfe;AAkBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMiiC,oBAAoB,GAAG,KAAK,IAAlC;AACA,MAAMC,oBAAoB,GAAG,KAAK,IAAlC,EACA;;AACA,MAAMC,qBAAqB,GAAG,IAAI,EAAJ,GAAS,IAAvC;;AACA,MAAMC,aAAN,CAAoB;EAChBttC,WAAW,CAACutC,UAAD,EAAaC,OAAb,EAAsB;IAC7B,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKC,cAAL,GAAsB,EAAtB;IACA,KAAKC,cAAL,GAAsB,IAAIZ,aAAJ,CAAkBS,UAAlB,CAAtB;IACA,MAAMz3B,OAAO,GAAGq3B,oBAAoB,GAChC,CAACC,oBAAoB,GAAGD,oBAAxB,IAAgDz7B,IAAI,CAACoM,MAAL,EADpD;IAEAlI,qBAAqB,CAAC,KAAK+3B,YAAL,CAAkBplC,IAAlB,CAAuB,IAAvB,CAAD,EAA+BmJ,IAAI,CAACC,KAAL,CAAWmE,OAAX,CAA/B,CAArB;EACH;;EACD63B,YAAY,GAAG;IACX,MAAMriB,KAAK,GAAG,KAAKoiB,cAAL,CAAoB5qC,GAApB,EAAd;IACA,MAAM8qC,aAAa,GAAG,EAAtB;IACA,IAAIC,iBAAiB,GAAG,KAAxB;IACA76B,IAAI,CAACsY,KAAD,EAAQ,CAAC4hB,IAAD,EAAO5zC,KAAP,KAAiB;MACzB,IAAIA,KAAK,GAAG,CAAR,IAAauT,wDAAQ,CAAC,KAAK4gC,cAAN,EAAsBP,IAAtB,CAAzB,EAAsD;QAClDU,aAAa,CAACV,IAAD,CAAb,GAAsB5zC,KAAtB;QACAu0C,iBAAiB,GAAG,IAApB;MACH;IACJ,CALG,CAAJ;;IAMA,IAAIA,iBAAJ,EAAuB;MACnB,KAAKL,OAAL,CAAaniB,WAAb,CAAyBuiB,aAAzB;IACH,CAZU,CAaX;;;IACAh4B,qBAAqB,CAAC,KAAK+3B,YAAL,CAAkBplC,IAAlB,CAAuB,IAAvB,CAAD,EAA+BmJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACoM,MAAL,KAAgB,CAAhB,GAAoBuvB,qBAA/B,CAA/B,CAArB;EACH;;AAxBe;AA2BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIS,aAAJ;;AACA,CAAC,UAAUA,aAAV,EAAyB;EACtBA,aAAa,CAACA,aAAa,CAAC,WAAD,CAAb,GAA6B,CAA9B,CAAb,GAAgD,WAAhD;EACAA,aAAa,CAACA,aAAa,CAAC,OAAD,CAAb,GAAyB,CAA1B,CAAb,GAA4C,OAA5C;EACAA,aAAa,CAACA,aAAa,CAAC,gBAAD,CAAb,GAAkC,CAAnC,CAAb,GAAqD,gBAArD;EACAA,aAAa,CAACA,aAAa,CAAC,iBAAD,CAAb,GAAmC,CAApC,CAAb,GAAsD,iBAAtD;AACH,CALD,EAKGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CALhB;;AAMA,SAASC,sBAAT,GAAkC;EAC9B,OAAO;IACHC,QAAQ,EAAE,IADP;IAEHC,UAAU,EAAE,KAFT;IAGHhb,OAAO,EAAE,IAHN;IAIHib,MAAM,EAAE;EAJL,CAAP;AAMH;;AACD,SAASC,wBAAT,GAAoC;EAChC,OAAO;IACHH,QAAQ,EAAE,KADP;IAEHC,UAAU,EAAE,IAFT;IAGHhb,OAAO,EAAE,IAHN;IAIHib,MAAM,EAAE;EAJL,CAAP;AAMH;;AACD,SAASE,mCAAT,CAA6Cnb,OAA7C,EAAsD;EAClD,OAAO;IACH+a,QAAQ,EAAE,KADP;IAEHC,UAAU,EAAE,IAFT;IAGHhb,OAHG;IAIHib,MAAM,EAAE;EAJL,CAAP;AAMH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,YAAN,CAAmB;EACf;AACJ;AACA;EACIruC,WAAW;EACX;EAAmBgH,IADR;EAEX;EAAmBsnC,YAFR;EAGX;EAAmBC,MAHR,EAGgB;IACvB,KAAKvnC,IAAL,GAAYA,IAAZ;IACA,KAAKsnC,YAAL,GAAoBA,YAApB;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA;;IACA,KAAK3yC,IAAL,GAAYkyC,aAAa,CAACU,cAA1B;IACA;;IACA,KAAK9I,MAAL,GAAcqI,sBAAsB,EAApC;EACH;;EACDU,iBAAiB,CAAC1R,SAAD,EAAY;IACzB,IAAI,CAACnP,WAAW,CAAC,KAAK5mB,IAAN,CAAhB,EAA6B;MACzB8F,sDAAM,CAACigB,YAAY,CAAC,KAAK/lB,IAAN,CAAZ,KAA4B+1B,SAA7B,EAAwC,+CAAxC,CAAN;MACA,OAAO,IAAIsR,YAAJ,CAAiBphB,YAAY,CAAC,KAAKjmB,IAAN,CAA7B,EAA0C,KAAKsnC,YAA/C,EAA6D,KAAKC,MAAlE,CAAP;IACH,CAHD,MAIK,IAAI,KAAKD,YAAL,CAAkBh1C,KAAlB,IAA2B,IAA/B,EAAqC;MACtCwT,sDAAM,CAAC,KAAKwhC,YAAL,CAAkBrK,QAAlB,CAA2Bv2B,OAA3B,EAAD,EAAuC,0DAAvC,CAAN,CADsC,CAEtC;;MACA,OAAO,IAAP;IACH,CAJI,MAKA;MACD,MAAM2yB,SAAS,GAAG,KAAKiO,YAAL,CAAkBI,OAAlB,CAA0B,IAAIniB,IAAJ,CAASwQ,SAAT,CAA1B,CAAlB;MACA,OAAO,IAAIsR,YAAJ,CAAiBvhB,YAAY,EAA7B,EAAiCuT,SAAjC,EAA4C,KAAKkO,MAAjD,CAAP;IACH;EACJ;;AA9Bc;AAiCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMI,cAAN,CAAqB;EACjB3uC,WAAW,CAAC0lC,MAAD,EAAS1+B,IAAT,EAAe;IACtB,KAAK0+B,MAAL,GAAcA,MAAd;IACA,KAAK1+B,IAAL,GAAYA,IAAZ;IACA;;IACA,KAAKpL,IAAL,GAAYkyC,aAAa,CAACc,eAA1B;EACH;;EACDH,iBAAiB,CAAC1R,SAAD,EAAY;IACzB,IAAInP,WAAW,CAAC,KAAK5mB,IAAN,CAAf,EAA4B;MACxB,OAAO,IAAI2nC,cAAJ,CAAmB,KAAKjJ,MAAxB,EAAgC5Y,YAAY,EAA5C,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAI6hB,cAAJ,CAAmB,KAAKjJ,MAAxB,EAAgCzY,YAAY,CAAC,KAAKjmB,IAAN,CAA5C,CAAP;IACH;EACJ;;AAdgB;AAiBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM6nC,SAAN,CAAgB;EACZ7uC,WAAW,CAAC0lC,MAAD,EAAS1+B,IAAT,EAAe7I,IAAf,EAAqB;IAC5B,KAAKunC,MAAL,GAAcA,MAAd;IACA,KAAK1+B,IAAL,GAAYA,IAAZ;IACA,KAAK7I,IAAL,GAAYA,IAAZ;IACA;;IACA,KAAKvC,IAAL,GAAYkyC,aAAa,CAACgB,SAA1B;EACH;;EACDL,iBAAiB,CAAC1R,SAAD,EAAY;IACzB,IAAInP,WAAW,CAAC,KAAK5mB,IAAN,CAAf,EAA4B;MACxB,OAAO,IAAI6nC,SAAJ,CAAc,KAAKnJ,MAAnB,EAA2B5Y,YAAY,EAAvC,EAA2C,KAAK3uB,IAAL,CAAU2+B,iBAAV,CAA4BC,SAA5B,CAA3C,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAI8R,SAAJ,CAAc,KAAKnJ,MAAnB,EAA2BzY,YAAY,CAAC,KAAKjmB,IAAN,CAAvC,EAAoD,KAAK7I,IAAzD,CAAP;IACH;EACJ;;AAfW;AAkBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM4wC,KAAN,CAAY;EACR/uC,WAAW;EACX;EAAmB0lC,MADR;EAEX;EAAmB1+B,IAFR;EAGX;EAAmBi9B,QAHR,EAGkB;IACzB,KAAKyB,MAAL,GAAcA,MAAd;IACA,KAAK1+B,IAAL,GAAYA,IAAZ;IACA,KAAKi9B,QAAL,GAAgBA,QAAhB;IACA;;IACA,KAAKroC,IAAL,GAAYkyC,aAAa,CAACkB,KAA1B;EACH;;EACDP,iBAAiB,CAAC1R,SAAD,EAAY;IACzB,IAAInP,WAAW,CAAC,KAAK5mB,IAAN,CAAf,EAA4B;MACxB,MAAMq5B,SAAS,GAAG,KAAK4D,QAAL,CAAcyK,OAAd,CAAsB,IAAIniB,IAAJ,CAASwQ,SAAT,CAAtB,CAAlB;;MACA,IAAIsD,SAAS,CAAC3yB,OAAV,EAAJ,EAAyB;QACrB;QACA,OAAO,IAAP;MACH,CAHD,MAIK,IAAI2yB,SAAS,CAAC/mC,KAAd,EAAqB;QACtB;QACA,OAAO,IAAIu1C,SAAJ,CAAc,KAAKnJ,MAAnB,EAA2B5Y,YAAY,EAAvC,EAA2CuT,SAAS,CAAC/mC,KAArD,CAAP;MACH,CAHI,MAIA;QACD;QACA,OAAO,IAAIy1C,KAAJ,CAAU,KAAKrJ,MAAf,EAAuB5Y,YAAY,EAAnC,EAAuCuT,SAAvC,CAAP;MACH;IACJ,CAdD,MAeK;MACDvzB,sDAAM,CAACigB,YAAY,CAAC,KAAK/lB,IAAN,CAAZ,KAA4B+1B,SAA7B,EAAwC,gEAAxC,CAAN;MACA,OAAO,IAAIgS,KAAJ,CAAU,KAAKrJ,MAAf,EAAuBzY,YAAY,CAAC,KAAKjmB,IAAN,CAAnC,EAAgD,KAAKi9B,QAArD,CAAP;IACH;EACJ;;EACDj7B,QAAQ,GAAG;IACP,OAAQ,eACJ,KAAKhC,IADD,GAEJ,IAFI,GAGJ,KAAK0+B,MAAL,CAAY18B,QAAZ,EAHI,GAIJ,UAJI,GAKJ,KAAKi7B,QAAL,CAAcj7B,QAAd,EALI,GAMJ,GANJ;EAOH;;AAxCO;AA2CZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMimC,SAAN,CAAgB;EACZjvC,WAAW,CAACkvC,KAAD,EAAQC,iBAAR,EAA2BC,SAA3B,EAAsC;IAC7C,KAAKF,KAAL,GAAaA,KAAb;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;EACH;EACD;AACJ;AACA;;;EACIC,kBAAkB,GAAG;IACjB,OAAO,KAAKF,iBAAZ;EACH;EACD;AACJ;AACA;;;EACIG,UAAU,GAAG;IACT,OAAO,KAAKF,SAAZ;EACH;;EACDG,iBAAiB,CAACvoC,IAAD,EAAO;IACpB,IAAI4mB,WAAW,CAAC5mB,IAAD,CAAf,EAAuB;MACnB,OAAO,KAAKqoC,kBAAL,MAA6B,CAAC,KAAKD,SAA1C;IACH;;IACD,MAAM5G,QAAQ,GAAGzb,YAAY,CAAC/lB,IAAD,CAA7B;IACA,OAAO,KAAKwoC,kBAAL,CAAwBhH,QAAxB,CAAP;EACH;;EACDgH,kBAAkB,CAAC9zC,GAAD,EAAM;IACpB,OAAS,KAAK2zC,kBAAL,MAA6B,CAAC,KAAKD,SAApC,IAAkD,KAAKF,KAAL,CAAWhoC,QAAX,CAAoBxL,GAApB,CAA1D;EACH;;EACDswC,OAAO,GAAG;IACN,OAAO,KAAKkD,KAAZ;EACH;;AA9BW;AAiChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMO,cAAN,CAAqB;EACjBzvC,WAAW,CAAC0vC,MAAD,EAAS;IAChB,KAAKA,MAAL,GAAcA,MAAd;IACA,KAAKnK,MAAL,GAAc,KAAKmK,MAAL,CAAYtc,YAAZ,CAAyBa,QAAzB,EAAd;EACH;;AAJgB;AAMrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0b,sCAAT,CAAgDC,cAAhD,EAAgEvzC,OAAhE,EAAyEwzC,UAAzE,EAAqFC,kBAArF,EAAyG;EACrG,MAAMh0C,MAAM,GAAG,EAAf;EACA,MAAMi0C,KAAK,GAAG,EAAd;EACA1zC,OAAO,CAACJ,OAAR,CAAgB+zC,MAAM,IAAI;IACtB,IAAIA,MAAM,CAACp0C,IAAP,KAAgB;IAAgB;IAAhC,GACAg0C,cAAc,CAACrK,MAAf,CAAsBtN,mBAAtB,CAA0C+X,MAAM,CAAC5K,OAAjD,EAA0D4K,MAAM,CAAChL,YAAjE,CADJ,EACoF;MAChF+K,KAAK,CAAC7zC,IAAN,CAAWmpC,gBAAgB,CAAC2K,MAAM,CAACjT,SAAR,EAAmBiT,MAAM,CAAChL,YAA1B,CAA3B;IACH;EACJ,CALD;EAMAiL,mCAAmC,CAACL,cAAD,EAAiB9zC,MAAjB,EAAyB;EAAgB;EAAzC,EAAyEO,OAAzE,EAAkFyzC,kBAAlF,EAAsGD,UAAtG,CAAnC;EACAI,mCAAmC,CAACL,cAAD,EAAiB9zC,MAAjB,EAAyB;EAAc;EAAvC,EAAqEO,OAArE,EAA8EyzC,kBAA9E,EAAkGD,UAAlG,CAAnC;EACAI,mCAAmC,CAACL,cAAD,EAAiB9zC,MAAjB,EAAyB;EAAc;EAAvC,EAAqEi0C,KAArE,EAA4ED,kBAA5E,EAAgGD,UAAhG,CAAnC;EACAI,mCAAmC,CAACL,cAAD,EAAiB9zC,MAAjB,EAAyB;EAAgB;EAAzC,EAAyEO,OAAzE,EAAkFyzC,kBAAlF,EAAsGD,UAAtG,CAAnC;EACAI,mCAAmC,CAACL,cAAD,EAAiB9zC,MAAjB,EAAyB;EAAQ;EAAjC,EAAyDO,OAAzD,EAAkEyzC,kBAAlE,EAAsFD,UAAtF,CAAnC;EACA,OAAO/zC,MAAP;AACH;AACD;AACA;AACA;;;AACA,SAASm0C,mCAAT,CAA6CL,cAA7C,EAA6D9zC,MAA7D,EAAqEiK,SAArE,EAAgF1J,OAAhF,EAAyF6zC,aAAzF,EAAwGL,UAAxG,EAAoH;EAChH,MAAMM,eAAe,GAAG9zC,OAAO,CAACU,MAAR,CAAeizC,MAAM,IAAIA,MAAM,CAACp0C,IAAP,KAAgBmK,SAAzC,CAAxB;EACAoqC,eAAe,CAACz9B,IAAhB,CAAqB,CAACnT,CAAD,EAAI0S,CAAJ,KAAUm+B,4BAA4B,CAACR,cAAD,EAAiBrwC,CAAjB,EAAoB0S,CAApB,CAA3D;EACAk+B,eAAe,CAACl0C,OAAhB,CAAwB+zC,MAAM,IAAI;IAC9B,MAAMK,kBAAkB,GAAGC,qCAAqC,CAACV,cAAD,EAAiBI,MAAjB,EAAyBH,UAAzB,CAAhE;IACAK,aAAa,CAACj0C,OAAd,CAAsBs0C,YAAY,IAAI;MAClC,IAAIA,YAAY,CAACC,UAAb,CAAwBR,MAAM,CAACp0C,IAA/B,CAAJ,EAA0C;QACtCE,MAAM,CAACI,IAAP,CAAYq0C,YAAY,CAACE,WAAb,CAAyBJ,kBAAzB,EAA6CT,cAAc,CAACF,MAA5D,CAAZ;MACH;IACJ,CAJD;EAKH,CAPD;AAQH;;AACD,SAASY,qCAAT,CAA+CV,cAA/C,EAA+DI,MAA/D,EAAuEH,UAAvE,EAAmF;EAC/E,IAAIG,MAAM,CAACp0C,IAAP,KAAgB,OAAhB,IAA2Bo0C,MAAM,CAACp0C,IAAP,KAAgB,eAA/C,EAAgE;IAC5D,OAAOo0C,MAAP;EACH,CAFD,MAGK;IACDA,MAAM,CAACU,QAAP,GAAkBb,UAAU,CAAC5S,uBAAX,CAAmC+S,MAAM,CAACjT,SAA1C,EAAqDiT,MAAM,CAAChL,YAA5D,EAA0E4K,cAAc,CAACrK,MAAzF,CAAlB;IACA,OAAOyK,MAAP;EACH;AACJ;;AACD,SAASI,4BAAT,CAAsCR,cAAtC,EAAsDrwC,CAAtD,EAAyD0S,CAAzD,EAA4D;EACxD,IAAI1S,CAAC,CAACw9B,SAAF,IAAe,IAAf,IAAuB9qB,CAAC,CAAC8qB,SAAF,IAAe,IAA1C,EAAgD;IAC5C,MAAMnvB,8DAAc,CAAC,oCAAD,CAApB;EACH;;EACD,MAAM+iC,QAAQ,GAAG,IAAIhZ,SAAJ,CAAcp4B,CAAC,CAACw9B,SAAhB,EAA2Bx9B,CAAC,CAACylC,YAA7B,CAAjB;EACA,MAAM4L,QAAQ,GAAG,IAAIjZ,SAAJ,CAAc1lB,CAAC,CAAC8qB,SAAhB,EAA2B9qB,CAAC,CAAC+yB,YAA7B,CAAjB;EACA,OAAO4K,cAAc,CAACrK,MAAf,CAAsBvN,OAAtB,CAA8B2Y,QAA9B,EAAwCC,QAAxC,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBhB,UAAtB,EAAkCiB,WAAlC,EAA+C;EAC3C,OAAO;IAAEjB,UAAF;IAAciB;EAAd,CAAP;AACH;;AACD,SAASC,wBAAT,CAAkCC,SAAlC,EAA6CC,SAA7C,EAAwD91C,QAAxD,EAAkE8rC,QAAlE,EAA4E;EACxE,OAAO4J,YAAY,CAAC,IAAI5B,SAAJ,CAAcgC,SAAd,EAAyB91C,QAAzB,EAAmC8rC,QAAnC,CAAD,EAA+C+J,SAAS,CAACF,WAAzD,CAAnB;AACH;;AACD,SAASI,yBAAT,CAAmCF,SAAnC,EAA8CG,UAA9C,EAA0Dh2C,QAA1D,EAAoE8rC,QAApE,EAA8E;EAC1E,OAAO4J,YAAY,CAACG,SAAS,CAACnB,UAAX,EAAuB,IAAIZ,SAAJ,CAAckC,UAAd,EAA0Bh2C,QAA1B,EAAoC8rC,QAApC,CAAvB,CAAnB;AACH;;AACD,SAASmK,6BAAT,CAAuCJ,SAAvC,EAAkD;EAC9C,OAAOA,SAAS,CAACnB,UAAV,CAAqBR,kBAArB,KACD2B,SAAS,CAACnB,UAAV,CAAqB7D,OAArB,EADC,GAED,IAFN;AAGH;;AACD,SAASqF,8BAAT,CAAwCL,SAAxC,EAAmD;EAC/C,OAAOA,SAAS,CAACF,WAAV,CAAsBzB,kBAAtB,KACD2B,SAAS,CAACF,WAAV,CAAsB9E,OAAtB,EADC,GAED,IAFN;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIsF,sBAAJ;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,MAAM;EACxB,IAAI,CAACD,sBAAL,EAA6B;IACzBA,sBAAsB,GAAG,IAAI3X,SAAJ,CAActnB,aAAd,CAAzB;EACH;;EACD,OAAOi/B,sBAAP;AACH,CALD;AAMA;AACA;AACA;;;AACA,MAAME,aAAN,CAAoB;EAChBxxC,WAAW,CAAC1G,KAAD,EAAQ2qC,QAAQ,GAAGsN,aAAa,EAAhC,EAAoC;IAC3C,KAAKj4C,KAAL,GAAaA,KAAb;IACA,KAAK2qC,QAAL,GAAgBA,QAAhB;EACH;;EACgB,OAAVwN,UAAU,CAAC/3C,GAAD,EAAM;IACnB,IAAI8yC,IAAI,GAAG,IAAIgF,aAAJ,CAAkB,IAAlB,CAAX;IACAx+B,IAAI,CAACtZ,GAAD,EAAM,CAACg4C,SAAD,EAAYjJ,SAAZ,KAA0B;MAChC+D,IAAI,GAAGA,IAAI,CAAC3yC,GAAL,CAAS,IAAI0yB,IAAJ,CAASmlB,SAAT,CAAT,EAA8BjJ,SAA9B,CAAP;IACH,CAFG,CAAJ;IAGA,OAAO+D,IAAP;EACH;EACD;AACJ;AACA;;;EACI9+B,OAAO,GAAG;IACN,OAAO,KAAKpU,KAAL,KAAe,IAAf,IAAuB,KAAK2qC,QAAL,CAAcv2B,OAAd,EAA9B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIikC,gCAAgC,CAACC,YAAD,EAAeC,SAAf,EAA0B;IACtD,IAAI,KAAKv4C,KAAL,IAAc,IAAd,IAAsBu4C,SAAS,CAAC,KAAKv4C,KAAN,CAAnC,EAAiD;MAC7C,OAAO;QAAE0N,IAAI,EAAE8lB,YAAY,EAApB;QAAwBxzB,KAAK,EAAE,KAAKA;MAApC,CAAP;IACH,CAFD,MAGK;MACD,IAAIs0B,WAAW,CAACgkB,YAAD,CAAf,EAA+B;QAC3B,OAAO,IAAP;MACH,CAFD,MAGK;QACD,MAAMtU,KAAK,GAAGvQ,YAAY,CAAC6kB,YAAD,CAA1B;QACA,MAAM/zC,KAAK,GAAG,KAAKomC,QAAL,CAAcnhC,GAAd,CAAkBw6B,KAAlB,CAAd;;QACA,IAAIz/B,KAAK,KAAK,IAAd,EAAoB;UAChB,MAAMi0C,yBAAyB,GAAGj0C,KAAK,CAAC8zC,gCAAN,CAAuC1kB,YAAY,CAAC2kB,YAAD,CAAnD,EAAmEC,SAAnE,CAAlC;;UACA,IAAIC,yBAAyB,IAAI,IAAjC,EAAuC;YACnC,MAAMC,QAAQ,GAAGtkB,SAAS,CAAC,IAAIlB,IAAJ,CAAS+Q,KAAT,CAAD,EAAkBwU,yBAAyB,CAAC9qC,IAA5C,CAA1B;YACA,OAAO;cAAEA,IAAI,EAAE+qC,QAAR;cAAkBz4C,KAAK,EAAEw4C,yBAAyB,CAACx4C;YAAnD,CAAP;UACH,CAHD,MAIK;YACD,OAAO,IAAP;UACH;QACJ,CATD,MAUK;UACD,OAAO,IAAP;QACH;MACJ;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACI04C,wBAAwB,CAACJ,YAAD,EAAe;IACnC,OAAO,KAAKD,gCAAL,CAAsCC,YAAtC,EAAoD,MAAM,IAA1D,CAAP;EACH;EACD;AACJ;AACA;;;EACIlD,OAAO,CAACkD,YAAD,EAAe;IAClB,IAAIhkB,WAAW,CAACgkB,YAAD,CAAf,EAA+B;MAC3B,OAAO,IAAP;IACH,CAFD,MAGK;MACD,MAAMtU,KAAK,GAAGvQ,YAAY,CAAC6kB,YAAD,CAA1B;MACA,MAAMvR,SAAS,GAAG,KAAK4D,QAAL,CAAcnhC,GAAd,CAAkBw6B,KAAlB,CAAlB;;MACA,IAAI+C,SAAS,KAAK,IAAlB,EAAwB;QACpB,OAAOA,SAAS,CAACqO,OAAV,CAAkBzhB,YAAY,CAAC2kB,YAAD,CAA9B,CAAP;MACH,CAFD,MAGK;QACD,OAAO,IAAIJ,aAAJ,CAAkB,IAAlB,CAAP;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI33C,GAAG,CAAC+3C,YAAD,EAAeK,KAAf,EAAsB;IACrB,IAAIrkB,WAAW,CAACgkB,YAAD,CAAf,EAA+B;MAC3B,OAAO,IAAIJ,aAAJ,CAAkBS,KAAlB,EAAyB,KAAKhO,QAA9B,CAAP;IACH,CAFD,MAGK;MACD,MAAM3G,KAAK,GAAGvQ,YAAY,CAAC6kB,YAAD,CAA1B;MACA,MAAM/zC,KAAK,GAAG,KAAKomC,QAAL,CAAcnhC,GAAd,CAAkBw6B,KAAlB,KAA4B,IAAIkU,aAAJ,CAAkB,IAAlB,CAA1C;MACA,MAAMhM,QAAQ,GAAG3nC,KAAK,CAAChE,GAAN,CAAUozB,YAAY,CAAC2kB,YAAD,CAAtB,EAAsCK,KAAtC,CAAjB;MACA,MAAMnQ,WAAW,GAAG,KAAKmC,QAAL,CAAc7J,MAAd,CAAqBkD,KAArB,EAA4BkI,QAA5B,CAApB;MACA,OAAO,IAAIgM,aAAJ,CAAkB,KAAKl4C,KAAvB,EAA8BwoC,WAA9B,CAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIpjC,MAAM,CAACkzC,YAAD,EAAe;IACjB,IAAIhkB,WAAW,CAACgkB,YAAD,CAAf,EAA+B;MAC3B,IAAI,KAAK3N,QAAL,CAAcv2B,OAAd,EAAJ,EAA6B;QACzB,OAAO,IAAI8jC,aAAJ,CAAkB,IAAlB,CAAP;MACH,CAFD,MAGK;QACD,OAAO,IAAIA,aAAJ,CAAkB,IAAlB,EAAwB,KAAKvN,QAA7B,CAAP;MACH;IACJ,CAPD,MAQK;MACD,MAAM3G,KAAK,GAAGvQ,YAAY,CAAC6kB,YAAD,CAA1B;MACA,MAAM/zC,KAAK,GAAG,KAAKomC,QAAL,CAAcnhC,GAAd,CAAkBw6B,KAAlB,CAAd;;MACA,IAAIz/B,KAAJ,EAAW;QACP,MAAM2nC,QAAQ,GAAG3nC,KAAK,CAACa,MAAN,CAAauuB,YAAY,CAAC2kB,YAAD,CAAzB,CAAjB;QACA,IAAI9P,WAAJ;;QACA,IAAI0D,QAAQ,CAAC93B,OAAT,EAAJ,EAAwB;UACpBo0B,WAAW,GAAG,KAAKmC,QAAL,CAAcvlC,MAAd,CAAqB4+B,KAArB,CAAd;QACH,CAFD,MAGK;UACDwE,WAAW,GAAG,KAAKmC,QAAL,CAAc7J,MAAd,CAAqBkD,KAArB,EAA4BkI,QAA5B,CAAd;QACH;;QACD,IAAI,KAAKlsC,KAAL,KAAe,IAAf,IAAuBwoC,WAAW,CAACp0B,OAAZ,EAA3B,EAAkD;UAC9C,OAAO,IAAI8jC,aAAJ,CAAkB,IAAlB,CAAP;QACH,CAFD,MAGK;UACD,OAAO,IAAIA,aAAJ,CAAkB,KAAKl4C,KAAvB,EAA8BwoC,WAA9B,CAAP;QACH;MACJ,CAfD,MAgBK;QACD,OAAO,IAAP;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIh/B,GAAG,CAAC8uC,YAAD,EAAe;IACd,IAAIhkB,WAAW,CAACgkB,YAAD,CAAf,EAA+B;MAC3B,OAAO,KAAKt4C,KAAZ;IACH,CAFD,MAGK;MACD,MAAMgkC,KAAK,GAAGvQ,YAAY,CAAC6kB,YAAD,CAA1B;MACA,MAAM/zC,KAAK,GAAG,KAAKomC,QAAL,CAAcnhC,GAAd,CAAkBw6B,KAAlB,CAAd;;MACA,IAAIz/B,KAAJ,EAAW;QACP,OAAOA,KAAK,CAACiF,GAAN,CAAUmqB,YAAY,CAAC2kB,YAAD,CAAtB,CAAP;MACH,CAFD,MAGK;QACD,OAAO,IAAP;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIM,OAAO,CAACN,YAAD,EAAeO,OAAf,EAAwB;IAC3B,IAAIvkB,WAAW,CAACgkB,YAAD,CAAf,EAA+B;MAC3B,OAAOO,OAAP;IACH,CAFD,MAGK;MACD,MAAM7U,KAAK,GAAGvQ,YAAY,CAAC6kB,YAAD,CAA1B;MACA,MAAM/zC,KAAK,GAAG,KAAKomC,QAAL,CAAcnhC,GAAd,CAAkBw6B,KAAlB,KAA4B,IAAIkU,aAAJ,CAAkB,IAAlB,CAA1C;MACA,MAAMhM,QAAQ,GAAG3nC,KAAK,CAACq0C,OAAN,CAAcjlB,YAAY,CAAC2kB,YAAD,CAA1B,EAA0CO,OAA1C,CAAjB;MACA,IAAIrQ,WAAJ;;MACA,IAAI0D,QAAQ,CAAC93B,OAAT,EAAJ,EAAwB;QACpBo0B,WAAW,GAAG,KAAKmC,QAAL,CAAcvlC,MAAd,CAAqB4+B,KAArB,CAAd;MACH,CAFD,MAGK;QACDwE,WAAW,GAAG,KAAKmC,QAAL,CAAc7J,MAAd,CAAqBkD,KAArB,EAA4BkI,QAA5B,CAAd;MACH;;MACD,OAAO,IAAIgM,aAAJ,CAAkB,KAAKl4C,KAAvB,EAA8BwoC,WAA9B,CAAP;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;;;EACIsQ,IAAI,CAACt3C,EAAD,EAAK;IACL,OAAO,KAAKu3C,KAAL,CAAWvlB,YAAY,EAAvB,EAA2BhyB,EAA3B,CAAP;EACH;EACD;AACJ;AACA;;;EACIu3C,KAAK,CAACC,SAAD,EAAYx3C,EAAZ,EAAgB;IACjB,MAAMy3C,KAAK,GAAG,EAAd;IACA,KAAKtO,QAAL,CAAclK,gBAAd,CAA+B,CAACyO,QAAD,EAAWnI,SAAX,KAAyB;MACpDkS,KAAK,CAAC/J,QAAD,CAAL,GAAkBnI,SAAS,CAACgS,KAAV,CAAgB5kB,SAAS,CAAC6kB,SAAD,EAAY9J,QAAZ,CAAzB,EAAgD1tC,EAAhD,CAAlB;IACH,CAFD;IAGA,OAAOA,EAAE,CAACw3C,SAAD,EAAY,KAAKh5C,KAAjB,EAAwBi5C,KAAxB,CAAT;EACH;EACD;AACJ;AACA;;;EACIC,UAAU,CAACxrC,IAAD,EAAOwM,CAAP,EAAU;IAChB,OAAO,KAAKi/B,WAAL,CAAiBzrC,IAAjB,EAAuB8lB,YAAY,EAAnC,EAAuCtZ,CAAvC,CAAP;EACH;;EACDi/B,WAAW,CAACC,YAAD,EAAeJ,SAAf,EAA0B9+B,CAA1B,EAA6B;IACpC,MAAMpN,MAAM,GAAG,KAAK9M,KAAL,GAAaka,CAAC,CAAC8+B,SAAD,EAAY,KAAKh5C,KAAjB,CAAd,GAAwC,KAAvD;;IACA,IAAI8M,MAAJ,EAAY;MACR,OAAOA,MAAP;IACH,CAFD,MAGK;MACD,IAAIwnB,WAAW,CAAC8kB,YAAD,CAAf,EAA+B;QAC3B,OAAO,IAAP;MACH,CAFD,MAGK;QACD,MAAMpV,KAAK,GAAGvQ,YAAY,CAAC2lB,YAAD,CAA1B;QACA,MAAM3J,SAAS,GAAG,KAAK9E,QAAL,CAAcnhC,GAAd,CAAkBw6B,KAAlB,CAAlB;;QACA,IAAIyL,SAAJ,EAAe;UACX,OAAOA,SAAS,CAAC0J,WAAV,CAAsBxlB,YAAY,CAACylB,YAAD,CAAlC,EAAkDjlB,SAAS,CAAC6kB,SAAD,EAAYhV,KAAZ,CAA3D,EAA+E9pB,CAA/E,CAAP;QACH,CAFD,MAGK;UACD,OAAO,IAAP;QACH;MACJ;IACJ;EACJ;;EACDm/B,aAAa,CAAC3rC,IAAD,EAAOwM,CAAP,EAAU;IACnB,OAAO,KAAKo/B,cAAL,CAAoB5rC,IAApB,EAA0B8lB,YAAY,EAAtC,EAA0CtZ,CAA1C,CAAP;EACH;;EACDo/B,cAAc,CAACF,YAAD,EAAeG,mBAAf,EAAoCr/B,CAApC,EAAuC;IACjD,IAAIoa,WAAW,CAAC8kB,YAAD,CAAf,EAA+B;MAC3B,OAAO,IAAP;IACH,CAFD,MAGK;MACD,IAAI,KAAKp5C,KAAT,EAAgB;QACZka,CAAC,CAACq/B,mBAAD,EAAsB,KAAKv5C,KAA3B,CAAD;MACH;;MACD,MAAMgkC,KAAK,GAAGvQ,YAAY,CAAC2lB,YAAD,CAA1B;MACA,MAAM3J,SAAS,GAAG,KAAK9E,QAAL,CAAcnhC,GAAd,CAAkBw6B,KAAlB,CAAlB;;MACA,IAAIyL,SAAJ,EAAe;QACX,OAAOA,SAAS,CAAC6J,cAAV,CAAyB3lB,YAAY,CAACylB,YAAD,CAArC,EAAqDjlB,SAAS,CAAColB,mBAAD,EAAsBvV,KAAtB,CAA9D,EAA4F9pB,CAA5F,CAAP;MACH,CAFD,MAGK;QACD,OAAO,IAAIg+B,aAAJ,CAAkB,IAAlB,CAAP;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIsB,OAAO,CAACt/B,CAAD,EAAI;IACP,KAAKu/B,QAAL,CAAcjmB,YAAY,EAA1B,EAA8BtZ,CAA9B;EACH;;EACDu/B,QAAQ,CAACF,mBAAD,EAAsBr/B,CAAtB,EAAyB;IAC7B,KAAKywB,QAAL,CAAclK,gBAAd,CAA+B,CAACgD,SAAD,EAAYsD,SAAZ,KAA0B;MACrDA,SAAS,CAAC0S,QAAV,CAAmBtlB,SAAS,CAAColB,mBAAD,EAAsB9V,SAAtB,CAA5B,EAA8DvpB,CAA9D;IACH,CAFD;;IAGA,IAAI,KAAKla,KAAT,EAAgB;MACZka,CAAC,CAACq/B,mBAAD,EAAsB,KAAKv5C,KAA3B,CAAD;IACH;EACJ;;EACD05C,YAAY,CAACx/B,CAAD,EAAI;IACZ,KAAKywB,QAAL,CAAclK,gBAAd,CAA+B,CAACgD,SAAD,EAAYsD,SAAZ,KAA0B;MACrD,IAAIA,SAAS,CAAC/mC,KAAd,EAAqB;QACjBka,CAAC,CAACupB,SAAD,EAAYsD,SAAS,CAAC/mC,KAAtB,CAAD;MACH;IACJ,CAJD;EAKH;;AAjRe;AAoRpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM25C,aAAN,CAAoB;EAChBjzC,WAAW,CAACkzC,UAAD,EAAa;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;EACH;;EACW,OAALC,KAAK,GAAG;IACX,OAAO,IAAIF,aAAJ,CAAkB,IAAIzB,aAAJ,CAAkB,IAAlB,CAAlB,CAAP;EACH;;AANe;;AAQpB,SAAS4B,qBAAT,CAA+BC,aAA/B,EAA8CrsC,IAA9C,EAAoD4wB,IAApD,EAA0D;EACtD,IAAIhK,WAAW,CAAC5mB,IAAD,CAAf,EAAuB;IACnB,OAAO,IAAIisC,aAAJ,CAAkB,IAAIzB,aAAJ,CAAkB5Z,IAAlB,CAAlB,CAAP;EACH,CAFD,MAGK;IACD,MAAM0b,QAAQ,GAAGD,aAAa,CAACH,UAAd,CAAyBlB,wBAAzB,CAAkDhrC,IAAlD,CAAjB;;IACA,IAAIssC,QAAQ,IAAI,IAAhB,EAAsB;MAClB,MAAMC,YAAY,GAAGD,QAAQ,CAACtsC,IAA9B;MACA,IAAI1N,KAAK,GAAGg6C,QAAQ,CAACh6C,KAArB;MACA,MAAMs4C,YAAY,GAAG/jB,eAAe,CAAC0lB,YAAD,EAAevsC,IAAf,CAApC;MACA1N,KAAK,GAAGA,KAAK,CAAC+jC,WAAN,CAAkBuU,YAAlB,EAAgCha,IAAhC,CAAR;MACA,OAAO,IAAIqb,aAAJ,CAAkBI,aAAa,CAACH,UAAd,CAAyBr5C,GAAzB,CAA6B05C,YAA7B,EAA2Cj6C,KAA3C,CAAlB,CAAP;IACH,CAND,MAOK;MACD,MAAMo1C,OAAO,GAAG,IAAI8C,aAAJ,CAAkB5Z,IAAlB,CAAhB;MACA,MAAM4b,YAAY,GAAGH,aAAa,CAACH,UAAd,CAAyBhB,OAAzB,CAAiClrC,IAAjC,EAAuC0nC,OAAvC,CAArB;MACA,OAAO,IAAIuE,aAAJ,CAAkBO,YAAlB,CAAP;IACH;EACJ;AACJ;;AACD,SAASC,sBAAT,CAAgCJ,aAAhC,EAA+CrsC,IAA/C,EAAqD0sC,OAArD,EAA8D;EAC1D,IAAIC,QAAQ,GAAGN,aAAf;EACArgC,IAAI,CAAC0gC,OAAD,EAAU,CAAClL,QAAD,EAAW5Q,IAAX,KAAoB;IAC9B+b,QAAQ,GAAGP,qBAAqB,CAACO,QAAD,EAAWlmB,SAAS,CAACzmB,IAAD,EAAOwhC,QAAP,CAApB,EAAsC5Q,IAAtC,CAAhC;EACH,CAFG,CAAJ;EAGA,OAAO+b,QAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,wBAAT,CAAkCP,aAAlC,EAAiDrsC,IAAjD,EAAuD;EACnD,IAAI4mB,WAAW,CAAC5mB,IAAD,CAAf,EAAuB;IACnB,OAAOisC,aAAa,CAACE,KAAd,EAAP;EACH,CAFD,MAGK;IACD,MAAMK,YAAY,GAAGH,aAAa,CAACH,UAAd,CAAyBhB,OAAzB,CAAiClrC,IAAjC,EAAuC,IAAIwqC,aAAJ,CAAkB,IAAlB,CAAvC,CAArB;IACA,OAAO,IAAIyB,aAAJ,CAAkBO,YAAlB,CAAP;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,6BAAT,CAAuCR,aAAvC,EAAsDrsC,IAAtD,EAA4D;EACxD,OAAO8sC,4BAA4B,CAACT,aAAD,EAAgBrsC,IAAhB,CAA5B,IAAqD,IAA5D;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8sC,4BAAT,CAAsCT,aAAtC,EAAqDrsC,IAArD,EAA2D;EACvD,MAAMssC,QAAQ,GAAGD,aAAa,CAACH,UAAd,CAAyBlB,wBAAzB,CAAkDhrC,IAAlD,CAAjB;;EACA,IAAIssC,QAAQ,IAAI,IAAhB,EAAsB;IAClB,OAAOD,aAAa,CAACH,UAAd,CACFpwC,GADE,CACEwwC,QAAQ,CAACtsC,IADX,EAEFg2B,QAFE,CAEOnP,eAAe,CAACylB,QAAQ,CAACtsC,IAAV,EAAgBA,IAAhB,CAFtB,CAAP;EAGH,CAJD,MAKK;IACD,OAAO,IAAP;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+sC,gCAAT,CAA0CV,aAA1C,EAAyD;EACrD,MAAMpP,QAAQ,GAAG,EAAjB;EACA,MAAMrM,IAAI,GAAGyb,aAAa,CAACH,UAAd,CAAyB55C,KAAtC;;EACA,IAAIs+B,IAAI,IAAI,IAAZ,EAAkB;IACd;IACA,IAAI,CAACA,IAAI,CAAC0E,UAAL,EAAL,EAAwB;MACpB1E,IAAI,CAAC2F,YAAL,CAAkBuB,cAAlB,EAAkC,CAAC/B,SAAD,EAAYG,SAAZ,KAA0B;QACxD+G,QAAQ,CAAC/nC,IAAT,CAAc,IAAIy7B,SAAJ,CAAcoF,SAAd,EAAyBG,SAAzB,CAAd;MACH,CAFD;IAGH;EACJ,CAPD,MAQK;IACDmW,aAAa,CAACH,UAAd,CAAyBjP,QAAzB,CAAkClK,gBAAlC,CAAmD,CAACgD,SAAD,EAAYsD,SAAZ,KAA0B;MACzE,IAAIA,SAAS,CAAC/mC,KAAV,IAAmB,IAAvB,EAA6B;QACzB2qC,QAAQ,CAAC/nC,IAAT,CAAc,IAAIy7B,SAAJ,CAAcoF,SAAd,EAAyBsD,SAAS,CAAC/mC,KAAnC,CAAd;MACH;IACJ,CAJD;EAKH;;EACD,OAAO2qC,QAAP;AACH;;AACD,SAAS+P,+BAAT,CAAyCX,aAAzC,EAAwDrsC,IAAxD,EAA8D;EAC1D,IAAI4mB,WAAW,CAAC5mB,IAAD,CAAf,EAAuB;IACnB,OAAOqsC,aAAP;EACH,CAFD,MAGK;IACD,MAAMY,aAAa,GAAGH,4BAA4B,CAACT,aAAD,EAAgBrsC,IAAhB,CAAlD;;IACA,IAAIitC,aAAa,IAAI,IAArB,EAA2B;MACvB,OAAO,IAAIhB,aAAJ,CAAkB,IAAIzB,aAAJ,CAAkByC,aAAlB,CAAlB,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAIhB,aAAJ,CAAkBI,aAAa,CAACH,UAAd,CAAyBxE,OAAzB,CAAiC1nC,IAAjC,CAAlB,CAAP;IACH;EACJ;AACJ;AACD;AACA;AACA;AACA;;;AACA,SAASktC,oBAAT,CAA8Bb,aAA9B,EAA6C;EACzC,OAAOA,aAAa,CAACH,UAAd,CAAyBxlC,OAAzB,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASymC,kBAAT,CAA4Bd,aAA5B,EAA2Czb,IAA3C,EAAiD;EAC7C,OAAOwc,iBAAiB,CAACtnB,YAAY,EAAb,EAAiBumB,aAAa,CAACH,UAA/B,EAA2Ctb,IAA3C,CAAxB;AACH;;AACD,SAASwc,iBAAT,CAA2BxC,YAA3B,EAAyCyC,SAAzC,EAAoDzc,IAApD,EAA0D;EACtD,IAAIyc,SAAS,CAAC/6C,KAAV,IAAmB,IAAvB,EAA6B;IACzB;IACA,OAAOs+B,IAAI,CAACyF,WAAL,CAAiBuU,YAAjB,EAA+ByC,SAAS,CAAC/6C,KAAzC,CAAP;EACH,CAHD,MAIK;IACD,IAAIg7C,aAAa,GAAG,IAApB;IACAD,SAAS,CAACpQ,QAAV,CAAmBlK,gBAAnB,CAAoC,CAACyO,QAAD,EAAWnI,SAAX,KAAyB;MACzD,IAAImI,QAAQ,KAAK,WAAjB,EAA8B;QAC1B;QACA;QACA17B,sDAAM,CAACuzB,SAAS,CAAC/mC,KAAV,KAAoB,IAArB,EAA2B,2CAA3B,CAAN;QACAg7C,aAAa,GAAGjU,SAAS,CAAC/mC,KAA1B;MACH,CALD,MAMK;QACDs+B,IAAI,GAAGwc,iBAAiB,CAAC3mB,SAAS,CAACmkB,YAAD,EAAepJ,QAAf,CAAV,EAAoCnI,SAApC,EAA+CzI,IAA/C,CAAxB;MACH;IACJ,CAVD,EAFC,CAaD;;IACA,IAAI,CAACA,IAAI,CAACoF,QAAL,CAAc4U,YAAd,EAA4BlkC,OAA5B,EAAD,IAA0C4mC,aAAa,KAAK,IAAhE,EAAsE;MAClE1c,IAAI,GAAGA,IAAI,CAACyF,WAAL,CAAiB5P,SAAS,CAACmkB,YAAD,EAAe,WAAf,CAA1B,EAAuD0C,aAAvD,CAAP;IACH;;IACD,OAAO1c,IAAP;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,SAAS2c,oBAAT,CAA8BF,SAA9B,EAAyCrtC,IAAzC,EAA+C;EAC3C,OAAOwtC,eAAe,CAACxtC,IAAD,EAAOqtC,SAAP,CAAtB;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASI,qBAAT,CAA+BJ,SAA/B,EAA0CrtC,IAA1C,EAAgD7I,IAAhD,EAAsDu2C,OAAtD,EAA+D/kB,OAA/D,EAAwE;EACpE7iB,sDAAM,CAAC4nC,OAAO,GAAGL,SAAS,CAACM,WAArB,EAAkC,8CAAlC,CAAN;;EACA,IAAIhlB,OAAO,KAAKh2B,SAAhB,EAA2B;IACvBg2B,OAAO,GAAG,IAAV;EACH;;EACD0kB,SAAS,CAACO,SAAV,CAAoB14C,IAApB,CAAyB;IACrB8K,IADqB;IAErB7I,IAFqB;IAGrBu2C,OAHqB;IAIrB/kB;EAJqB,CAAzB;;EAMA,IAAIA,OAAJ,EAAa;IACT0kB,SAAS,CAACQ,aAAV,GAA0BzB,qBAAqB,CAACiB,SAAS,CAACQ,aAAX,EAA0B7tC,IAA1B,EAAgC7I,IAAhC,CAA/C;EACH;;EACDk2C,SAAS,CAACM,WAAV,GAAwBD,OAAxB;AACH;AACD;AACA;AACA;;;AACA,SAASI,iBAAT,CAA2BT,SAA3B,EAAsCrtC,IAAtC,EAA4C+tC,eAA5C,EAA6DL,OAA7D,EAAsE;EAClE5nC,sDAAM,CAAC4nC,OAAO,GAAGL,SAAS,CAACM,WAArB,EAAkC,8CAAlC,CAAN;EACAN,SAAS,CAACO,SAAV,CAAoB14C,IAApB,CAAyB;IACrB8K,IADqB;IAErBi9B,QAAQ,EAAE8Q,eAFW;IAGrBL,OAHqB;IAIrB/kB,OAAO,EAAE;EAJY,CAAzB;EAMA0kB,SAAS,CAACQ,aAAV,GAA0BpB,sBAAsB,CAACY,SAAS,CAACQ,aAAX,EAA0B7tC,IAA1B,EAAgC+tC,eAAhC,CAAhD;EACAV,SAAS,CAACM,WAAV,GAAwBD,OAAxB;AACH;;AACD,SAASM,iBAAT,CAA2BX,SAA3B,EAAsCK,OAAtC,EAA+C;EAC3C,KAAK,IAAIl4C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG63C,SAAS,CAACO,SAAV,CAAoBr4C,MAAxC,EAAgDC,CAAC,EAAjD,EAAqD;IACjD,MAAMy4C,MAAM,GAAGZ,SAAS,CAACO,SAAV,CAAoBp4C,CAApB,CAAf;;IACA,IAAIy4C,MAAM,CAACP,OAAP,KAAmBA,OAAvB,EAAgC;MAC5B,OAAOO,MAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,oBAAT,CAA8Bb,SAA9B,EAAyCK,OAAzC,EAAkD;EAC9C;EACA;EACA;EACA;EACA,MAAMjS,GAAG,GAAG4R,SAAS,CAACO,SAAV,CAAoBO,SAApB,CAA8B5hC,CAAC,IAAI;IAC3C,OAAOA,CAAC,CAACmhC,OAAF,KAAcA,OAArB;EACH,CAFW,CAAZ;EAGA5nC,sDAAM,CAAC21B,GAAG,IAAI,CAAR,EAAW,8CAAX,CAAN;EACA,MAAM2S,aAAa,GAAGf,SAAS,CAACO,SAAV,CAAoBnS,GAApB,CAAtB;EACA4R,SAAS,CAACO,SAAV,CAAoB33C,MAApB,CAA2BwlC,GAA3B,EAAgC,CAAhC;EACA,IAAI4S,sBAAsB,GAAGD,aAAa,CAACzlB,OAA3C;EACA,IAAI2lB,mCAAmC,GAAG,KAA1C;EACA,IAAI94C,CAAC,GAAG63C,SAAS,CAACO,SAAV,CAAoBr4C,MAApB,GAA6B,CAArC;;EACA,OAAO84C,sBAAsB,IAAI74C,CAAC,IAAI,CAAtC,EAAyC;IACrC,MAAM+4C,YAAY,GAAGlB,SAAS,CAACO,SAAV,CAAoBp4C,CAApB,CAArB;;IACA,IAAI+4C,YAAY,CAAC5lB,OAAjB,EAA0B;MACtB,IAAInzB,CAAC,IAAIimC,GAAL,IACA+S,4BAA4B,CAACD,YAAD,EAAeH,aAAa,CAACpuC,IAA7B,CADhC,EACoE;QAChE;QACAquC,sBAAsB,GAAG,KAAzB;MACH,CAJD,MAKK,IAAI3mB,YAAY,CAAC0mB,aAAa,CAACpuC,IAAf,EAAqBuuC,YAAY,CAACvuC,IAAlC,CAAhB,EAAyD;QAC1D;QACAsuC,mCAAmC,GAAG,IAAtC;MACH;IACJ;;IACD94C,CAAC;EACJ;;EACD,IAAI,CAAC64C,sBAAL,EAA6B;IACzB,OAAO,KAAP;EACH,CAFD,MAGK,IAAIC,mCAAJ,EAAyC;IAC1C;IACAG,mBAAmB,CAACpB,SAAD,CAAnB;IACA,OAAO,IAAP;EACH,CAJI,MAKA;IACD;IACA,IAAIe,aAAa,CAACj3C,IAAlB,EAAwB;MACpBk2C,SAAS,CAACQ,aAAV,GAA0BjB,wBAAwB,CAACS,SAAS,CAACQ,aAAX,EAA0BO,aAAa,CAACpuC,IAAxC,CAAlD;IACH,CAFD,MAGK;MACD,MAAMi9B,QAAQ,GAAGmR,aAAa,CAACnR,QAA/B;MACAjxB,IAAI,CAACixB,QAAD,EAAYlH,SAAD,IAAe;QAC1BsX,SAAS,CAACQ,aAAV,GAA0BjB,wBAAwB,CAACS,SAAS,CAACQ,aAAX,EAA0BpnB,SAAS,CAAC2nB,aAAa,CAACpuC,IAAf,EAAqB+1B,SAArB,CAAnC,CAAlD;MACH,CAFG,CAAJ;IAGH;;IACD,OAAO,IAAP;EACH;AACJ;;AACD,SAASyY,4BAAT,CAAsCE,WAAtC,EAAmD1uC,IAAnD,EAAyD;EACrD,IAAI0uC,WAAW,CAACv3C,IAAhB,EAAsB;IAClB,OAAOuwB,YAAY,CAACgnB,WAAW,CAAC1uC,IAAb,EAAmBA,IAAnB,CAAnB;EACH,CAFD,MAGK;IACD,KAAK,MAAM+1B,SAAX,IAAwB2Y,WAAW,CAACzR,QAApC,EAA8C;MAC1C,IAAIyR,WAAW,CAACzR,QAAZ,CAAqBhxB,cAArB,CAAoC8pB,SAApC,KACArO,YAAY,CAACjB,SAAS,CAACioB,WAAW,CAAC1uC,IAAb,EAAmB+1B,SAAnB,CAAV,EAAyC/1B,IAAzC,CADhB,EACgE;QAC5D,OAAO,IAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH;AACJ;AACD;AACA;AACA;;;AACA,SAASyuC,mBAAT,CAA6BpB,SAA7B,EAAwC;EACpCA,SAAS,CAACQ,aAAV,GAA0Bc,mBAAmB,CAACtB,SAAS,CAACO,SAAX,EAAsBgB,uBAAtB,EAA+C9oB,YAAY,EAA3D,CAA7C;;EACA,IAAIunB,SAAS,CAACO,SAAV,CAAoBr4C,MAApB,GAA6B,CAAjC,EAAoC;IAChC83C,SAAS,CAACM,WAAV,GACIN,SAAS,CAACO,SAAV,CAAoBP,SAAS,CAACO,SAAV,CAAoBr4C,MAApB,GAA6B,CAAjD,EAAoDm4C,OADxD;EAEH,CAHD,MAIK;IACDL,SAAS,CAACM,WAAV,GAAwB,CAAC,CAAzB;EACH;AACJ;AACD;AACA;AACA;;;AACA,SAASiB,uBAAT,CAAiCr1B,KAAjC,EAAwC;EACpC,OAAOA,KAAK,CAACoP,OAAb;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASgmB,mBAAT,CAA6BE,MAA7B,EAAqC94C,MAArC,EAA6C+4C,QAA7C,EAAuD;EACnD,IAAIzC,aAAa,GAAGJ,aAAa,CAACE,KAAd,EAApB;;EACA,KAAK,IAAI32C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGq5C,MAAM,CAACt5C,MAA3B,EAAmC,EAAEC,CAArC,EAAwC;IACpC,MAAM+jB,KAAK,GAAGs1B,MAAM,CAACr5C,CAAD,CAApB,CADoC,CAEpC;IACA;IACA;;IACA,IAAIO,MAAM,CAACwjB,KAAD,CAAV,EAAmB;MACf,MAAMw1B,SAAS,GAAGx1B,KAAK,CAACvZ,IAAxB;MACA,IAAI4qC,YAAJ;;MACA,IAAIrxB,KAAK,CAACpiB,IAAV,EAAgB;QACZ,IAAIuwB,YAAY,CAAConB,QAAD,EAAWC,SAAX,CAAhB,EAAuC;UACnCnE,YAAY,GAAG/jB,eAAe,CAACioB,QAAD,EAAWC,SAAX,CAA9B;UACA1C,aAAa,GAAGD,qBAAqB,CAACC,aAAD,EAAgBzB,YAAhB,EAA8BrxB,KAAK,CAACpiB,IAApC,CAArC;QACH,CAHD,MAIK,IAAIuwB,YAAY,CAACqnB,SAAD,EAAYD,QAAZ,CAAhB,EAAuC;UACxClE,YAAY,GAAG/jB,eAAe,CAACkoB,SAAD,EAAYD,QAAZ,CAA9B;UACAzC,aAAa,GAAGD,qBAAqB,CAACC,aAAD,EAAgBvmB,YAAY,EAA5B,EAAgCvM,KAAK,CAACpiB,IAAN,CAAW6+B,QAAX,CAAoB4U,YAApB,CAAhC,CAArC;QACH,CAHI,MAIA;MACR,CAVD,MAWK,IAAIrxB,KAAK,CAAC0jB,QAAV,EAAoB;QACrB,IAAIvV,YAAY,CAAConB,QAAD,EAAWC,SAAX,CAAhB,EAAuC;UACnCnE,YAAY,GAAG/jB,eAAe,CAACioB,QAAD,EAAWC,SAAX,CAA9B;UACA1C,aAAa,GAAGI,sBAAsB,CAACJ,aAAD,EAAgBzB,YAAhB,EAA8BrxB,KAAK,CAAC0jB,QAApC,CAAtC;QACH,CAHD,MAIK,IAAIvV,YAAY,CAACqnB,SAAD,EAAYD,QAAZ,CAAhB,EAAuC;UACxClE,YAAY,GAAG/jB,eAAe,CAACkoB,SAAD,EAAYD,QAAZ,CAA9B;;UACA,IAAIloB,WAAW,CAACgkB,YAAD,CAAf,EAA+B;YAC3ByB,aAAa,GAAGI,sBAAsB,CAACJ,aAAD,EAAgBvmB,YAAY,EAA5B,EAAgCvM,KAAK,CAAC0jB,QAAtC,CAAtC;UACH,CAFD,MAGK;YACD,MAAMpmC,KAAK,GAAG0P,uDAAO,CAACgT,KAAK,CAAC0jB,QAAP,EAAiBlX,YAAY,CAAC6kB,YAAD,CAA7B,CAArB;;YACA,IAAI/zC,KAAJ,EAAW;cACP;cACA,MAAMm4C,QAAQ,GAAGn4C,KAAK,CAACm/B,QAAN,CAAe/P,YAAY,CAAC2kB,YAAD,CAA3B,CAAjB;cACAyB,aAAa,GAAGD,qBAAqB,CAACC,aAAD,EAAgBvmB,YAAY,EAA5B,EAAgCkpB,QAAhC,CAArC;YACH;UACJ;QACJ,CAbI,MAcA;MACR,CApBI,MAqBA;QACD,MAAMpoC,8DAAc,CAAC,4CAAD,CAApB;MACH;IACJ;EACJ;;EACD,OAAOylC,aAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4C,+BAAT,CAAyC5B,SAAzC,EAAoD6B,QAApD,EAA8DC,mBAA9D,EAAmFC,iBAAnF,EAAsGC,mBAAtG,EAA2H;EACvH,IAAI,CAACD,iBAAD,IAAsB,CAACC,mBAA3B,EAAgD;IAC5C,MAAMpC,aAAa,GAAGH,4BAA4B,CAACO,SAAS,CAACQ,aAAX,EAA0BqB,QAA1B,CAAlD;;IACA,IAAIjC,aAAa,IAAI,IAArB,EAA2B;MACvB,OAAOA,aAAP;IACH,CAFD,MAGK;MACD,MAAMqC,QAAQ,GAAGtC,+BAA+B,CAACK,SAAS,CAACQ,aAAX,EAA0BqB,QAA1B,CAAhD;;MACA,IAAIhC,oBAAoB,CAACoC,QAAD,CAAxB,EAAoC;QAChC,OAAOH,mBAAP;MACH,CAFD,MAGK,IAAIA,mBAAmB,IAAI,IAAvB,IACL,CAACtC,6BAA6B,CAACyC,QAAD,EAAWxpB,YAAY,EAAvB,CAD7B,EACyD;QAC1D;QACA,OAAO,IAAP;MACH,CAJI,MAKA;QACD,MAAMypB,YAAY,GAAGJ,mBAAmB,IAAInU,YAAY,CAACpI,UAAzD;QACA,OAAOua,kBAAkB,CAACmC,QAAD,EAAWC,YAAX,CAAzB;MACH;IACJ;EACJ,CApBD,MAqBK;IACD,MAAM5+C,KAAK,GAAGq8C,+BAA+B,CAACK,SAAS,CAACQ,aAAX,EAA0BqB,QAA1B,CAA7C;;IACA,IAAI,CAACG,mBAAD,IAAwBnC,oBAAoB,CAACv8C,KAAD,CAAhD,EAAyD;MACrD,OAAOw+C,mBAAP;IACH,CAFD,MAGK;MACD;MACA,IAAI,CAACE,mBAAD,IACAF,mBAAmB,IAAI,IADvB,IAEA,CAACtC,6BAA6B,CAACl8C,KAAD,EAAQm1B,YAAY,EAApB,CAFlC,EAE2D;QACvD,OAAO,IAAP;MACH,CAJD,MAKK;QACD,MAAM/vB,MAAM,GAAG,UAAUwjB,KAAV,EAAiB;UAC5B,OAAQ,CAACA,KAAK,CAACoP,OAAN,IAAiB0mB,mBAAlB,MACH,CAACD,iBAAD,IACG,CAAC,CAACA,iBAAiB,CAAC/3C,OAAlB,CAA0BkiB,KAAK,CAACm0B,OAAhC,CAFF,MAGHhmB,YAAY,CAACnO,KAAK,CAACvZ,IAAP,EAAakvC,QAAb,CAAZ,IACGxnB,YAAY,CAACwnB,QAAD,EAAW31B,KAAK,CAACvZ,IAAjB,CAJZ,CAAR;QAKH,CAND;;QAOA,MAAMwvC,WAAW,GAAGb,mBAAmB,CAACtB,SAAS,CAACO,SAAX,EAAsB73C,MAAtB,EAA8Bm5C,QAA9B,CAAvC;QACA,MAAMK,YAAY,GAAGJ,mBAAmB,IAAInU,YAAY,CAACpI,UAAzD;QACA,OAAOua,kBAAkB,CAACqC,WAAD,EAAcD,YAAd,CAAzB;MACH;IACJ;EACJ;AACJ;AACD;AACA;AACA;AACA;;;AACA,SAASE,kCAAT,CAA4CpC,SAA5C,EAAuD6B,QAAvD,EAAiEQ,sBAAjE,EAAyF;EACrF,IAAIC,gBAAgB,GAAG3U,YAAY,CAACpI,UAApC;EACA,MAAMgd,WAAW,GAAG9C,4BAA4B,CAACO,SAAS,CAACQ,aAAX,EAA0BqB,QAA1B,CAAhD;;EACA,IAAIU,WAAJ,EAAiB;IACb,IAAI,CAACA,WAAW,CAACta,UAAZ,EAAL,EAA+B;MAC3B;MACAsa,WAAW,CAACrZ,YAAZ,CAAyBuB,cAAzB,EAAyC,CAAC/B,SAAD,EAAY0L,SAAZ,KAA0B;QAC/DkO,gBAAgB,GAAGA,gBAAgB,CAACxZ,oBAAjB,CAAsCJ,SAAtC,EAAiD0L,SAAjD,CAAnB;MACH,CAFD;IAGH;;IACD,OAAOkO,gBAAP;EACH,CARD,MASK,IAAID,sBAAJ,EAA4B;IAC7B;IACA;IACA,MAAM/+C,KAAK,GAAGq8C,+BAA+B,CAACK,SAAS,CAACQ,aAAX,EAA0BqB,QAA1B,CAA7C;IACAQ,sBAAsB,CAACnZ,YAAvB,CAAoCuB,cAApC,EAAoD,CAAC/B,SAAD,EAAYG,SAAZ,KAA0B;MAC1E,MAAMtF,IAAI,GAAGuc,kBAAkB,CAACH,+BAA+B,CAACr8C,KAAD,EAAQ,IAAI40B,IAAJ,CAASwQ,SAAT,CAAR,CAAhC,EAA8DG,SAA9D,CAA/B;MACAyZ,gBAAgB,GAAGA,gBAAgB,CAACxZ,oBAAjB,CAAsCJ,SAAtC,EAAiDnF,IAAjD,CAAnB;IACH,CAHD,EAJ6B,CAQ7B;;IACAmc,gCAAgC,CAACp8C,KAAD,CAAhC,CAAwCsE,OAAxC,CAAgD8jC,SAAS,IAAI;MACzD4W,gBAAgB,GAAGA,gBAAgB,CAACxZ,oBAAjB,CAAsC4C,SAAS,CAAC9/B,IAAhD,EAAsD8/B,SAAS,CAACnI,IAAhE,CAAnB;IACH,CAFD;IAGA,OAAO+e,gBAAP;EACH,CAbI,MAcA;IACD;IACA;IACA,MAAMh/C,KAAK,GAAGq8C,+BAA+B,CAACK,SAAS,CAACQ,aAAX,EAA0BqB,QAA1B,CAA7C;IACAnC,gCAAgC,CAACp8C,KAAD,CAAhC,CAAwCsE,OAAxC,CAAgD8jC,SAAS,IAAI;MACzD4W,gBAAgB,GAAGA,gBAAgB,CAACxZ,oBAAjB,CAAsC4C,SAAS,CAAC9/B,IAAhD,EAAsD8/B,SAAS,CAACnI,IAAhE,CAAnB;IACH,CAFD;IAGA,OAAO+e,gBAAP;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,2CAAT,CAAqDxC,SAArD,EAAgE6B,QAAhE,EAA0ExE,SAA1E,EAAqFoF,iBAArF,EAAwGC,kBAAxG,EAA4H;EACxHjqC,sDAAM,CAACgqC,iBAAiB,IAAIC,kBAAtB,EAA0C,2DAA1C,CAAN;EACA,MAAM/vC,IAAI,GAAGymB,SAAS,CAACyoB,QAAD,EAAWxE,SAAX,CAAtB;;EACA,IAAImC,6BAA6B,CAACQ,SAAS,CAACQ,aAAX,EAA0B7tC,IAA1B,CAAjC,EAAkE;IAC9D;IACA;IACA,OAAO,IAAP;EACH,CAJD,MAKK;IACD;IACA,MAAMgwC,UAAU,GAAGhD,+BAA+B,CAACK,SAAS,CAACQ,aAAX,EAA0B7tC,IAA1B,CAAlD;;IACA,IAAIktC,oBAAoB,CAAC8C,UAAD,CAAxB,EAAsC;MAClC;MACA,OAAOD,kBAAkB,CAAC/Z,QAAnB,CAA4B0U,SAA5B,CAAP;IACH,CAHD,MAIK;MACD;MACA;MACA;MACA;MACA;MACA;MACA,OAAOyC,kBAAkB,CAAC6C,UAAD,EAAaD,kBAAkB,CAAC/Z,QAAnB,CAA4B0U,SAA5B,CAAb,CAAzB;IACH;EACJ;AACJ;AACD;AACA;AACA;AACA;;;AACA,SAASuF,0BAAT,CAAoC5C,SAApC,EAA+C6B,QAA/C,EAAyD1N,QAAzD,EAAmEuO,kBAAnE,EAAuF;EACnF,MAAM/vC,IAAI,GAAGymB,SAAS,CAACyoB,QAAD,EAAW1N,QAAX,CAAtB;EACA,MAAMyL,aAAa,GAAGH,4BAA4B,CAACO,SAAS,CAACQ,aAAX,EAA0B7tC,IAA1B,CAAlD;;EACA,IAAIitC,aAAa,IAAI,IAArB,EAA2B;IACvB,OAAOA,aAAP;EACH,CAFD,MAGK;IACD,IAAI8C,kBAAkB,CAACvH,kBAAnB,CAAsChH,QAAtC,CAAJ,EAAqD;MACjD,MAAMwO,UAAU,GAAGhD,+BAA+B,CAACK,SAAS,CAACQ,aAAX,EAA0B7tC,IAA1B,CAAlD;MACA,OAAOmtC,kBAAkB,CAAC6C,UAAD,EAAaD,kBAAkB,CAAC/K,OAAnB,GAA6BlP,iBAA7B,CAA+C0L,QAA/C,CAAb,CAAzB;IACH,CAHD,MAIK;MACD,OAAO,IAAP;IACH;EACJ;AACJ;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS0O,uBAAT,CAAiC7C,SAAjC,EAA4CrtC,IAA5C,EAAkD;EAC9C,OAAO8sC,4BAA4B,CAACO,SAAS,CAACQ,aAAX,EAA0B7tC,IAA1B,CAAnC;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASmwC,yBAAT,CAAmC9C,SAAnC,EAA8C6B,QAA9C,EAAwDkB,kBAAxD,EAA4EnU,SAA5E,EAAuFnJ,KAAvF,EAA8F7lB,OAA9F,EAAuG2e,KAAvG,EAA8G;EAC1G,IAAIykB,SAAJ;EACA,MAAM1/C,KAAK,GAAGq8C,+BAA+B,CAACK,SAAS,CAACQ,aAAX,EAA0BqB,QAA1B,CAA7C;EACA,MAAMjC,aAAa,GAAGH,4BAA4B,CAACn8C,KAAD,EAAQm1B,YAAY,EAApB,CAAlD;;EACA,IAAImnB,aAAa,IAAI,IAArB,EAA2B;IACvBoD,SAAS,GAAGpD,aAAZ;EACH,CAFD,MAGK,IAAImD,kBAAkB,IAAI,IAA1B,EAAgC;IACjCC,SAAS,GAAGlD,kBAAkB,CAACx8C,KAAD,EAAQy/C,kBAAR,CAA9B;EACH,CAFI,MAGA;IACD;IACA,OAAO,EAAP;EACH;;EACDC,SAAS,GAAGA,SAAS,CAAClZ,SAAV,CAAoBvL,KAApB,CAAZ;;EACA,IAAI,CAACykB,SAAS,CAAC3pC,OAAV,EAAD,IAAwB,CAAC2pC,SAAS,CAAC/a,UAAV,EAA7B,EAAqD;IACjD,MAAMgb,KAAK,GAAG,EAAd;IACA,MAAM/oB,GAAG,GAAGqE,KAAK,CAACmF,UAAN,EAAZ;IACA,MAAMuJ,IAAI,GAAGrtB,OAAO,GACdojC,SAAS,CAACxb,sBAAV,CAAiCoH,SAAjC,EAA4CrQ,KAA5C,CADc,GAEdykB,SAAS,CAACzb,eAAV,CAA0BqH,SAA1B,EAAqCrQ,KAArC,CAFN;IAGA,IAAI13B,IAAI,GAAGomC,IAAI,CAACjI,OAAL,EAAX;;IACA,OAAOn+B,IAAI,IAAIo8C,KAAK,CAAC/6C,MAAN,GAAeu9B,KAA9B,EAAqC;MACjC,IAAIvL,GAAG,CAACrzB,IAAD,EAAO+nC,SAAP,CAAH,KAAyB,CAA7B,EAAgC;QAC5BqU,KAAK,CAACp7C,IAAN,CAAWhB,IAAX;MACH;;MACDA,IAAI,GAAGomC,IAAI,CAACjI,OAAL,EAAP;IACH;;IACD,OAAOie,KAAP;EACH,CAdD,MAeK;IACD,OAAO,EAAP;EACH;AACJ;;AACD,SAAS9D,YAAT,GAAwB;EACpB,OAAO;IACHqB,aAAa,EAAE5B,aAAa,CAACE,KAAd,EADZ;IAEHyB,SAAS,EAAE,EAFR;IAGHD,WAAW,EAAE,CAAC;EAHX,CAAP;AAKH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4C,kCAAT,CAA4CC,YAA5C,EAA0DrB,mBAA1D,EAA+EC,iBAA/E,EAAkGC,mBAAlG,EAAuH;EACnH,OAAOJ,+BAA+B,CAACuB,YAAY,CAACnD,SAAd,EAAyBmD,YAAY,CAACtB,QAAtC,EAAgDC,mBAAhD,EAAqEC,iBAArE,EAAwFC,mBAAxF,CAAtC;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASoB,qCAAT,CAA+CD,YAA/C,EAA6Dd,sBAA7D,EAAqF;EACjF,OAAOD,kCAAkC,CAACe,YAAY,CAACnD,SAAd,EAAyBmD,YAAY,CAACtB,QAAtC,EAAgDQ,sBAAhD,CAAzC;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgB,8CAAT,CAAwDF,YAAxD,EAAsExwC,IAAtE,EAA4E8vC,iBAA5E,EAA+FC,kBAA/F,EAAmH;EAC/G,OAAOF,2CAA2C,CAACW,YAAY,CAACnD,SAAd,EAAyBmD,YAAY,CAACtB,QAAtC,EAAgDlvC,IAAhD,EAAsD8vC,iBAAtD,EAAyEC,kBAAzE,CAAlD;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASY,0BAAT,CAAoCH,YAApC,EAAkDxwC,IAAlD,EAAwD;EACpD,OAAOkwC,uBAAuB,CAACM,YAAY,CAACnD,SAAd,EAAyB5mB,SAAS,CAAC+pB,YAAY,CAACtB,QAAd,EAAwBlvC,IAAxB,CAAlC,CAA9B;AACH;AACD;AACA;AACA;AACA;;;AACA,SAAS4wC,4BAAT,CAAsCJ,YAAtC,EAAoDJ,kBAApD,EAAwEnU,SAAxE,EAAmFnJ,KAAnF,EAA0F7lB,OAA1F,EAAmG2e,KAAnG,EAA0G;EACtG,OAAOukB,yBAAyB,CAACK,YAAY,CAACnD,SAAd,EAAyBmD,YAAY,CAACtB,QAAtC,EAAgDkB,kBAAhD,EAAoEnU,SAApE,EAA+EnJ,KAA/E,EAAsF7lB,OAAtF,EAA+F2e,KAA/F,CAAhC;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASilB,6BAAT,CAAuCL,YAAvC,EAAqDhP,QAArD,EAA+DsP,mBAA/D,EAAoF;EAChF,OAAOb,0BAA0B,CAACO,YAAY,CAACnD,SAAd,EAAyBmD,YAAY,CAACtB,QAAtC,EAAgD1N,QAAhD,EAA0DsP,mBAA1D,CAAjC;AACH;AACD;AACA;AACA;;;AACA,SAASC,iBAAT,CAA2BP,YAA3B,EAAyCza,SAAzC,EAAoD;EAChD,OAAOyX,eAAe,CAAC/mB,SAAS,CAAC+pB,YAAY,CAACtB,QAAd,EAAwBnZ,SAAxB,CAAV,EAA8Cya,YAAY,CAACnD,SAA3D,CAAtB;AACH;;AACD,SAASG,eAAT,CAAyBxtC,IAAzB,EAA+BqtC,SAA/B,EAA0C;EACtC,OAAO;IACH6B,QAAQ,EAAElvC,IADP;IAEHqtC;EAFG,CAAP;AAIH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM2D,sBAAN,CAA6B;EACzBh4C,WAAW,GAAG;IACV,KAAKi4C,SAAL,GAAiB,IAAIpnB,GAAJ,EAAjB;EACH;;EACDgV,gBAAgB,CAACmK,MAAD,EAAS;IACrB,MAAMp0C,IAAI,GAAGo0C,MAAM,CAACp0C,IAApB;IACA,MAAM4sC,QAAQ,GAAGwH,MAAM,CAACjT,SAAxB;IACAjwB,sDAAM,CAAClR,IAAI,KAAK;IAAc;IAAvB,GACHA,IAAI,KAAK;IAAgB;IADtB,GAEHA,IAAI,KAAK;IAAgB;IAFvB,EAEuD,2CAFvD,CAAN;IAGAkR,sDAAM,CAAC07B,QAAQ,KAAK,WAAd,EAA2B,iDAA3B,CAAN;IACA,MAAM0P,SAAS,GAAG,KAAKD,SAAL,CAAen1C,GAAf,CAAmB0lC,QAAnB,CAAlB;;IACA,IAAI0P,SAAJ,EAAe;MACX,MAAMC,OAAO,GAAGD,SAAS,CAACt8C,IAA1B;;MACA,IAAIA,IAAI,KAAK;MAAc;MAAvB,GACAu8C,OAAO,KAAK;MAAgB;MADhC,EACgE;QAC5D,KAAKF,SAAL,CAAep+C,GAAf,CAAmB2uC,QAAnB,EAA6BrD,kBAAkB,CAACqD,QAAD,EAAWwH,MAAM,CAAChL,YAAlB,EAAgCkT,SAAS,CAAClT,YAA1C,CAA/C;MACH,CAHD,MAIK,IAAIppC,IAAI,KAAK;MAAgB;MAAzB,GACLu8C,OAAO,KAAK;MAAc;MADzB,EACuD;QACxD,KAAKF,SAAL,CAAextC,MAAf,CAAsB+9B,QAAtB;MACH,CAHI,MAIA,IAAI5sC,IAAI,KAAK;MAAgB;MAAzB,GACLu8C,OAAO,KAAK;MAAgB;MAD3B,EAC2D;QAC5D,KAAKF,SAAL,CAAep+C,GAAf,CAAmB2uC,QAAnB,EAA6BtD,kBAAkB,CAACsD,QAAD,EAAW0P,SAAS,CAAC9S,OAArB,CAA/C;MACH,CAHI,MAIA,IAAIxpC,IAAI,KAAK;MAAgB;MAAzB,GACLu8C,OAAO,KAAK;MAAc;MADzB,EACuD;QACxD,KAAKF,SAAL,CAAep+C,GAAf,CAAmB2uC,QAAnB,EAA6BvD,gBAAgB,CAACuD,QAAD,EAAWwH,MAAM,CAAChL,YAAlB,CAA7C;MACH,CAHI,MAIA,IAAIppC,IAAI,KAAK;MAAgB;MAAzB,GACLu8C,OAAO,KAAK;MAAgB;MAD3B,EAC2D;QAC5D,KAAKF,SAAL,CAAep+C,GAAf,CAAmB2uC,QAAnB,EAA6BrD,kBAAkB,CAACqD,QAAD,EAAWwH,MAAM,CAAChL,YAAlB,EAAgCkT,SAAS,CAAC9S,OAA1C,CAA/C;MACH,CAHI,MAIA;QACD,MAAMx3B,8DAAc,CAAC,qCACjBoiC,MADiB,GAEjB,kBAFiB,GAGjBkI,SAHgB,CAApB;MAIH;IACJ,CA5BD,MA6BK;MACD,KAAKD,SAAL,CAAep+C,GAAf,CAAmB2uC,QAAnB,EAA6BwH,MAA7B;IACH;EACJ;;EACDoI,UAAU,GAAG;IACT,OAAO5xC,KAAK,CAAC6xC,IAAN,CAAW,KAAKJ,SAAL,CAAepuC,MAAf,EAAX,CAAP;EACH;;AA/CwB;AAkD7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMyuC,sBAAN,CAA6B;EACzBC,gBAAgB,CAAC/P,QAAD,EAAW;IACvB,OAAO,IAAP;EACH;;EACDQ,kBAAkB,CAACpW,KAAD,EAAQ/0B,KAAR,EAAeoW,OAAf,EAAwB;IACtC,OAAO,IAAP;EACH;;AANwB;AAQ7B;AACA;AACA;;;AACA,MAAMukC,wBAAwB,GAAG,IAAIF,sBAAJ,EAAjC;AACA;AACA;AACA;AACA;;AACA,MAAMG,4BAAN,CAAmC;EAC/Bz4C,WAAW,CAAC04C,OAAD,EAAUC,UAAV,EAAsBC,uBAAuB,GAAG,IAAhD,EAAsD;IAC7D,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,uBAAL,GAA+BA,uBAA/B;EACH;;EACDL,gBAAgB,CAAC/P,QAAD,EAAW;IACvB,MAAM5Q,IAAI,GAAG,KAAK+gB,UAAL,CAAgB9I,UAA7B;;IACA,IAAIjY,IAAI,CAAC4X,kBAAL,CAAwBhH,QAAxB,CAAJ,EAAuC;MACnC,OAAO5Q,IAAI,CAACoU,OAAL,GAAelP,iBAAf,CAAiC0L,QAAjC,CAAP;IACH,CAFD,MAGK;MACD,MAAMqQ,UAAU,GAAG,KAAKD,uBAAL,IAAgC,IAAhC,GACb,IAAI3J,SAAJ,CAAc,KAAK2J,uBAAnB,EAA4C,IAA5C,EAAkD,KAAlD,CADa,GAEb,KAAKD,UAAL,CAAgB7H,WAFtB;MAGA,OAAO+G,6BAA6B,CAAC,KAAKa,OAAN,EAAelQ,QAAf,EAAyBqQ,UAAzB,CAApC;IACH;EACJ;;EACD7P,kBAAkB,CAACpW,KAAD,EAAQ/0B,KAAR,EAAeoW,OAAf,EAAwB;IACtC,MAAMmjC,kBAAkB,GAAG,KAAKwB,uBAAL,IAAgC,IAAhC,GACrB,KAAKA,uBADgB,GAErBvH,8BAA8B,CAAC,KAAKsH,UAAN,CAFpC;IAGA,MAAMrB,KAAK,GAAGM,4BAA4B,CAAC,KAAKc,OAAN,EAAetB,kBAAf,EAAmCv5C,KAAnC,EAA0C,CAA1C,EAA6CoW,OAA7C,EAAsD2e,KAAtD,CAA1C;;IACA,IAAI0kB,KAAK,CAAC/6C,MAAN,KAAiB,CAArB,EAAwB;MACpB,OAAO,IAAP;IACH,CAFD,MAGK;MACD,OAAO+6C,KAAK,CAAC,CAAD,CAAZ;IACH;EACJ;;AA7B8B;AAgCnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwB,gBAAT,CAA0B/7C,MAA1B,EAAkC;EAC9B,OAAO;IAAEA;EAAF,CAAP;AACH;;AACD,SAASg8C,0BAAT,CAAoCC,aAApC,EAAmDhI,SAAnD,EAA8D;EAC1DlkC,sDAAM,CAACkkC,SAAS,CAACnB,UAAV,CAAqB7D,OAArB,GAA+B5N,SAA/B,CAAyC4a,aAAa,CAACj8C,MAAd,CAAqBk3B,QAArB,EAAzC,CAAD,EAA4E,wBAA5E,CAAN;EACAnnB,sDAAM,CAACkkC,SAAS,CAACF,WAAV,CAAsB9E,OAAtB,GAAgC5N,SAAhC,CAA0C4a,aAAa,CAACj8C,MAAd,CAAqBk3B,QAArB,EAA1C,CAAD,EAA6E,yBAA7E,CAAN;AACH;;AACD,SAASglB,2BAAT,CAAqCD,aAArC,EAAoDE,YAApD,EAAkE36C,SAAlE,EAA6E46C,WAA7E,EAA0FC,aAA1F,EAAyG;EACrG,MAAMC,WAAW,GAAG,IAAIrB,sBAAJ,EAApB;EACA,IAAInH,YAAJ,EAAkByI,gBAAlB;;EACA,IAAI/6C,SAAS,CAAC3C,IAAV,KAAmBkyC,aAAa,CAACgB,SAArC,EAAgD;IAC5C,MAAMyK,SAAS,GAAGh7C,SAAlB;;IACA,IAAIg7C,SAAS,CAAC7T,MAAV,CAAiBsI,QAArB,EAA+B;MAC3B6C,YAAY,GAAG2I,+BAA+B,CAACR,aAAD,EAAgBE,YAAhB,EAA8BK,SAAS,CAACvyC,IAAxC,EAA8CuyC,SAAS,CAACp7C,IAAxD,EAA8Dg7C,WAA9D,EAA2EC,aAA3E,EAA0FC,WAA1F,CAA9C;IACH,CAFD,MAGK;MACDvsC,sDAAM,CAACysC,SAAS,CAAC7T,MAAV,CAAiBuI,UAAlB,EAA8B,iBAA9B,CAAN,CADC,CAED;MACA;MACA;;MACAqL,gBAAgB,GACZC,SAAS,CAAC7T,MAAV,CAAiBwI,MAAjB,IACKgL,YAAY,CAACpI,WAAb,CAAyBxB,UAAzB,MAAyC,CAAC1hB,WAAW,CAAC2rB,SAAS,CAACvyC,IAAX,CAF9D;MAGA6pC,YAAY,GAAG4I,iCAAiC,CAACT,aAAD,EAAgBE,YAAhB,EAA8BK,SAAS,CAACvyC,IAAxC,EAA8CuyC,SAAS,CAACp7C,IAAxD,EAA8Dg7C,WAA9D,EAA2EC,aAA3E,EAA0FE,gBAA1F,EAA4GD,WAA5G,CAAhD;IACH;EACJ,CAfD,MAgBK,IAAI96C,SAAS,CAAC3C,IAAV,KAAmBkyC,aAAa,CAACkB,KAArC,EAA4C;IAC7C,MAAMr3C,KAAK,GAAG4G,SAAd;;IACA,IAAI5G,KAAK,CAAC+tC,MAAN,CAAasI,QAAjB,EAA2B;MACvB6C,YAAY,GAAG6I,2BAA2B,CAACV,aAAD,EAAgBE,YAAhB,EAA8BvhD,KAAK,CAACqP,IAApC,EAA0CrP,KAAK,CAACssC,QAAhD,EAA0DkV,WAA1D,EAAuEC,aAAvE,EAAsFC,WAAtF,CAA1C;IACH,CAFD,MAGK;MACDvsC,sDAAM,CAACnV,KAAK,CAAC+tC,MAAN,CAAauI,UAAd,EAA0B,iBAA1B,CAAN,CADC,CAED;;MACAqL,gBAAgB,GACZ3hD,KAAK,CAAC+tC,MAAN,CAAawI,MAAb,IAAuBgL,YAAY,CAACpI,WAAb,CAAyBxB,UAAzB,EAD3B;MAEAuB,YAAY,GAAG8I,6BAA6B,CAACX,aAAD,EAAgBE,YAAhB,EAA8BvhD,KAAK,CAACqP,IAApC,EAA0CrP,KAAK,CAACssC,QAAhD,EAA0DkV,WAA1D,EAAuEC,aAAvE,EAAsFE,gBAAtF,EAAwGD,WAAxG,CAA5C;IACH;EACJ,CAZI,MAaA,IAAI96C,SAAS,CAAC3C,IAAV,KAAmBkyC,aAAa,CAACU,cAArC,EAAqD;IACtD,MAAMoL,YAAY,GAAGr7C,SAArB;;IACA,IAAI,CAACq7C,YAAY,CAACrL,MAAlB,EAA0B;MACtBsC,YAAY,GAAGgJ,yBAAyB,CAACb,aAAD,EAAgBE,YAAhB,EAA8BU,YAAY,CAAC5yC,IAA3C,EAAiD4yC,YAAY,CAACtL,YAA9D,EAA4E6K,WAA5E,EAAyFC,aAAzF,EAAwGC,WAAxG,CAAxC;IACH,CAFD,MAGK;MACDxI,YAAY,GAAGiJ,4BAA4B,CAACd,aAAD,EAAgBE,YAAhB,EAA8BU,YAAY,CAAC5yC,IAA3C,EAAiDmyC,WAAjD,EAA8DC,aAA9D,EAA6EC,WAA7E,CAA3C;IACH;EACJ,CARI,MASA,IAAI96C,SAAS,CAAC3C,IAAV,KAAmBkyC,aAAa,CAACc,eAArC,EAAsD;IACvDiC,YAAY,GAAGkJ,2BAA2B,CAACf,aAAD,EAAgBE,YAAhB,EAA8B36C,SAAS,CAACyI,IAAxC,EAA8CmyC,WAA9C,EAA2DE,WAA3D,CAA1C;EACH,CAFI,MAGA;IACD,MAAMzrC,8DAAc,CAAC,6BAA6BrP,SAAS,CAAC3C,IAAxC,CAApB;EACH;;EACD,MAAMS,OAAO,GAAGg9C,WAAW,CAACjB,UAAZ,EAAhB;EACA4B,+BAA+B,CAACd,YAAD,EAAerI,YAAf,EAA6Bx0C,OAA7B,CAA/B;EACA,OAAO;IAAE20C,SAAS,EAAEH,YAAb;IAA2Bx0C;EAA3B,CAAP;AACH;;AACD,SAAS29C,+BAAT,CAAyCd,YAAzC,EAAuDrI,YAAvD,EAAqEwI,WAArE,EAAkF;EAC9E,MAAMpI,SAAS,GAAGJ,YAAY,CAAChB,UAA/B;;EACA,IAAIoB,SAAS,CAAC5B,kBAAV,EAAJ,EAAoC;IAChC,MAAM4K,aAAa,GAAGhJ,SAAS,CAACjF,OAAV,GAAoB1P,UAApB,MAAoC2U,SAAS,CAACjF,OAAV,GAAoBt+B,OAApB,EAA1D;IACA,MAAMwsC,eAAe,GAAG9I,6BAA6B,CAAC8H,YAAD,CAArD;;IACA,IAAIG,WAAW,CAAC98C,MAAZ,GAAqB,CAArB,IACA,CAAC28C,YAAY,CAACrJ,UAAb,CAAwBR,kBAAxB,EADD,IAEC4K,aAAa,IAAI,CAAChJ,SAAS,CAACjF,OAAV,GAAoB3N,MAApB,CAA2B6b,eAA3B,CAFnB,IAGA,CAACjJ,SAAS,CAACjF,OAAV,GAAoB7kC,WAApB,GAAkCk3B,MAAlC,CAAyC6b,eAAe,CAAC/yC,WAAhB,EAAzC,CAHL,EAG8E;MAC1EkyC,WAAW,CAACn9C,IAAZ,CAAiB6oC,WAAW,CAACqM,6BAA6B,CAACP,YAAD,CAA9B,CAA5B;IACH;EACJ;AACJ;;AACD,SAASsJ,+CAAT,CAAyDnB,aAAzD,EAAwEhI,SAAxE,EAAmFoJ,UAAnF,EAA+FjB,WAA/F,EAA4GzT,MAA5G,EAAoH2T,WAApH,EAAiI;EAC7H,MAAMgB,YAAY,GAAGrJ,SAAS,CAACnB,UAA/B;;EACA,IAAI8H,0BAA0B,CAACwB,WAAD,EAAciB,UAAd,CAA1B,IAAuD,IAA3D,EAAiE;IAC7D;IACA,OAAOpJ,SAAP;EACH,CAHD,MAIK;IACD,IAAI7H,aAAJ,EAAmB0P,UAAnB;;IACA,IAAIjrB,WAAW,CAACwsB,UAAD,CAAf,EAA6B;MACzB;MACAttC,sDAAM,CAACkkC,SAAS,CAACF,WAAV,CAAsBzB,kBAAtB,EAAD,EAA6C,4DAA7C,CAAN;;MACA,IAAI2B,SAAS,CAACF,WAAV,CAAsBxB,UAAtB,EAAJ,EAAwC;QACpC;QACA;QACA;QACA,MAAMwB,WAAW,GAAGO,8BAA8B,CAACL,SAAD,CAAlD;QACA,MAAM2F,gBAAgB,GAAG7F,WAAW,YAAY9O,YAAvB,GACnB8O,WADmB,GAEnB9O,YAAY,CAACpI,UAFnB;QAGA,MAAM0gB,qBAAqB,GAAG7C,qCAAqC,CAAC0B,WAAD,EAAcxC,gBAAd,CAAnE;QACAxN,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqB+oC,cAArB,CAAoCkL,SAAS,CAACnB,UAAV,CAAqB7D,OAArB,EAApC,EAAoEsO,qBAApE,EAA2FjB,WAA3F,CAAhB;MACH,CAVD,MAWK;QACD,MAAMkB,YAAY,GAAGhD,kCAAkC,CAAC4B,WAAD,EAAc9H,8BAA8B,CAACL,SAAD,CAA5C,CAAvD;QACA7H,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqB+oC,cAArB,CAAoCkL,SAAS,CAACnB,UAAV,CAAqB7D,OAArB,EAApC,EAAoEuO,YAApE,EAAkFlB,WAAlF,CAAhB;MACH;IACJ,CAlBD,MAmBK;MACD,MAAM7Q,QAAQ,GAAGzb,YAAY,CAACqtB,UAAD,CAA7B;;MACA,IAAI5R,QAAQ,KAAK,WAAjB,EAA8B;QAC1B17B,sDAAM,CAACkgB,aAAa,CAACotB,UAAD,CAAb,KAA8B,CAA/B,EAAkC,uDAAlC,CAAN;QACA,MAAMI,YAAY,GAAGH,YAAY,CAACrO,OAAb,EAArB;QACA6M,UAAU,GAAG7H,SAAS,CAACF,WAAV,CAAsB9E,OAAtB,EAAb,CAH0B,CAI1B;;QACA,MAAMyO,eAAe,GAAG/C,8CAA8C,CAACyB,WAAD,EAAciB,UAAd,EAA0BI,YAA1B,EAAwC3B,UAAxC,CAAtE;;QACA,IAAI4B,eAAe,IAAI,IAAvB,EAA6B;UACzBtR,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqB6/B,cAArB,CAAoC4d,YAApC,EAAkDC,eAAlD,CAAhB;QACH,CAFD,MAGK;UACD;UACAtR,aAAa,GAAGkR,YAAY,CAACrO,OAAb,EAAhB;QACH;MACJ,CAbD,MAcK;QACD,MAAM0O,eAAe,GAAGztB,YAAY,CAACmtB,UAAD,CAApC,CADC,CAED;;QACA,IAAIO,aAAJ;;QACA,IAAIN,YAAY,CAAC7K,kBAAb,CAAgChH,QAAhC,CAAJ,EAA+C;UAC3CqQ,UAAU,GAAG7H,SAAS,CAACF,WAAV,CAAsB9E,OAAtB,EAAb;UACA,MAAM4O,gBAAgB,GAAGlD,8CAA8C,CAACyB,WAAD,EAAciB,UAAd,EAA0BC,YAAY,CAACrO,OAAb,EAA1B,EAAkD6M,UAAlD,CAAvE;;UACA,IAAI+B,gBAAgB,IAAI,IAAxB,EAA8B;YAC1BD,aAAa,GAAGN,YAAY,CACvBrO,OADW,GAEXlP,iBAFW,CAEO0L,QAFP,EAGXnL,WAHW,CAGCqd,eAHD,EAGkBE,gBAHlB,CAAhB;UAIH,CALD,MAMK;YACD;YACAD,aAAa,GAAGN,YAAY,CAACrO,OAAb,GAAuBlP,iBAAvB,CAAyC0L,QAAzC,CAAhB;UACH;QACJ,CAbD,MAcK;UACDmS,aAAa,GAAG9C,6BAA6B,CAACsB,WAAD,EAAc3Q,QAAd,EAAwBwI,SAAS,CAACF,WAAlC,CAA7C;QACH;;QACD,IAAI6J,aAAa,IAAI,IAArB,EAA2B;UACvBxR,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqBsgC,WAArB,CAAiCgd,YAAY,CAACrO,OAAb,EAAjC,EAAyDxD,QAAzD,EAAmEmS,aAAnE,EAAkFD,eAAlF,EAAmGhV,MAAnG,EAA2G2T,WAA3G,CAAhB;QACH,CAFD,MAGK;UACD;UACAlQ,aAAa,GAAGkR,YAAY,CAACrO,OAAb,EAAhB;QACH;MACJ;IACJ;;IACD,OAAO+E,wBAAwB,CAACC,SAAD,EAAY7H,aAAZ,EAA2BkR,YAAY,CAAChL,kBAAb,MAAqCzhB,WAAW,CAACwsB,UAAD,CAA3E,EAAyFpB,aAAa,CAACj8C,MAAd,CAAqBipC,YAArB,EAAzF,CAA/B;EACH;AACJ;;AACD,SAASyT,iCAAT,CAA2CT,aAA3C,EAA0DE,YAA1D,EAAwEkB,UAAxE,EAAoFS,WAApF,EAAiG1B,WAAjG,EAA8GC,aAA9G,EAA6HE,gBAA7H,EAA+ID,WAA/I,EAA4J;EACxJ,MAAMyB,aAAa,GAAG5B,YAAY,CAACpI,WAAnC;EACA,IAAIiK,cAAJ;EACA,MAAMC,YAAY,GAAG1B,gBAAgB,GAC/BN,aAAa,CAACj8C,MADiB,GAE/Bi8C,aAAa,CAACj8C,MAAd,CAAqBkpC,gBAArB,EAFN;;EAGA,IAAIrY,WAAW,CAACwsB,UAAD,CAAf,EAA6B;IACzBW,cAAc,GAAGC,YAAY,CAAClV,cAAb,CAA4BgV,aAAa,CAAC9O,OAAd,EAA5B,EAAqD6O,WAArD,EAAkE,IAAlE,CAAjB;EACH,CAFD,MAGK,IAAIG,YAAY,CAAChV,YAAb,MAA+B,CAAC8U,aAAa,CAACxL,UAAd,EAApC,EAAgE;IACjE;IACA,MAAM2L,aAAa,GAAGH,aAAa,CAC9B9O,OADiB,GAEjB3O,WAFiB,CAEL+c,UAFK,EAEOS,WAFP,CAAtB;IAGAE,cAAc,GAAGC,YAAY,CAAClV,cAAb,CAA4BgV,aAAa,CAAC9O,OAAd,EAA5B,EAAqDiP,aAArD,EAAoE,IAApE,CAAjB;EACH,CANI,MAOA;IACD,MAAMzS,QAAQ,GAAGzb,YAAY,CAACqtB,UAAD,CAA7B;;IACA,IAAI,CAACU,aAAa,CAACvL,iBAAd,CAAgC6K,UAAhC,CAAD,IACAptB,aAAa,CAACotB,UAAD,CAAb,GAA4B,CADhC,EACmC;MAC/B;MACA,OAAOlB,YAAP;IACH;;IACD,MAAMwB,eAAe,GAAGztB,YAAY,CAACmtB,UAAD,CAApC;IACA,MAAMld,SAAS,GAAG4d,aAAa,CAAC9O,OAAd,GAAwBlP,iBAAxB,CAA0C0L,QAA1C,CAAlB;IACA,MAAMpL,YAAY,GAAGF,SAAS,CAACG,WAAV,CAAsBqd,eAAtB,EAAuCG,WAAvC,CAArB;;IACA,IAAIrS,QAAQ,KAAK,WAAjB,EAA8B;MAC1BuS,cAAc,GAAGC,YAAY,CAACpe,cAAb,CAA4Bke,aAAa,CAAC9O,OAAd,EAA5B,EAAqD5O,YAArD,CAAjB;IACH,CAFD,MAGK;MACD2d,cAAc,GAAGC,YAAY,CAAC3d,WAAb,CAAyByd,aAAa,CAAC9O,OAAd,EAAzB,EAAkDxD,QAAlD,EAA4DpL,YAA5D,EAA0Esd,eAA1E,EAA2FlC,wBAA3F,EAAqH,IAArH,CAAjB;IACH;EACJ;;EACD,MAAM3H,YAAY,GAAGK,yBAAyB,CAACgI,YAAD,EAAe6B,cAAf,EAA+BD,aAAa,CAACzL,kBAAd,MAAsCzhB,WAAW,CAACwsB,UAAD,CAAhF,EAA8FY,YAAY,CAAChV,YAAb,EAA9F,CAA9C;EACA,MAAMN,MAAM,GAAG,IAAI+S,4BAAJ,CAAiCU,WAAjC,EAA8CtI,YAA9C,EAA4DuI,aAA5D,CAAf;EACA,OAAOe,+CAA+C,CAACnB,aAAD,EAAgBnI,YAAhB,EAA8BuJ,UAA9B,EAA0CjB,WAA1C,EAAuDzT,MAAvD,EAA+D2T,WAA/D,CAAtD;AACH;;AACD,SAASG,+BAAT,CAAyCR,aAAzC,EAAwDE,YAAxD,EAAsEkB,UAAtE,EAAkFS,WAAlF,EAA+F1B,WAA/F,EAA4GC,aAA5G,EAA2HC,WAA3H,EAAwI;EACpI,MAAMgB,YAAY,GAAGnB,YAAY,CAACrJ,UAAlC;EACA,IAAIgB,YAAJ,EAAkB1H,aAAlB;EACA,MAAMzD,MAAM,GAAG,IAAI+S,4BAAJ,CAAiCU,WAAjC,EAA8CD,YAA9C,EAA4DE,aAA5D,CAAf;;EACA,IAAIxrB,WAAW,CAACwsB,UAAD,CAAf,EAA6B;IACzBjR,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqB+oC,cAArB,CAAoCoT,YAAY,CAACrJ,UAAb,CAAwB7D,OAAxB,EAApC,EAAuE6O,WAAvE,EAAoFxB,WAApF,CAAhB;IACAxI,YAAY,GAAGE,wBAAwB,CAACmI,YAAD,EAAe/P,aAAf,EAA8B,IAA9B,EAAoC6P,aAAa,CAACj8C,MAAd,CAAqBipC,YAArB,EAApC,CAAvC;EACH,CAHD,MAIK;IACD,MAAMwC,QAAQ,GAAGzb,YAAY,CAACqtB,UAAD,CAA7B;;IACA,IAAI5R,QAAQ,KAAK,WAAjB,EAA8B;MAC1BW,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqB6/B,cAArB,CAAoCsc,YAAY,CAACrJ,UAAb,CAAwB7D,OAAxB,EAApC,EAAuE6O,WAAvE,CAAhB;MACAhK,YAAY,GAAGE,wBAAwB,CAACmI,YAAD,EAAe/P,aAAf,EAA8BkR,YAAY,CAAChL,kBAAb,EAA9B,EAAiEgL,YAAY,CAAC/K,UAAb,EAAjE,CAAvC;IACH,CAHD,MAIK;MACD,MAAMoL,eAAe,GAAGztB,YAAY,CAACmtB,UAAD,CAApC;MACA,MAAMxU,QAAQ,GAAGyU,YAAY,CAACrO,OAAb,GAAuBlP,iBAAvB,CAAyC0L,QAAzC,CAAjB;MACA,IAAIhD,QAAJ;;MACA,IAAI5X,WAAW,CAAC8sB,eAAD,CAAf,EAAkC;QAC9B;QACAlV,QAAQ,GAAGqV,WAAX;MACH,CAHD,MAIK;QACD,MAAM3d,SAAS,GAAGwI,MAAM,CAAC6S,gBAAP,CAAwB/P,QAAxB,CAAlB;;QACA,IAAItL,SAAS,IAAI,IAAjB,EAAuB;UACnB,IAAIhQ,WAAW,CAACwtB,eAAD,CAAX,KAAiC,WAAjC,IACAxd,SAAS,CAACF,QAAV,CAAmBzP,UAAU,CAACmtB,eAAD,CAA7B,EAAgDhtC,OAAhD,EADJ,EAC+D;YAC3D;YACA;YACA83B,QAAQ,GAAGtI,SAAX;UACH,CALD,MAMK;YACDsI,QAAQ,GAAGtI,SAAS,CAACG,WAAV,CAAsBqd,eAAtB,EAAuCG,WAAvC,CAAX;UACH;QACJ,CAVD,MAWK;UACD;UACArV,QAAQ,GAAGxD,YAAY,CAACpI,UAAxB;QACH;MACJ;;MACD,IAAI,CAACgM,QAAQ,CAACvH,MAAT,CAAgBmH,QAAhB,CAAL,EAAgC;QAC5B,MAAM0V,YAAY,GAAGlC,aAAa,CAACj8C,MAAd,CAAqBsgC,WAArB,CAAiCgd,YAAY,CAACrO,OAAb,EAAjC,EAAyDxD,QAAzD,EAAmEhD,QAAnE,EAA6EkV,eAA7E,EAA8FhV,MAA9F,EAAsG2T,WAAtG,CAArB;QACAxI,YAAY,GAAGE,wBAAwB,CAACmI,YAAD,EAAegC,YAAf,EAA6Bb,YAAY,CAAChL,kBAAb,EAA7B,EAAgE2J,aAAa,CAACj8C,MAAd,CAAqBipC,YAArB,EAAhE,CAAvC;MACH,CAHD,MAIK;QACD6K,YAAY,GAAGqI,YAAf;MACH;IACJ;EACJ;;EACD,OAAOrI,YAAP;AACH;;AACD,SAASsK,0BAAT,CAAoCnK,SAApC,EAA+CxI,QAA/C,EAAyD;EACrD,OAAOwI,SAAS,CAACnB,UAAV,CAAqBL,kBAArB,CAAwChH,QAAxC,CAAP;AACH;;AACD,SAASkR,2BAAT,CAAqCV,aAArC,EAAoDhI,SAApD,EAA+DhqC,IAA/D,EAAqE+tC,eAArE,EAAsFoE,WAAtF,EAAmGrI,WAAnG,EAAgHuI,WAAhH,EAA6H;EACzH;EACA;EACA;EACA;EACA;EACA;EACA,IAAI+B,YAAY,GAAGpK,SAAnB;EACA+D,eAAe,CAACjC,OAAhB,CAAwB,CAAClB,YAAD,EAAe1U,SAAf,KAA6B;IACjD,MAAM6Y,SAAS,GAAGtoB,SAAS,CAACzmB,IAAD,EAAO4qC,YAAP,CAA3B;;IACA,IAAIuJ,0BAA0B,CAACnK,SAAD,EAAYjkB,YAAY,CAACgpB,SAAD,CAAxB,CAA9B,EAAoE;MAChEqF,YAAY,GAAG5B,+BAA+B,CAACR,aAAD,EAAgBoC,YAAhB,EAA8BrF,SAA9B,EAAyC7Y,SAAzC,EAAoDic,WAApD,EAAiErI,WAAjE,EAA8EuI,WAA9E,CAA9C;IACH;EACJ,CALD;EAMAtE,eAAe,CAACjC,OAAhB,CAAwB,CAAClB,YAAD,EAAe1U,SAAf,KAA6B;IACjD,MAAM6Y,SAAS,GAAGtoB,SAAS,CAACzmB,IAAD,EAAO4qC,YAAP,CAA3B;;IACA,IAAI,CAACuJ,0BAA0B,CAACnK,SAAD,EAAYjkB,YAAY,CAACgpB,SAAD,CAAxB,CAA/B,EAAqE;MACjEqF,YAAY,GAAG5B,+BAA+B,CAACR,aAAD,EAAgBoC,YAAhB,EAA8BrF,SAA9B,EAAyC7Y,SAAzC,EAAoDic,WAApD,EAAiErI,WAAjE,EAA8EuI,WAA9E,CAA9C;IACH;EACJ,CALD;EAMA,OAAO+B,YAAP;AACH;;AACD,SAASC,uBAAT,CAAiCrC,aAAjC,EAAgDphB,IAAhD,EAAsDjgC,KAAtD,EAA6D;EACzDA,KAAK,CAACm7C,OAAN,CAAc,CAAClB,YAAD,EAAe1U,SAAf,KAA6B;IACvCtF,IAAI,GAAGA,IAAI,CAACyF,WAAL,CAAiBuU,YAAjB,EAA+B1U,SAA/B,CAAP;EACH,CAFD;EAGA,OAAOtF,IAAP;AACH;;AACD,SAAS+hB,6BAAT,CAAuCX,aAAvC,EAAsDhI,SAAtD,EAAiEhqC,IAAjE,EAAuE+tC,eAAvE,EAAwFoE,WAAxF,EAAqGrI,WAArG,EAAkHwI,gBAAlH,EAAoID,WAApI,EAAiJ;EAC7I;EACA;EACA,IAAIrI,SAAS,CAACF,WAAV,CAAsB9E,OAAtB,GAAgCt+B,OAAhC,MACA,CAACsjC,SAAS,CAACF,WAAV,CAAsBzB,kBAAtB,EADL,EACiD;IAC7C,OAAO2B,SAAP;EACH,CAN4I,CAO7I;EACA;EACA;EACA;EACA;EACA;;;EACA,IAAIoK,YAAY,GAAGpK,SAAnB;EACA,IAAIsK,aAAJ;;EACA,IAAI1tB,WAAW,CAAC5mB,IAAD,CAAf,EAAuB;IACnBs0C,aAAa,GAAGvG,eAAhB;EACH,CAFD,MAGK;IACDuG,aAAa,GAAG,IAAI9J,aAAJ,CAAkB,IAAlB,EAAwBU,OAAxB,CAAgClrC,IAAhC,EAAsC+tC,eAAtC,CAAhB;EACH;;EACD,MAAM8D,UAAU,GAAG7H,SAAS,CAACF,WAAV,CAAsB9E,OAAtB,EAAnB;EACAsP,aAAa,CAACrX,QAAd,CAAuBlK,gBAAvB,CAAwC,CAACyO,QAAD,EAAWnI,SAAX,KAAyB;IAC7D,IAAIwY,UAAU,CAAC3xC,QAAX,CAAoBshC,QAApB,CAAJ,EAAmC;MAC/B,MAAM+S,WAAW,GAAGvK,SAAS,CAACF,WAAV,CACf9E,OADe,GAEflP,iBAFe,CAEG0L,QAFH,CAApB;MAGA,MAAMhD,QAAQ,GAAG6V,uBAAuB,CAACrC,aAAD,EAAgBuC,WAAhB,EAA6Blb,SAA7B,CAAxC;MACA+a,YAAY,GAAG3B,iCAAiC,CAACT,aAAD,EAAgBoC,YAAhB,EAA8B,IAAI7uB,IAAJ,CAASic,QAAT,CAA9B,EAAkDhD,QAAlD,EAA4D2T,WAA5D,EAAyErI,WAAzE,EAAsFwI,gBAAtF,EAAwGD,WAAxG,CAAhD;IACH;EACJ,CARD;EASAiC,aAAa,CAACrX,QAAd,CAAuBlK,gBAAvB,CAAwC,CAACyO,QAAD,EAAWgT,cAAX,KAA8B;IAClE,MAAMC,kBAAkB,GAAG,CAACzK,SAAS,CAACF,WAAV,CAAsBtB,kBAAtB,CAAyChH,QAAzC,CAAD,IACvBgT,cAAc,CAACliD,KAAf,KAAyB,IAD7B;;IAEA,IAAI,CAACu/C,UAAU,CAAC3xC,QAAX,CAAoBshC,QAApB,CAAD,IAAkC,CAACiT,kBAAvC,EAA2D;MACvD,MAAMF,WAAW,GAAGvK,SAAS,CAACF,WAAV,CACf9E,OADe,GAEflP,iBAFe,CAEG0L,QAFH,CAApB;MAGA,MAAMhD,QAAQ,GAAG6V,uBAAuB,CAACrC,aAAD,EAAgBuC,WAAhB,EAA6BC,cAA7B,CAAxC;MACAJ,YAAY,GAAG3B,iCAAiC,CAACT,aAAD,EAAgBoC,YAAhB,EAA8B,IAAI7uB,IAAJ,CAASic,QAAT,CAA9B,EAAkDhD,QAAlD,EAA4D2T,WAA5D,EAAyErI,WAAzE,EAAsFwI,gBAAtF,EAAwGD,WAAxG,CAAhD;IACH;EACJ,CAVD;EAWA,OAAO+B,YAAP;AACH;;AACD,SAASvB,yBAAT,CAAmCb,aAAnC,EAAkDhI,SAAlD,EAA6D0K,OAA7D,EAAsEpN,YAAtE,EAAoF6K,WAApF,EAAiGC,aAAjG,EAAgHC,WAAhH,EAA6H;EACzH,IAAI1B,0BAA0B,CAACwB,WAAD,EAAcuC,OAAd,CAA1B,IAAoD,IAAxD,EAA8D;IAC1D,OAAO1K,SAAP;EACH,CAHwH,CAIzH;;;EACA,MAAMsI,gBAAgB,GAAGtI,SAAS,CAACF,WAAV,CAAsBxB,UAAtB,EAAzB,CALyH,CAMzH;EACA;;EACA,MAAMwB,WAAW,GAAGE,SAAS,CAACF,WAA9B;;EACA,IAAIxC,YAAY,CAACh1C,KAAb,IAAsB,IAA1B,EAAgC;IAC5B;IACA,IAAKs0B,WAAW,CAAC8tB,OAAD,CAAX,IAAwB5K,WAAW,CAACzB,kBAAZ,EAAzB,IACAyB,WAAW,CAACvB,iBAAZ,CAA8BmM,OAA9B,CADJ,EAC4C;MACxC,OAAOjC,iCAAiC,CAACT,aAAD,EAAgBhI,SAAhB,EAA2B0K,OAA3B,EAAoC5K,WAAW,CAAC9E,OAAZ,GAAsBhP,QAAtB,CAA+B0e,OAA/B,CAApC,EAA6EvC,WAA7E,EAA0FC,aAA1F,EAAyGE,gBAAzG,EAA2HD,WAA3H,CAAxC;IACH,CAHD,MAIK,IAAIzrB,WAAW,CAAC8tB,OAAD,CAAf,EAA0B;MAC3B;MACA;MACA,IAAI3G,eAAe,GAAG,IAAIvD,aAAJ,CAAkB,IAAlB,CAAtB;MACAV,WAAW,CAAC9E,OAAZ,GAAsBzO,YAAtB,CAAmCzE,SAAnC,EAA8C,CAAC74B,IAAD,EAAO23B,IAAP,KAAgB;QAC1Dmd,eAAe,GAAGA,eAAe,CAACl7C,GAAhB,CAAoB,IAAI0yB,IAAJ,CAAStsB,IAAT,CAApB,EAAoC23B,IAApC,CAAlB;MACH,CAFD;MAGA,OAAO+hB,6BAA6B,CAACX,aAAD,EAAgBhI,SAAhB,EAA2B0K,OAA3B,EAAoC3G,eAApC,EAAqDoE,WAArD,EAAkEC,aAAlE,EAAiFE,gBAAjF,EAAmGD,WAAnG,CAApC;IACH,CARI,MASA;MACD,OAAOrI,SAAP;IACH;EACJ,CAlBD,MAmBK;IACD;IACA,IAAI+D,eAAe,GAAG,IAAIvD,aAAJ,CAAkB,IAAlB,CAAtB;IACAlD,YAAY,CAACwE,OAAb,CAAqB,CAAC6I,SAAD,EAAYriD,KAAZ,KAAsB;MACvC,MAAMsiD,eAAe,GAAGnuB,SAAS,CAACiuB,OAAD,EAAUC,SAAV,CAAjC;;MACA,IAAI7K,WAAW,CAACvB,iBAAZ,CAA8BqM,eAA9B,CAAJ,EAAoD;QAChD7G,eAAe,GAAGA,eAAe,CAACl7C,GAAhB,CAAoB8hD,SAApB,EAA+B7K,WAAW,CAAC9E,OAAZ,GAAsBhP,QAAtB,CAA+B4e,eAA/B,CAA/B,CAAlB;MACH;IACJ,CALD;IAMA,OAAOjC,6BAA6B,CAACX,aAAD,EAAgBhI,SAAhB,EAA2B0K,OAA3B,EAAoC3G,eAApC,EAAqDoE,WAArD,EAAkEC,aAAlE,EAAiFE,gBAAjF,EAAmGD,WAAnG,CAApC;EACH;AACJ;;AACD,SAASU,2BAAT,CAAqCf,aAArC,EAAoDhI,SAApD,EAA+DhqC,IAA/D,EAAqEmyC,WAArE,EAAkFE,WAAlF,EAA+F;EAC3F,MAAMwC,aAAa,GAAG7K,SAAS,CAACF,WAAhC;EACA,MAAMD,YAAY,GAAGK,yBAAyB,CAACF,SAAD,EAAY6K,aAAa,CAAC7P,OAAd,EAAZ,EAAqC6P,aAAa,CAACxM,kBAAd,MAAsCzhB,WAAW,CAAC5mB,IAAD,CAAtF,EAA8F60C,aAAa,CAACvM,UAAd,EAA9F,CAA9C;EACA,OAAO6K,+CAA+C,CAACnB,aAAD,EAAgBnI,YAAhB,EAA8B7pC,IAA9B,EAAoCmyC,WAApC,EAAiDX,wBAAjD,EAA2Ea,WAA3E,CAAtD;AACH;;AACD,SAASS,4BAAT,CAAsCd,aAAtC,EAAqDhI,SAArD,EAAgEhqC,IAAhE,EAAsEmyC,WAAtE,EAAmFhD,mBAAnF,EAAwGkD,WAAxG,EAAqH;EACjH,IAAIl+C,QAAJ;;EACA,IAAIw8C,0BAA0B,CAACwB,WAAD,EAAcnyC,IAAd,CAA1B,IAAiD,IAArD,EAA2D;IACvD,OAAOgqC,SAAP;EACH,CAFD,MAGK;IACD,MAAMtL,MAAM,GAAG,IAAI+S,4BAAJ,CAAiCU,WAAjC,EAA8CnI,SAA9C,EAAyDmF,mBAAzD,CAAf;IACA,MAAMxN,aAAa,GAAGqI,SAAS,CAACnB,UAAV,CAAqB7D,OAArB,EAAtB;IACA,IAAI7C,aAAJ;;IACA,IAAIvb,WAAW,CAAC5mB,IAAD,CAAX,IAAqB+lB,YAAY,CAAC/lB,IAAD,CAAZ,KAAuB,WAAhD,EAA6D;MACzD,IAAImxB,OAAJ;;MACA,IAAI6Y,SAAS,CAACF,WAAV,CAAsBzB,kBAAtB,EAAJ,EAAgD;QAC5ClX,OAAO,GAAGof,kCAAkC,CAAC4B,WAAD,EAAc9H,8BAA8B,CAACL,SAAD,CAA5C,CAA5C;MACH,CAFD,MAGK;QACD,MAAM8K,cAAc,GAAG9K,SAAS,CAACF,WAAV,CAAsB9E,OAAtB,EAAvB;QACAl/B,sDAAM,CAACgvC,cAAc,YAAY9Z,YAA3B,EAAyC,+CAAzC,CAAN;QACA7J,OAAO,GAAGsf,qCAAqC,CAAC0B,WAAD,EAAc2C,cAAd,CAA/C;MACH;;MACD3jB,OAAO,GAAGA,OAAV;MACAgR,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqB+oC,cAArB,CAAoC6C,aAApC,EAAmDxQ,OAAnD,EAA4DkhB,WAA5D,CAAhB;IACH,CAZD,MAaK;MACD,MAAM7Q,QAAQ,GAAGzb,YAAY,CAAC/lB,IAAD,CAA7B;MACA,IAAIw+B,QAAQ,GAAGqS,6BAA6B,CAACsB,WAAD,EAAc3Q,QAAd,EAAwBwI,SAAS,CAACF,WAAlC,CAA5C;;MACA,IAAItL,QAAQ,IAAI,IAAZ,IACAwL,SAAS,CAACF,WAAV,CAAsBtB,kBAAtB,CAAyChH,QAAzC,CADJ,EACwD;QACpDhD,QAAQ,GAAGmD,aAAa,CAAC7L,iBAAd,CAAgC0L,QAAhC,CAAX;MACH;;MACD,IAAIhD,QAAQ,IAAI,IAAhB,EAAsB;QAClB2D,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqBsgC,WAArB,CAAiCsL,aAAjC,EAAgDH,QAAhD,EAA0DhD,QAA1D,EAAoEvY,YAAY,CAACjmB,IAAD,CAAhF,EAAwF0+B,MAAxF,EAAgG2T,WAAhG,CAAhB;MACH,CAFD,MAGK,IAAIrI,SAAS,CAACnB,UAAV,CAAqB7D,OAArB,GAA+B9kC,QAA/B,CAAwCshC,QAAxC,CAAJ,EAAuD;QACxD;QACAW,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqBsgC,WAArB,CAAiCsL,aAAjC,EAAgDH,QAAhD,EAA0DxG,YAAY,CAACpI,UAAvE,EAAmF3M,YAAY,CAACjmB,IAAD,CAA/F,EAAuG0+B,MAAvG,EAA+G2T,WAA/G,CAAhB;MACH,CAHI,MAIA;QACDlQ,aAAa,GAAGR,aAAhB;MACH;;MACD,IAAIQ,aAAa,CAACz7B,OAAd,MACAsjC,SAAS,CAACF,WAAV,CAAsBzB,kBAAtB,EADJ,EACgD;QAC5C;QACAl0C,QAAQ,GAAGo8C,kCAAkC,CAAC4B,WAAD,EAAc9H,8BAA8B,CAACL,SAAD,CAA5C,CAA7C;;QACA,IAAI71C,QAAQ,CAACmhC,UAAT,EAAJ,EAA2B;UACvB6M,aAAa,GAAG6P,aAAa,CAACj8C,MAAd,CAAqB+oC,cAArB,CAAoCqD,aAApC,EAAmDhuC,QAAnD,EAA6Dk+C,WAA7D,CAAhB;QACH;MACJ;IACJ;;IACDl+C,QAAQ,GACJ61C,SAAS,CAACF,WAAV,CAAsBzB,kBAAtB,MACIsI,0BAA0B,CAACwB,WAAD,EAAcrsB,YAAY,EAA1B,CAA1B,IAA2D,IAFnE;IAGA,OAAOikB,wBAAwB,CAACC,SAAD,EAAY7H,aAAZ,EAA2BhuC,QAA3B,EAAqC69C,aAAa,CAACj8C,MAAd,CAAqBipC,YAArB,EAArC,CAA/B;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM+V,IAAN,CAAW;EACP/7C,WAAW,CAAC0vC,MAAD,EAASsM,gBAAT,EAA2B;IAClC,KAAKtM,MAAL,GAAcA,MAAd;IACA,KAAKuM,mBAAL,GAA2B,EAA3B;IACA,MAAM9iC,MAAM,GAAG,KAAKu2B,MAAL,CAAYtc,YAA3B;IACA,MAAM8oB,WAAW,GAAG,IAAI5W,aAAJ,CAAkBnsB,MAAM,CAAC8a,QAAP,EAAlB,CAApB;IACA,MAAMl3B,MAAM,GAAGmtC,wBAAwB,CAAC/wB,MAAD,CAAvC;IACA,KAAKgjC,UAAL,GAAkBrD,gBAAgB,CAAC/7C,MAAD,CAAlC;IACA,MAAMq/C,kBAAkB,GAAGJ,gBAAgB,CAAClL,WAA5C;IACA,MAAMuL,iBAAiB,GAAGL,gBAAgB,CAACnM,UAA3C,CARkC,CASlC;;IACA,MAAMsB,UAAU,GAAG+K,WAAW,CAACpW,cAAZ,CAA2B9D,YAAY,CAACpI,UAAxC,EAAoDwiB,kBAAkB,CAACpQ,OAAnB,EAApD,EAAkF,IAAlF,CAAnB;IACA,MAAMiF,SAAS,GAAGl0C,MAAM,CAAC+oC,cAAP,CAAsB9D,YAAY,CAACpI,UAAnC,EAA+CyiB,iBAAiB,CAACrQ,OAAlB,EAA/C,EAA4E,IAA5E,CAAlB;IACA,MAAM+O,cAAc,GAAG,IAAI9L,SAAJ,CAAckC,UAAd,EAA0BiL,kBAAkB,CAAC/M,kBAAnB,EAA1B,EAAmE6M,WAAW,CAAClW,YAAZ,EAAnE,CAAvB;IACA,MAAMmD,aAAa,GAAG,IAAI8F,SAAJ,CAAcgC,SAAd,EAAyBoL,iBAAiB,CAAChN,kBAAlB,EAAzB,EAAiEtyC,MAAM,CAACipC,YAAP,EAAjE,CAAtB;IACA,KAAK2S,UAAL,GAAkB9H,YAAY,CAAC1H,aAAD,EAAgB4R,cAAhB,CAA9B;IACA,KAAKuB,eAAL,GAAuB,IAAI7M,cAAJ,CAAmB,KAAKC,MAAxB,CAAvB;EACH;;EACQ,IAALpyC,KAAK,GAAG;IACR,OAAO,KAAKoyC,MAAZ;EACH;;AApBM;;AAsBX,SAAS6M,kBAAT,CAA4BC,IAA5B,EAAkC;EAC9B,OAAOA,IAAI,CAAC7D,UAAL,CAAgB7H,WAAhB,CAA4B9E,OAA5B,EAAP;AACH;;AACD,SAASyQ,mBAAT,CAA6BD,IAA7B,EAAmC;EAC/B,OAAOpL,6BAA6B,CAACoL,IAAI,CAAC7D,UAAN,CAApC;AACH;;AACD,SAAS+D,0BAAT,CAAoCF,IAApC,EAA0Cx1C,IAA1C,EAAgD;EAC5C,MAAM21C,KAAK,GAAGtL,8BAA8B,CAACmL,IAAI,CAAC7D,UAAN,CAA5C;;EACA,IAAIgE,KAAJ,EAAW;IACP;IACA;IACA,IAAIH,IAAI,CAACl/C,KAAL,CAAW81B,YAAX,CAAwBE,YAAxB,MACC,CAAC1F,WAAW,CAAC5mB,IAAD,CAAZ,IACG,CAAC21C,KAAK,CAAC7f,iBAAN,CAAwB/P,YAAY,CAAC/lB,IAAD,CAApC,EAA4C0G,OAA5C,EAFT,EAEiE;MAC7D,OAAOivC,KAAK,CAAC3f,QAAN,CAAeh2B,IAAf,CAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH;;AACD,SAAS41C,WAAT,CAAqBJ,IAArB,EAA2B;EACvB,OAAOA,IAAI,CAACP,mBAAL,CAAyB1/C,MAAzB,KAAoC,CAA3C;AACH;;AACD,SAASsgD,wBAAT,CAAkCL,IAAlC,EAAwCM,iBAAxC,EAA2D;EACvDN,IAAI,CAACP,mBAAL,CAAyB//C,IAAzB,CAA8B4gD,iBAA9B;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,2BAAT,CAAqCP,IAArC,EAA2CM,iBAA3C,EAA8DE,WAA9D,EAA2E;EACvE,MAAMC,YAAY,GAAG,EAArB;;EACA,IAAID,WAAJ,EAAiB;IACblwC,sDAAM,CAACgwC,iBAAiB,IAAI,IAAtB,EAA4B,iDAA5B,CAAN;IACA,MAAM91C,IAAI,GAAGw1C,IAAI,CAACl/C,KAAL,CAAW+L,KAAxB;IACAmzC,IAAI,CAACP,mBAAL,CAAyBhgD,OAAzB,CAAiCs0C,YAAY,IAAI;MAC7C,MAAM2M,UAAU,GAAG3M,YAAY,CAAC4M,iBAAb,CAA+BH,WAA/B,EAA4Ch2C,IAA5C,CAAnB;;MACA,IAAIk2C,UAAJ,EAAgB;QACZD,YAAY,CAAC/gD,IAAb,CAAkBghD,UAAlB;MACH;IACJ,CALD;EAMH;;EACD,IAAIJ,iBAAJ,EAAuB;IACnB,IAAIM,SAAS,GAAG,EAAhB;;IACA,KAAK,IAAI5gD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGggD,IAAI,CAACP,mBAAL,CAAyB1/C,MAA7C,EAAqD,EAAEC,CAAvD,EAA0D;MACtD,MAAM6gD,QAAQ,GAAGb,IAAI,CAACP,mBAAL,CAAyBz/C,CAAzB,CAAjB;;MACA,IAAI,CAAC6gD,QAAQ,CAACvW,OAAT,CAAiBgW,iBAAjB,CAAL,EAA0C;QACtCM,SAAS,CAAClhD,IAAV,CAAemhD,QAAf;MACH,CAFD,MAGK,IAAIP,iBAAiB,CAACQ,cAAlB,EAAJ,EAAwC;QACzC;QACAF,SAAS,GAAGA,SAAS,CAACG,MAAV,CAAiBf,IAAI,CAACP,mBAAL,CAAyB/+C,KAAzB,CAA+BV,CAAC,GAAG,CAAnC,CAAjB,CAAZ;QACA;MACH;IACJ;;IACDggD,IAAI,CAACP,mBAAL,GAA2BmB,SAA3B;EACH,CAdD,MAeK;IACDZ,IAAI,CAACP,mBAAL,GAA2B,EAA3B;EACH;;EACD,OAAOgB,YAAP;AACH;AACD;AACA;AACA;;;AACA,SAASO,kBAAT,CAA4BhB,IAA5B,EAAkCj+C,SAAlC,EAA6C46C,WAA7C,EAA0DhD,mBAA1D,EAA+E;EAC3E,IAAI53C,SAAS,CAAC3C,IAAV,KAAmBkyC,aAAa,CAACkB,KAAjC,IACAzwC,SAAS,CAACmnC,MAAV,CAAiBzS,OAAjB,KAA6B,IADjC,EACuC;IACnCnmB,sDAAM,CAACukC,8BAA8B,CAACmL,IAAI,CAAC7D,UAAN,CAA/B,EAAkD,2DAAlD,CAAN;IACA7rC,sDAAM,CAACskC,6BAA6B,CAACoL,IAAI,CAAC7D,UAAN,CAA9B,EAAiD,yDAAjD,CAAN;EACH;;EACD,MAAMO,YAAY,GAAGsD,IAAI,CAAC7D,UAA1B;EACA,MAAMvyC,MAAM,GAAG6yC,2BAA2B,CAACuD,IAAI,CAACL,UAAN,EAAkBjD,YAAlB,EAAgC36C,SAAhC,EAA2C46C,WAA3C,EAAwDhD,mBAAxD,CAA1C;EACA4C,0BAA0B,CAACyD,IAAI,CAACL,UAAN,EAAkB/1C,MAAM,CAAC4qC,SAAzB,CAA1B;EACAlkC,sDAAM,CAAC1G,MAAM,CAAC4qC,SAAP,CAAiBF,WAAjB,CAA6BzB,kBAA7B,MACH,CAAC6J,YAAY,CAACpI,WAAb,CAAyBzB,kBAAzB,EADC,EAC8C,yDAD9C,CAAN;EAEAmN,IAAI,CAAC7D,UAAL,GAAkBvyC,MAAM,CAAC4qC,SAAzB;EACA,OAAOyM,6BAA6B,CAACjB,IAAD,EAAOp2C,MAAM,CAAC/J,OAAd,EAAuB+J,MAAM,CAAC4qC,SAAP,CAAiBnB,UAAjB,CAA4B7D,OAA5B,EAAvB,EAA8D,IAA9D,CAApC;AACH;;AACD,SAAS0R,oBAAT,CAA8BlB,IAA9B,EAAoCjM,YAApC,EAAkD;EAC9C,MAAMU,SAAS,GAAGuL,IAAI,CAAC7D,UAAL,CAAgB9I,UAAlC;EACA,MAAM8N,cAAc,GAAG,EAAvB;;EACA,IAAI,CAAC1M,SAAS,CAACjF,OAAV,GAAoB1P,UAApB,EAAL,EAAuC;IACnC,MAAMshB,SAAS,GAAG3M,SAAS,CAACjF,OAAV,EAAlB;IACA4R,SAAS,CAACrgB,YAAV,CAAuBuB,cAAvB,EAAuC,CAACpjC,GAAD,EAAMwhC,SAAN,KAAoB;MACvDygB,cAAc,CAACzhD,IAAf,CAAoB+oC,gBAAgB,CAACvpC,GAAD,EAAMwhC,SAAN,CAApC;IACH,CAFD;EAGH;;EACD,IAAI+T,SAAS,CAAC5B,kBAAV,EAAJ,EAAoC;IAChCsO,cAAc,CAACzhD,IAAf,CAAoB6oC,WAAW,CAACkM,SAAS,CAACjF,OAAV,EAAD,CAA/B;EACH;;EACD,OAAOyR,6BAA6B,CAACjB,IAAD,EAAOmB,cAAP,EAAuB1M,SAAS,CAACjF,OAAV,EAAvB,EAA4CuE,YAA5C,CAApC;AACH;;AACD,SAASkN,6BAAT,CAAuCjB,IAAvC,EAA6CngD,OAA7C,EAAsDwzC,UAAtD,EAAkEiN,iBAAlE,EAAqF;EACjF,MAAM5M,aAAa,GAAG4M,iBAAiB,GACjC,CAACA,iBAAD,CADiC,GAEjCN,IAAI,CAACP,mBAFX;EAGA,OAAOtM,sCAAsC,CAAC6M,IAAI,CAACF,eAAN,EAAuBjgD,OAAvB,EAAgCwzC,UAAhC,EAA4CK,aAA5C,CAA7C;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI2N,sBAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,CAAgB;EACZ99C,WAAW,GAAG;IACV;AACR;AACA;AACA;AACA;AACA;IACQ,KAAK+9C,KAAL,GAAa,IAAIltB,GAAJ,EAAb;EACH;;AATW;;AAWhB,SAASmtB,gCAAT,CAA0Cr+C,GAA1C,EAA+C;EAC3CmN,sDAAM,CAAC,CAAC+wC,sBAAF,EAA0B,iDAA1B,CAAN;EACAA,sBAAsB,GAAGl+C,GAAzB;AACH;;AACD,SAASs+C,gCAAT,GAA4C;EACxCnxC,sDAAM,CAAC+wC,sBAAD,EAAyB,kCAAzB,CAAN;EACA,OAAOA,sBAAP;AACH;;AACD,SAASK,gBAAT,CAA0BC,SAA1B,EAAqC;EACjC,OAAOA,SAAS,CAACJ,KAAV,CAAgBx2C,IAAhB,KAAyB,CAAhC;AACH;;AACD,SAAS62C,uBAAT,CAAiCD,SAAjC,EAA4C5/C,SAA5C,EAAuD46C,WAAvD,EAAoEkF,sBAApE,EAA4F;EACxF,MAAMprB,OAAO,GAAG10B,SAAS,CAACmnC,MAAV,CAAiBzS,OAAjC;;EACA,IAAIA,OAAO,KAAK,IAAhB,EAAsB;IAClB,MAAMupB,IAAI,GAAG2B,SAAS,CAACJ,KAAV,CAAgBj7C,GAAhB,CAAoBmwB,OAApB,CAAb;IACAnmB,sDAAM,CAAC0vC,IAAI,IAAI,IAAT,EAAe,8CAAf,CAAN;IACA,OAAOgB,kBAAkB,CAAChB,IAAD,EAAOj+C,SAAP,EAAkB46C,WAAlB,EAA+BkF,sBAA/B,CAAzB;EACH,CAJD,MAKK;IACD,IAAIviD,MAAM,GAAG,EAAb;;IACA,KAAK,MAAM0gD,IAAX,IAAmB2B,SAAS,CAACJ,KAAV,CAAgBl0C,MAAhB,EAAnB,EAA6C;MACzC/N,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAcC,kBAAkB,CAAChB,IAAD,EAAOj+C,SAAP,EAAkB46C,WAAlB,EAA+BkF,sBAA/B,CAAhC,CAAT;IACH;;IACD,OAAOviD,MAAP;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwiD,gBAAT,CAA0BH,SAA1B,EAAqC7gD,KAArC,EAA4C67C,WAA5C,EAAyDrI,WAAzD,EAAsEyN,mBAAtE,EAA2F;EACvF,MAAMtrB,OAAO,GAAG31B,KAAK,CAAC41B,gBAAtB;EACA,MAAMspB,IAAI,GAAG2B,SAAS,CAACJ,KAAV,CAAgBj7C,GAAhB,CAAoBmwB,OAApB,CAAb;;EACA,IAAI,CAACupB,IAAL,EAAW;IACP;IACA,IAAI3M,UAAU,GAAG0H,kCAAkC,CAAC4B,WAAD,EAAcoF,mBAAmB,GAAGzN,WAAH,GAAiB,IAAlD,CAAnD;IACA,IAAI0N,kBAAkB,GAAG,KAAzB;;IACA,IAAI3O,UAAJ,EAAgB;MACZ2O,kBAAkB,GAAG,IAArB;IACH,CAFD,MAGK,IAAI1N,WAAW,YAAY9O,YAA3B,EAAyC;MAC1C6N,UAAU,GAAG4H,qCAAqC,CAAC0B,WAAD,EAAcrI,WAAd,CAAlD;MACA0N,kBAAkB,GAAG,KAArB;IACH,CAHI,MAIA;MACD3O,UAAU,GAAG7N,YAAY,CAACpI,UAA1B;MACA4kB,kBAAkB,GAAG,KAArB;IACH;;IACD,MAAMxN,SAAS,GAAGH,YAAY,CAAC,IAAI5B,SAAJ,CAAcY,UAAd,EAA0B2O,kBAA1B,EAA8C,KAA9C,CAAD,EAAuD,IAAIvP,SAAJ,CAAc6B,WAAd,EAA2ByN,mBAA3B,EAAgD,KAAhD,CAAvD,CAA9B;IACA,OAAO,IAAIxC,IAAJ,CAASz+C,KAAT,EAAgB0zC,SAAhB,CAAP;EACH;;EACD,OAAOwL,IAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiC,6BAAT,CAAuCN,SAAvC,EAAkD7gD,KAAlD,EAAyDw/C,iBAAzD,EAA4E3D,WAA5E,EAAyFrI,WAAzF,EAAsGyN,mBAAtG,EAA2H;EACvH,MAAM/B,IAAI,GAAG8B,gBAAgB,CAACH,SAAD,EAAY7gD,KAAZ,EAAmB67C,WAAnB,EAAgCrI,WAAhC,EAA6CyN,mBAA7C,CAA7B;;EACA,IAAI,CAACJ,SAAS,CAACJ,KAAV,CAAgB5qB,GAAhB,CAAoB71B,KAAK,CAAC41B,gBAA1B,CAAL,EAAkD;IAC9CirB,SAAS,CAACJ,KAAV,CAAgBlkD,GAAhB,CAAoByD,KAAK,CAAC41B,gBAA1B,EAA4CspB,IAA5C;EACH,CAJsH,CAKvH;;;EACAK,wBAAwB,CAACL,IAAD,EAAOM,iBAAP,CAAxB;EACA,OAAOY,oBAAoB,CAAClB,IAAD,EAAOM,iBAAP,CAA3B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4B,gCAAT,CAA0CP,SAA1C,EAAqD7gD,KAArD,EAA4Dw/C,iBAA5D,EAA+EE,WAA/E,EAA4F;EACxF,MAAM/pB,OAAO,GAAG31B,KAAK,CAAC41B,gBAAtB;EACA,MAAMyrB,OAAO,GAAG,EAAhB;EACA,IAAI1B,YAAY,GAAG,EAAnB;EACA,MAAM2B,eAAe,GAAGC,wBAAwB,CAACV,SAAD,CAAhD;;EACA,IAAIlrB,OAAO,KAAK,SAAhB,EAA2B;IACvB;IACA,KAAK,MAAM,CAAC6rB,WAAD,EAActC,IAAd,CAAX,IAAkC2B,SAAS,CAACJ,KAAV,CAAgBgB,OAAhB,EAAlC,EAA6D;MACzD9B,YAAY,GAAGA,YAAY,CAACM,MAAb,CAAoBR,2BAA2B,CAACP,IAAD,EAAOM,iBAAP,EAA0BE,WAA1B,CAA/C,CAAf;;MACA,IAAIJ,WAAW,CAACJ,IAAD,CAAf,EAAuB;QACnB2B,SAAS,CAACJ,KAAV,CAAgBtzC,MAAhB,CAAuBq0C,WAAvB,EADmB,CAEnB;;QACA,IAAI,CAACtC,IAAI,CAACl/C,KAAL,CAAW81B,YAAX,CAAwBE,YAAxB,EAAL,EAA6C;UACzCqrB,OAAO,CAACziD,IAAR,CAAasgD,IAAI,CAACl/C,KAAlB;QACH;MACJ;IACJ;EACJ,CAZD,MAaK;IACD;IACA,MAAMk/C,IAAI,GAAG2B,SAAS,CAACJ,KAAV,CAAgBj7C,GAAhB,CAAoBmwB,OAApB,CAAb;;IACA,IAAIupB,IAAJ,EAAU;MACNS,YAAY,GAAGA,YAAY,CAACM,MAAb,CAAoBR,2BAA2B,CAACP,IAAD,EAAOM,iBAAP,EAA0BE,WAA1B,CAA/C,CAAf;;MACA,IAAIJ,WAAW,CAACJ,IAAD,CAAf,EAAuB;QACnB2B,SAAS,CAACJ,KAAV,CAAgBtzC,MAAhB,CAAuBwoB,OAAvB,EADmB,CAEnB;;QACA,IAAI,CAACupB,IAAI,CAACl/C,KAAL,CAAW81B,YAAX,CAAwBE,YAAxB,EAAL,EAA6C;UACzCqrB,OAAO,CAACziD,IAAR,CAAasgD,IAAI,CAACl/C,KAAlB;QACH;MACJ;IACJ;EACJ;;EACD,IAAIshD,eAAe,IAAI,CAACC,wBAAwB,CAACV,SAAD,CAAhD,EAA6D;IACzD;IACAQ,OAAO,CAACziD,IAAR,CAAa,KAAK+hD,gCAAgC,EAArC,EAAyC3gD,KAAK,CAAC8L,KAA/C,EAAsD9L,KAAK,CAAC+L,KAA5D,CAAb;EACH;;EACD,OAAO;IAAEs1C,OAAF;IAAW7iD,MAAM,EAAEmhD;EAAnB,CAAP;AACH;;AACD,SAAS+B,sBAAT,CAAgCb,SAAhC,EAA2C;EACvC,MAAM/3C,MAAM,GAAG,EAAf;;EACA,KAAK,MAAMo2C,IAAX,IAAmB2B,SAAS,CAACJ,KAAV,CAAgBl0C,MAAhB,EAAnB,EAA6C;IACzC,IAAI,CAAC2yC,IAAI,CAACl/C,KAAL,CAAW81B,YAAX,CAAwBE,YAAxB,EAAL,EAA6C;MACzCltB,MAAM,CAAClK,IAAP,CAAYsgD,IAAZ;IACH;EACJ;;EACD,OAAOp2C,MAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,SAAS64C,+BAAT,CAAyCd,SAAzC,EAAoDn3C,IAApD,EAA0D;EACtD,IAAI8pC,WAAW,GAAG,IAAlB;;EACA,KAAK,MAAM0L,IAAX,IAAmB2B,SAAS,CAACJ,KAAV,CAAgBl0C,MAAhB,EAAnB,EAA6C;IACzCinC,WAAW,GAAGA,WAAW,IAAI4L,0BAA0B,CAACF,IAAD,EAAOx1C,IAAP,CAAvD;EACH;;EACD,OAAO8pC,WAAP;AACH;;AACD,SAASoO,qBAAT,CAA+Bf,SAA/B,EAA0C7gD,KAA1C,EAAiD;EAC7C,MAAM6b,MAAM,GAAG7b,KAAK,CAAC81B,YAArB;;EACA,IAAIja,MAAM,CAACma,YAAP,EAAJ,EAA2B;IACvB,OAAO6rB,wBAAwB,CAAChB,SAAD,CAA/B;EACH,CAFD,MAGK;IACD,MAAMlrB,OAAO,GAAG31B,KAAK,CAAC41B,gBAAtB;IACA,OAAOirB,SAAS,CAACJ,KAAV,CAAgBj7C,GAAhB,CAAoBmwB,OAApB,CAAP;EACH;AACJ;;AACD,SAASmsB,2BAAT,CAAqCjB,SAArC,EAAgD7gD,KAAhD,EAAuD;EACnD,OAAO4hD,qBAAqB,CAACf,SAAD,EAAY7gD,KAAZ,CAArB,IAA2C,IAAlD;AACH;;AACD,SAASuhD,wBAAT,CAAkCV,SAAlC,EAA6C;EACzC,OAAOgB,wBAAwB,CAAChB,SAAD,CAAxB,IAAuC,IAA9C;AACH;;AACD,SAASgB,wBAAT,CAAkChB,SAAlC,EAA6C;EACzC,KAAK,MAAM3B,IAAX,IAAmB2B,SAAS,CAACJ,KAAV,CAAgBl0C,MAAhB,EAAnB,EAA6C;IACzC,IAAI2yC,IAAI,CAACl/C,KAAL,CAAW81B,YAAX,CAAwBE,YAAxB,EAAJ,EAA4C;MACxC,OAAOkpB,IAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI6C,oBAAJ;;AACA,SAASC,+BAAT,CAAyC3/C,GAAzC,EAA8C;EAC1CmN,sDAAM,CAAC,CAACuyC,oBAAF,EAAwB,iDAAxB,CAAN;EACAA,oBAAoB,GAAG1/C,GAAvB;AACH;;AACD,SAAS4/C,+BAAT,GAA2C;EACvCzyC,sDAAM,CAACuyC,oBAAD,EAAuB,kCAAvB,CAAN;EACA,OAAOA,oBAAP;AACH;AACD;AACA;AACA;;;AACA,IAAIG,qBAAqB,GAAG,CAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,CAAe;EACX;AACJ;AACA;AACA;EACIz/C,WAAW,CAAC0/C,eAAD,EAAkB;IACzB,KAAKA,eAAL,GAAuBA,eAAvB;IACA;AACR;AACA;;IACQ,KAAKC,cAAL,GAAsB,IAAInO,aAAJ,CAAkB,IAAlB,CAAtB;IACA;AACR;AACA;;IACQ,KAAKoO,iBAAL,GAAyBpM,YAAY,EAArC;IACA,KAAKqM,aAAL,GAAqB,IAAIhvB,GAAJ,EAArB;IACA,KAAKivB,aAAL,GAAqB,IAAIjvB,GAAJ,EAArB;EACH;;AAjBU;AAmBf;AACA;AACA;AACA;AACA;;;AACA,SAASkvB,0BAAT,CAAoCC,QAApC,EAA8Ch5C,IAA9C,EAAoDi5C,OAApD,EAA6DvL,OAA7D,EAAsE/kB,OAAtE,EAA+E;EAC3E;EACA8kB,qBAAqB,CAACuL,QAAQ,CAACJ,iBAAV,EAA6B54C,IAA7B,EAAmCi5C,OAAnC,EAA4CvL,OAA5C,EAAqD/kB,OAArD,CAArB;;EACA,IAAI,CAACA,OAAL,EAAc;IACV,OAAO,EAAP;EACH,CAFD,MAGK;IACD,OAAOuwB,mCAAmC,CAACF,QAAD,EAAW,IAAInR,SAAJ,CAAcd,sBAAsB,EAApC,EAAwC/mC,IAAxC,EAA8Ci5C,OAA9C,CAAX,CAA1C;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASE,sBAAT,CAAgCH,QAAhC,EAA0Ch5C,IAA1C,EAAgD+tC,eAAhD,EAAiEL,OAAjE,EAA0E;EACtE;EACAI,iBAAiB,CAACkL,QAAQ,CAACJ,iBAAV,EAA6B54C,IAA7B,EAAmC+tC,eAAnC,EAAoDL,OAApD,CAAjB;EACA,MAAM0L,UAAU,GAAG5O,aAAa,CAACC,UAAd,CAAyBsD,eAAzB,CAAnB;EACA,OAAOmL,mCAAmC,CAACF,QAAD,EAAW,IAAIjR,KAAJ,CAAUhB,sBAAsB,EAAhC,EAAoC/mC,IAApC,EAA0Co5C,UAA1C,CAAX,CAA1C;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,oBAAT,CAA8BL,QAA9B,EAAwCtL,OAAxC,EAAiDnG,MAAM,GAAG,KAA1D,EAAiE;EAC7D,MAAMhuB,KAAK,GAAGy0B,iBAAiB,CAACgL,QAAQ,CAACJ,iBAAV,EAA6BlL,OAA7B,CAA/B;EACA,MAAM4L,gBAAgB,GAAGpL,oBAAoB,CAAC8K,QAAQ,CAACJ,iBAAV,EAA6BlL,OAA7B,CAA7C;;EACA,IAAI,CAAC4L,gBAAL,EAAuB;IACnB,OAAO,EAAP;EACH,CAFD,MAGK;IACD,IAAIhS,YAAY,GAAG,IAAIkD,aAAJ,CAAkB,IAAlB,CAAnB;;IACA,IAAIjxB,KAAK,CAACpiB,IAAN,IAAc,IAAlB,EAAwB;MACpB;MACAmwC,YAAY,GAAGA,YAAY,CAACz0C,GAAb,CAAiBizB,YAAY,EAA7B,EAAiC,IAAjC,CAAf;IACH,CAHD,MAIK;MACD9Z,IAAI,CAACuN,KAAK,CAAC0jB,QAAP,EAAkB16B,UAAD,IAAgB;QACjC+kC,YAAY,GAAGA,YAAY,CAACz0C,GAAb,CAAiB,IAAI0yB,IAAJ,CAAShjB,UAAT,CAAjB,EAAuC,IAAvC,CAAf;MACH,CAFG,CAAJ;IAGH;;IACD,OAAO22C,mCAAmC,CAACF,QAAD,EAAW,IAAI3R,YAAJ,CAAiB9tB,KAAK,CAACvZ,IAAvB,EAA6BsnC,YAA7B,EAA2CC,MAA3C,CAAX,CAA1C;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASgS,4BAAT,CAAsCP,QAAtC,EAAgDh5C,IAAhD,EAAsDi5C,OAAtD,EAA+D;EAC3D,OAAOC,mCAAmC,CAACF,QAAD,EAAW,IAAInR,SAAJ,CAAcV,wBAAwB,EAAtC,EAA0CnnC,IAA1C,EAAgDi5C,OAAhD,CAAX,CAA1C;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASO,wBAAT,CAAkCR,QAAlC,EAA4Ch5C,IAA5C,EAAkD+tC,eAAlD,EAAmE;EAC/D,MAAMqL,UAAU,GAAG5O,aAAa,CAACC,UAAd,CAAyBsD,eAAzB,CAAnB;EACA,OAAOmL,mCAAmC,CAACF,QAAD,EAAW,IAAIjR,KAAJ,CAAUZ,wBAAwB,EAAlC,EAAsCnnC,IAAtC,EAA4Co5C,UAA5C,CAAX,CAA1C;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASK,2BAAT,CAAqCT,QAArC,EAA+Ch5C,IAA/C,EAAqD;EACjD,OAAOk5C,mCAAmC,CAACF,QAAD,EAAW,IAAIrR,cAAJ,CAAmBR,wBAAwB,EAA3C,EAA+CnnC,IAA/C,CAAX,CAA1C;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS05C,iCAAT,CAA2CV,QAA3C,EAAqDh5C,IAArD,EAA2DgsB,GAA3D,EAAgE;EAC5D,MAAM2tB,QAAQ,GAAGC,uBAAuB,CAACZ,QAAD,EAAWhtB,GAAX,CAAxC;;EACA,IAAI2tB,QAAJ,EAAc;IACV,MAAMtuB,CAAC,GAAGwuB,sBAAsB,CAACF,QAAD,CAAhC;IACA,MAAMG,SAAS,GAAGzuB,CAAC,CAACrrB,IAApB;IAAA,MAA0BisB,OAAO,GAAGZ,CAAC,CAACY,OAAtC;IACA,MAAM2e,YAAY,GAAG/jB,eAAe,CAACizB,SAAD,EAAY95C,IAAZ,CAApC;IACA,MAAM+5C,EAAE,GAAG,IAAIpS,cAAJ,CAAmBP,mCAAmC,CAACnb,OAAD,CAAtD,EAAiE2e,YAAjE,CAAX;IACA,OAAOoP,6BAA6B,CAAChB,QAAD,EAAWc,SAAX,EAAsBC,EAAtB,CAApC;EACH,CAND,MAOK;IACD;IACA,OAAO,EAAP;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,+BAAT,CAAyCjB,QAAzC,EAAmD1iD,KAAnD,EAA0Dw/C,iBAA1D,EAA6EE,WAA7E,EAA0FkE,iBAAiB,GAAG,KAA9G,EAAqH;EACjH;EACA,MAAMl6C,IAAI,GAAG1J,KAAK,CAAC+L,KAAnB;EACA,MAAM83C,cAAc,GAAGnB,QAAQ,CAACL,cAAT,CAAwB78C,GAAxB,CAA4BkE,IAA5B,CAAvB;EACA,IAAIi2C,YAAY,GAAG,EAAnB,CAJiH,CAKjH;EACA;EACA;;EACA,IAAIkE,cAAc,KACb7jD,KAAK,CAAC41B,gBAAN,KAA2B,SAA3B,IACGksB,2BAA2B,CAAC+B,cAAD,EAAiB7jD,KAAjB,CAFjB,CAAlB,EAE6D;IACzD,MAAM8jD,gBAAgB,GAAG1C,gCAAgC,CAACyC,cAAD,EAAiB7jD,KAAjB,EAAwBw/C,iBAAxB,EAA2CE,WAA3C,CAAzD;;IACA,IAAIkB,gBAAgB,CAACiD,cAAD,CAApB,EAAsC;MAClCnB,QAAQ,CAACL,cAAT,GAA0BK,QAAQ,CAACL,cAAT,CAAwBjhD,MAAxB,CAA+BsI,IAA/B,CAA1B;IACH;;IACD,MAAM23C,OAAO,GAAGyC,gBAAgB,CAACzC,OAAjC;IACA1B,YAAY,GAAGmE,gBAAgB,CAACtlD,MAAhC;;IACA,IAAI,CAAColD,iBAAL,EAAwB;MACpB;AACZ;AACA;AACA;AACA;MACY;MACA;MACA,MAAMG,eAAe,GAAG,CAAC,CAAD,KACpB1C,OAAO,CAACxJ,SAAR,CAAkB73C,KAAK,IAAI;QACvB,OAAOA,KAAK,CAAC81B,YAAN,CAAmBE,YAAnB,EAAP;MACH,CAFD,CADJ;MAIA,MAAMguB,OAAO,GAAGtB,QAAQ,CAACL,cAAT,CAAwBnN,UAAxB,CAAmCxrC,IAAnC,EAAyC,CAAC4qC,YAAD,EAAe2P,eAAf,KAAmC1C,wBAAwB,CAAC0C,eAAD,CAApG,CAAhB;;MACA,IAAIF,eAAe,IAAI,CAACC,OAAxB,EAAiC;QAC7B,MAAM5S,OAAO,GAAGsR,QAAQ,CAACL,cAAT,CAAwBjR,OAAxB,CAAgC1nC,IAAhC,CAAhB,CAD6B,CAE7B;QACA;;QACA,IAAI,CAAC0nC,OAAO,CAAChhC,OAAR,EAAL,EAAwB;UACpB;UACA,MAAM8zC,QAAQ,GAAGC,uCAAuC,CAAC/S,OAAD,CAAxD,CAFoB,CAGpB;;UACA,KAAK,IAAIlyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGglD,QAAQ,CAACjlD,MAA7B,EAAqC,EAAEC,CAAvC,EAA0C;YACtC,MAAMggD,IAAI,GAAGgF,QAAQ,CAAChlD,CAAD,CAArB;YAAA,MAA0BklD,QAAQ,GAAGlF,IAAI,CAACl/C,KAA1C;YACA,MAAMmZ,QAAQ,GAAGkrC,8BAA8B,CAAC3B,QAAD,EAAWxD,IAAX,CAA/C;YACAwD,QAAQ,CAACN,eAAT,CAAyBkC,cAAzB,CAAwCC,0BAA0B,CAACH,QAAD,CAAlE,EAA8EI,mBAAmB,CAAC9B,QAAD,EAAW0B,QAAX,CAAjG,EAAuHjrC,QAAQ,CAAC+c,MAAhI,EAAwI/c,QAAQ,CAACvQ,UAAjJ;UACH;QACJ,CAb4B,CAc7B;;MACH,CA5BmB,CA6BpB;MACA;MACA;;;MACA,IAAI,CAACo7C,OAAD,IAAY3C,OAAO,CAACpiD,MAAR,GAAiB,CAA7B,IAAkC,CAACygD,WAAvC,EAAoD;QAChD;QACA;QACA,IAAIqE,eAAJ,EAAqB;UACjB;UACA,MAAMU,UAAU,GAAG,IAAnB;UACA/B,QAAQ,CAACN,eAAT,CAAyBsC,aAAzB,CAAuCH,0BAA0B,CAACvkD,KAAD,CAAjE,EAA0EykD,UAA1E;QACH,CAJD,MAKK;UACDpD,OAAO,CAAC1iD,OAAR,CAAiBgmD,aAAD,IAAmB;YAC/B,MAAMC,WAAW,GAAGlC,QAAQ,CAACF,aAAT,CAAuBh9C,GAAvB,CAA2Bq/C,qBAAqB,CAACF,aAAD,CAAhD,CAApB;YACAjC,QAAQ,CAACN,eAAT,CAAyBsC,aAAzB,CAAuCH,0BAA0B,CAACI,aAAD,CAAjE,EAAkFC,WAAlF;UACH,CAHD;QAIH;MACJ;IACJ,CAtDwD,CAuDzD;;;IACAE,mBAAmB,CAACpC,QAAD,EAAWrB,OAAX,CAAnB;EACH;;EACD,OAAO1B,YAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASoF,iCAAT,CAA2CrC,QAA3C,EAAqDh5C,IAArD,EAA2D7I,IAA3D,EAAiE60B,GAAjE,EAAsE;EAClE,MAAM2tB,QAAQ,GAAGC,uBAAuB,CAACZ,QAAD,EAAWhtB,GAAX,CAAxC;;EACA,IAAI2tB,QAAQ,IAAI,IAAhB,EAAsB;IAClB,MAAMtuB,CAAC,GAAGwuB,sBAAsB,CAACF,QAAD,CAAhC;IACA,MAAMG,SAAS,GAAGzuB,CAAC,CAACrrB,IAApB;IAAA,MAA0BisB,OAAO,GAAGZ,CAAC,CAACY,OAAtC;IACA,MAAM2e,YAAY,GAAG/jB,eAAe,CAACizB,SAAD,EAAY95C,IAAZ,CAApC;IACA,MAAM+5C,EAAE,GAAG,IAAIlS,SAAJ,CAAcT,mCAAmC,CAACnb,OAAD,CAAjD,EAA4D2e,YAA5D,EAA0EzzC,IAA1E,CAAX;IACA,OAAO6iD,6BAA6B,CAAChB,QAAD,EAAWc,SAAX,EAAsBC,EAAtB,CAApC;EACH,CAND,MAOK;IACD;IACA,OAAO,EAAP;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASuB,6BAAT,CAAuCtC,QAAvC,EAAiDh5C,IAAjD,EAAuD+tC,eAAvD,EAAwE/hB,GAAxE,EAA6E;EACzE,MAAM2tB,QAAQ,GAAGC,uBAAuB,CAACZ,QAAD,EAAWhtB,GAAX,CAAxC;;EACA,IAAI2tB,QAAJ,EAAc;IACV,MAAMtuB,CAAC,GAAGwuB,sBAAsB,CAACF,QAAD,CAAhC;IACA,MAAMG,SAAS,GAAGzuB,CAAC,CAACrrB,IAApB;IAAA,MAA0BisB,OAAO,GAAGZ,CAAC,CAACY,OAAtC;IACA,MAAM2e,YAAY,GAAG/jB,eAAe,CAACizB,SAAD,EAAY95C,IAAZ,CAApC;IACA,MAAMo5C,UAAU,GAAG5O,aAAa,CAACC,UAAd,CAAyBsD,eAAzB,CAAnB;IACA,MAAMgM,EAAE,GAAG,IAAIhS,KAAJ,CAAUX,mCAAmC,CAACnb,OAAD,CAA7C,EAAwD2e,YAAxD,EAAsEwO,UAAtE,CAAX;IACA,OAAOY,6BAA6B,CAAChB,QAAD,EAAWc,SAAX,EAAsBC,EAAtB,CAApC;EACH,CAPD,MAQK;IACD;IACA,OAAO,EAAP;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASwB,4BAAT,CAAsCvC,QAAtC,EAAgD1iD,KAAhD,EAAuDw/C,iBAAvD,EAA0E0F,iBAAiB,GAAG,KAA9F,EAAqG;EACjG,MAAMx7C,IAAI,GAAG1J,KAAK,CAAC+L,KAAnB;EACA,IAAIynC,WAAW,GAAG,IAAlB;EACA,IAAI2R,wBAAwB,GAAG,KAA/B,CAHiG,CAIjG;EACA;;EACAzC,QAAQ,CAACL,cAAT,CAAwBhN,aAAxB,CAAsC3rC,IAAtC,EAA4C,CAAC07C,eAAD,EAAkBC,EAAlB,KAAyB;IACjE,MAAM/Q,YAAY,GAAG/jB,eAAe,CAAC60B,eAAD,EAAkB17C,IAAlB,CAApC;IACA8pC,WAAW,GACPA,WAAW,IAAImO,+BAA+B,CAAC0D,EAAD,EAAK/Q,YAAL,CADlD;IAEA6Q,wBAAwB,GACpBA,wBAAwB,IAAI5D,wBAAwB,CAAC8D,EAAD,CADxD;EAEH,CAND;EAOA,IAAIxE,SAAS,GAAG6B,QAAQ,CAACL,cAAT,CAAwB78C,GAAxB,CAA4BkE,IAA5B,CAAhB;;EACA,IAAI,CAACm3C,SAAL,EAAgB;IACZA,SAAS,GAAG,IAAIL,SAAJ,EAAZ;IACAkC,QAAQ,CAACL,cAAT,GAA0BK,QAAQ,CAACL,cAAT,CAAwB9lD,GAAxB,CAA4BmN,IAA5B,EAAkCm3C,SAAlC,CAA1B;EACH,CAHD,MAIK;IACDsE,wBAAwB,GACpBA,wBAAwB,IAAI5D,wBAAwB,CAACV,SAAD,CADxD;IAEArN,WAAW,GACPA,WAAW,IAAImO,+BAA+B,CAACd,SAAD,EAAYrxB,YAAY,EAAxB,CADlD;EAEH;;EACD,IAAIyxB,mBAAJ;;EACA,IAAIzN,WAAW,IAAI,IAAnB,EAAyB;IACrByN,mBAAmB,GAAG,IAAtB;EACH,CAFD,MAGK;IACDA,mBAAmB,GAAG,KAAtB;IACAzN,WAAW,GAAG9O,YAAY,CAACpI,UAA3B;IACA,MAAM8U,OAAO,GAAGsR,QAAQ,CAACL,cAAT,CAAwBjR,OAAxB,CAAgC1nC,IAAhC,CAAhB;IACA0nC,OAAO,CAACsE,YAAR,CAAqB,CAACjW,SAAD,EAAY6lB,cAAZ,KAA+B;MAChD,MAAMxJ,aAAa,GAAG6F,+BAA+B,CAAC2D,cAAD,EAAiB91B,YAAY,EAA7B,CAArD;;MACA,IAAIssB,aAAJ,EAAmB;QACftI,WAAW,GAAGA,WAAW,CAAC3T,oBAAZ,CAAiCJ,SAAjC,EAA4Cqc,aAA5C,CAAd;MACH;IACJ,CALD;EAMH;;EACD,MAAMyJ,iBAAiB,GAAGzD,2BAA2B,CAACjB,SAAD,EAAY7gD,KAAZ,CAArD;;EACA,IAAI,CAACulD,iBAAD,IAAsB,CAACvlD,KAAK,CAAC81B,YAAN,CAAmBE,YAAnB,EAA3B,EAA8D;IAC1D;IACA,MAAMqtB,QAAQ,GAAGwB,qBAAqB,CAAC7kD,KAAD,CAAtC;IACAwP,sDAAM,CAAC,CAACkzC,QAAQ,CAACF,aAAT,CAAuB3sB,GAAvB,CAA2BwtB,QAA3B,CAAF,EAAwC,wCAAxC,CAAN;IACA,MAAM3tB,GAAG,GAAG8vB,wBAAwB,EAApC;IACA9C,QAAQ,CAACF,aAAT,CAAuBjmD,GAAvB,CAA2B8mD,QAA3B,EAAqC3tB,GAArC;IACAgtB,QAAQ,CAACH,aAAT,CAAuBhmD,GAAvB,CAA2Bm5B,GAA3B,EAAgC2tB,QAAhC;EACH;;EACD,MAAMxH,WAAW,GAAG5E,oBAAoB,CAACyL,QAAQ,CAACJ,iBAAV,EAA6B54C,IAA7B,CAAxC;EACA,IAAIlL,MAAM,GAAG2iD,6BAA6B,CAACN,SAAD,EAAY7gD,KAAZ,EAAmBw/C,iBAAnB,EAAsC3D,WAAtC,EAAmDrI,WAAnD,EAAgEyN,mBAAhE,CAA1C;;EACA,IAAI,CAACsE,iBAAD,IAAsB,CAACJ,wBAAvB,IAAmD,CAACD,iBAAxD,EAA2E;IACvE,MAAMhG,IAAI,GAAG0C,qBAAqB,CAACf,SAAD,EAAY7gD,KAAZ,CAAlC;IACAxB,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAcwF,sBAAsB,CAAC/C,QAAD,EAAW1iD,KAAX,EAAkBk/C,IAAlB,CAApC,CAAT;EACH;;EACD,OAAO1gD,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASknD,8BAAT,CAAwChD,QAAxC,EAAkDh5C,IAAlD,EAAwDovC,iBAAxD,EAA2E;EACvE,MAAM6M,iBAAiB,GAAG,IAA1B;EACA,MAAM5O,SAAS,GAAG2L,QAAQ,CAACJ,iBAA3B;EACA,MAAM9O,WAAW,GAAGkP,QAAQ,CAACL,cAAT,CAAwBnN,UAAxB,CAAmCxrC,IAAnC,EAAyC,CAACsrC,SAAD,EAAY6L,SAAZ,KAA0B;IACnF,MAAMvM,YAAY,GAAG/jB,eAAe,CAACykB,SAAD,EAAYtrC,IAAZ,CAApC;IACA,MAAM8pC,WAAW,GAAGmO,+BAA+B,CAACd,SAAD,EAAYvM,YAAZ,CAAnD;;IACA,IAAId,WAAJ,EAAiB;MACb,OAAOA,WAAP;IACH;EACJ,CANmB,CAApB;EAOA,OAAOmF,+BAA+B,CAAC5B,SAAD,EAAYrtC,IAAZ,EAAkB8pC,WAAlB,EAA+BsF,iBAA/B,EAAkD6M,iBAAlD,CAAtC;AACH;;AACD,SAASC,sBAAT,CAAgClD,QAAhC,EAA0C1iD,KAA1C,EAAiD;EAC7C,MAAM0J,IAAI,GAAG1J,KAAK,CAAC+L,KAAnB;EACA,IAAIynC,WAAW,GAAG,IAAlB,CAF6C,CAG7C;EACA;;EACAkP,QAAQ,CAACL,cAAT,CAAwBhN,aAAxB,CAAsC3rC,IAAtC,EAA4C,CAAC07C,eAAD,EAAkBC,EAAlB,KAAyB;IACjE,MAAM/Q,YAAY,GAAG/jB,eAAe,CAAC60B,eAAD,EAAkB17C,IAAlB,CAApC;IACA8pC,WAAW,GACPA,WAAW,IAAImO,+BAA+B,CAAC0D,EAAD,EAAK/Q,YAAL,CADlD;EAEH,CAJD;EAKA,IAAIuM,SAAS,GAAG6B,QAAQ,CAACL,cAAT,CAAwB78C,GAAxB,CAA4BkE,IAA5B,CAAhB;;EACA,IAAI,CAACm3C,SAAL,EAAgB;IACZA,SAAS,GAAG,IAAIL,SAAJ,EAAZ;IACAkC,QAAQ,CAACL,cAAT,GAA0BK,QAAQ,CAACL,cAAT,CAAwB9lD,GAAxB,CAA4BmN,IAA5B,EAAkCm3C,SAAlC,CAA1B;EACH,CAHD,MAIK;IACDrN,WAAW,GACPA,WAAW,IAAImO,+BAA+B,CAACd,SAAD,EAAYrxB,YAAY,EAAxB,CADlD;EAEH;;EACD,MAAMyxB,mBAAmB,GAAGzN,WAAW,IAAI,IAA3C;EACA,MAAMqS,eAAe,GAAG5E,mBAAmB,GACrC,IAAItP,SAAJ,CAAc6B,WAAd,EAA2B,IAA3B,EAAiC,KAAjC,CADqC,GAErC,IAFN;EAGA,MAAMqI,WAAW,GAAG5E,oBAAoB,CAACyL,QAAQ,CAACJ,iBAAV,EAA6BtiD,KAAK,CAAC+L,KAAnC,CAAxC;EACA,MAAMmzC,IAAI,GAAG8B,gBAAgB,CAACH,SAAD,EAAY7gD,KAAZ,EAAmB67C,WAAnB,EAAgCoF,mBAAmB,GAAG4E,eAAe,CAACnX,OAAhB,EAAH,GAA+BhK,YAAY,CAACpI,UAA/F,EAA2G2kB,mBAA3G,CAA7B;EACA,OAAO9B,mBAAmB,CAACD,IAAD,CAA1B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0D,mCAAT,CAA6CF,QAA7C,EAAuDzhD,SAAvD,EAAkE;EAC9D,OAAO6kD,6BAA6B,CAAC7kD,SAAD,EAAYyhD,QAAQ,CAACL,cAArB;EACpC;EAAiB,IADmB,EACbpL,oBAAoB,CAACyL,QAAQ,CAACJ,iBAAV,EAA6B9yB,YAAY,EAAzC,CADP,CAApC;AAEH;AACD;AACA;AACA;;;AACA,SAASs2B,6BAAT,CAAuC7kD,SAAvC,EAAkD8kD,aAAlD,EAAiEvS,WAAjE,EAA8EqI,WAA9E,EAA2F;EACvF,IAAIvrB,WAAW,CAACrvB,SAAS,CAACyI,IAAX,CAAf,EAAiC;IAC7B,OAAOs8C,wCAAwC,CAAC/kD,SAAD,EAAY8kD,aAAZ,EAA2BvS,WAA3B,EAAwCqI,WAAxC,CAA/C;EACH,CAFD,MAGK;IACD,MAAMgF,SAAS,GAAGkF,aAAa,CAACvgD,GAAd,CAAkBgqB,YAAY,EAA9B,CAAlB,CADC,CAED;;IACA,IAAIgkB,WAAW,IAAI,IAAf,IAAuBqN,SAAS,IAAI,IAAxC,EAA8C;MAC1CrN,WAAW,GAAGmO,+BAA+B,CAACd,SAAD,EAAYrxB,YAAY,EAAxB,CAA7C;IACH;;IACD,IAAIhxB,MAAM,GAAG,EAAb;IACA,MAAMihC,SAAS,GAAGhQ,YAAY,CAACxuB,SAAS,CAACyI,IAAX,CAA9B;IACA,MAAMu8C,cAAc,GAAGhlD,SAAS,CAACkwC,iBAAV,CAA4B1R,SAA5B,CAAvB;IACA,MAAMsD,SAAS,GAAGgjB,aAAa,CAACpf,QAAd,CAAuBnhC,GAAvB,CAA2Bi6B,SAA3B,CAAlB;;IACA,IAAIsD,SAAS,IAAIkjB,cAAjB,EAAiC;MAC7B,MAAMC,gBAAgB,GAAG1S,WAAW,GAC9BA,WAAW,CAAChU,iBAAZ,CAA8BC,SAA9B,CAD8B,GAE9B,IAFN;MAGA,MAAM0mB,gBAAgB,GAAG1L,iBAAiB,CAACoB,WAAD,EAAcpc,SAAd,CAA1C;MACAjhC,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAc6F,6BAA6B,CAACG,cAAD,EAAiBljB,SAAjB,EAA4BmjB,gBAA5B,EAA8CC,gBAA9C,CAA3C,CAAT;IACH;;IACD,IAAItF,SAAJ,EAAe;MACXriD,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAca,uBAAuB,CAACD,SAAD,EAAY5/C,SAAZ,EAAuB46C,WAAvB,EAAoCrI,WAApC,CAArC,CAAT;IACH;;IACD,OAAOh1C,MAAP;EACH;AACJ;AACD;AACA;AACA;;;AACA,SAASwnD,wCAAT,CAAkD/kD,SAAlD,EAA6D8kD,aAA7D,EAA4EvS,WAA5E,EAAyFqI,WAAzF,EAAsG;EAClG,MAAMgF,SAAS,GAAGkF,aAAa,CAACvgD,GAAd,CAAkBgqB,YAAY,EAA9B,CAAlB,CADkG,CAElG;;EACA,IAAIgkB,WAAW,IAAI,IAAf,IAAuBqN,SAAS,IAAI,IAAxC,EAA8C;IAC1CrN,WAAW,GAAGmO,+BAA+B,CAACd,SAAD,EAAYrxB,YAAY,EAAxB,CAA7C;EACH;;EACD,IAAIhxB,MAAM,GAAG,EAAb;EACAunD,aAAa,CAACpf,QAAd,CAAuBlK,gBAAvB,CAAwC,CAACgD,SAAD,EAAYsD,SAAZ,KAA0B;IAC9D,MAAMmjB,gBAAgB,GAAG1S,WAAW,GAC9BA,WAAW,CAAChU,iBAAZ,CAA8BC,SAA9B,CAD8B,GAE9B,IAFN;IAGA,MAAM0mB,gBAAgB,GAAG1L,iBAAiB,CAACoB,WAAD,EAAcpc,SAAd,CAA1C;IACA,MAAMwmB,cAAc,GAAGhlD,SAAS,CAACkwC,iBAAV,CAA4B1R,SAA5B,CAAvB;;IACA,IAAIwmB,cAAJ,EAAoB;MAChBznD,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAc+F,wCAAwC,CAACC,cAAD,EAAiBljB,SAAjB,EAA4BmjB,gBAA5B,EAA8CC,gBAA9C,CAAtD,CAAT;IACH;EACJ,CATD;;EAUA,IAAItF,SAAJ,EAAe;IACXriD,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAca,uBAAuB,CAACD,SAAD,EAAY5/C,SAAZ,EAAuB46C,WAAvB,EAAoCrI,WAApC,CAArC,CAAT;EACH;;EACD,OAAOh1C,MAAP;AACH;;AACD,SAAS6lD,8BAAT,CAAwC3B,QAAxC,EAAkDxD,IAAlD,EAAwD;EACpD,MAAMl/C,KAAK,GAAGk/C,IAAI,CAACl/C,KAAnB;EACA,MAAM01B,GAAG,GAAG8uB,mBAAmB,CAAC9B,QAAD,EAAW1iD,KAAX,CAA/B;EACA,OAAO;IACHk2B,MAAM,EAAE,MAAM;MACV,MAAMmpB,KAAK,GAAGJ,kBAAkB,CAACC,IAAD,CAAlB,IAA4Bxa,YAAY,CAACpI,UAAvD;MACA,OAAO+iB,KAAK,CAAC7xB,IAAN,EAAP;IACH,CAJE;IAKH5kB,UAAU,EAAGytB,MAAD,IAAY;MACpB,IAAIA,MAAM,KAAK,IAAf,EAAqB;QACjB,IAAIX,GAAJ,EAAS;UACL,OAAO0tB,iCAAiC,CAACV,QAAD,EAAW1iD,KAAK,CAAC+L,KAAjB,EAAwB2pB,GAAxB,CAAxC;QACH,CAFD,MAGK;UACD,OAAOytB,2BAA2B,CAACT,QAAD,EAAW1iD,KAAK,CAAC+L,KAAjB,CAAlC;QACH;MACJ,CAPD,MAQK;QACD;QACA;QACA,MAAMhO,KAAK,GAAGyZ,kBAAkB,CAAC6e,MAAD,EAASr2B,KAAT,CAAhC;QACA,OAAO2jD,+BAA+B,CAACjB,QAAD,EAAW1iD,KAAX;QACtC;QAAsB,IADgB,EACVjC,KADU,CAAtC;MAEH;IACJ;EArBE,CAAP;AAuBH;AACD;AACA;AACA;;;AACA,SAASymD,mBAAT,CAA6B9B,QAA7B,EAAuC1iD,KAAvC,EAA8C;EAC1C,MAAMqjD,QAAQ,GAAGwB,qBAAqB,CAAC7kD,KAAD,CAAtC;EACA,OAAO0iD,QAAQ,CAACF,aAAT,CAAuBh9C,GAAvB,CAA2B69C,QAA3B,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAASwB,qBAAT,CAA+B7kD,KAA/B,EAAsC;EAClC,OAAOA,KAAK,CAAC+L,KAAN,CAAYL,QAAZ,KAAyB,GAAzB,GAA+B1L,KAAK,CAAC41B,gBAA5C;AACH;AACD;AACA;AACA;;;AACA,SAAS0tB,uBAAT,CAAiCZ,QAAjC,EAA2ChtB,GAA3C,EAAgD;EAC5C,OAAOgtB,QAAQ,CAACH,aAAT,CAAuB/8C,GAAvB,CAA2BkwB,GAA3B,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAAS6tB,sBAAT,CAAgCF,QAAhC,EAA0C;EACtC,MAAM+C,UAAU,GAAG/C,QAAQ,CAACtiD,OAAT,CAAiB,GAAjB,CAAnB;EACAyO,sDAAM,CAAC42C,UAAU,KAAK,CAAC,CAAhB,IAAqBA,UAAU,GAAG/C,QAAQ,CAACpkD,MAAT,GAAkB,CAArD,EAAwD,eAAxD,CAAN;EACA,OAAO;IACH02B,OAAO,EAAE0tB,QAAQ,CAACrsC,MAAT,CAAgBovC,UAAU,GAAG,CAA7B,CADN;IAEH18C,IAAI,EAAE,IAAIulB,IAAJ,CAASo0B,QAAQ,CAACrsC,MAAT,CAAgB,CAAhB,EAAmBovC,UAAnB,CAAT;EAFH,CAAP;AAIH;AACD;AACA;AACA;;;AACA,SAAS1C,6BAAT,CAAuChB,QAAvC,EAAiDc,SAAjD,EAA4DviD,SAA5D,EAAuE;EACnE,MAAM4/C,SAAS,GAAG6B,QAAQ,CAACL,cAAT,CAAwB78C,GAAxB,CAA4Bg+C,SAA5B,CAAlB;EACAh0C,sDAAM,CAACqxC,SAAD,EAAY,sDAAZ,CAAN;EACA,MAAMhF,WAAW,GAAG5E,oBAAoB,CAACyL,QAAQ,CAACJ,iBAAV,EAA6BkB,SAA7B,CAAxC;EACA,OAAO1C,uBAAuB,CAACD,SAAD,EAAY5/C,SAAZ,EAAuB46C,WAAvB,EAAoC,IAApC,CAA9B;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASsI,uCAAT,CAAiD/S,OAAjD,EAA0D;EACtD,OAAOA,OAAO,CAAC0D,IAAR,CAAa,CAACR,YAAD,EAAe+R,mBAAf,EAAoCC,QAApC,KAAiD;IACjE,IAAID,mBAAmB,IAAI9E,wBAAwB,CAAC8E,mBAAD,CAAnD,EAA0E;MACtE,MAAME,YAAY,GAAG1E,wBAAwB,CAACwE,mBAAD,CAA7C;MACA,OAAO,CAACE,YAAD,CAAP;IACH,CAHD,MAIK;MACD;MACA,IAAI9F,KAAK,GAAG,EAAZ;;MACA,IAAI4F,mBAAJ,EAAyB;QACrB5F,KAAK,GAAGiB,sBAAsB,CAAC2E,mBAAD,CAA9B;MACH;;MACD3wC,IAAI,CAAC4wC,QAAD,EAAW,CAACE,IAAD,EAAOC,UAAP,KAAsB;QACjChG,KAAK,GAAGA,KAAK,CAACR,MAAN,CAAawG,UAAb,CAAR;MACH,CAFG,CAAJ;MAGA,OAAOhG,KAAP;IACH;EACJ,CAhBM,CAAP;AAiBH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS8D,0BAAT,CAAoCvkD,KAApC,EAA2C;EACvC,IAAIA,KAAK,CAAC81B,YAAN,CAAmBE,YAAnB,MAAqC,CAACh2B,KAAK,CAAC81B,YAAN,CAAmBC,SAAnB,EAA1C,EAA0E;IACtE;IACA;IACA;IACA,OAAO,KAAKksB,+BAA+B,EAApC,EAAwCjiD,KAAK,CAAC8L,KAA9C,EAAqD9L,KAAK,CAAC+L,KAA3D,CAAP;EACH,CALD,MAMK;IACD,OAAO/L,KAAP;EACH;AACJ;;AACD,SAAS8kD,mBAAT,CAA6BpC,QAA7B,EAAuCvoB,OAAvC,EAAgD;EAC5C,KAAK,IAAIhJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgJ,OAAO,CAACl7B,MAA5B,EAAoC,EAAEkyB,CAAtC,EAAyC;IACrC,MAAMu1B,YAAY,GAAGvsB,OAAO,CAAChJ,CAAD,CAA5B;;IACA,IAAI,CAACu1B,YAAY,CAAC5wB,YAAb,CAA0BE,YAA1B,EAAL,EAA+C;MAC3C;MACA,MAAM2wB,eAAe,GAAG9B,qBAAqB,CAAC6B,YAAD,CAA7C;MACA,MAAME,eAAe,GAAGlE,QAAQ,CAACF,aAAT,CAAuBh9C,GAAvB,CAA2BmhD,eAA3B,CAAxB;MACAjE,QAAQ,CAACF,aAAT,CAAuBr1C,MAAvB,CAA8Bw5C,eAA9B;MACAjE,QAAQ,CAACH,aAAT,CAAuBp1C,MAAvB,CAA8By5C,eAA9B;IACH;EACJ;AACJ;AACD;AACA;AACA;;;AACA,SAASpB,wBAAT,GAAoC;EAChC,OAAOtD,qBAAqB,EAA5B;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASuD,sBAAT,CAAgC/C,QAAhC,EAA0C1iD,KAA1C,EAAiDk/C,IAAjD,EAAuD;EACnD,MAAMx1C,IAAI,GAAG1J,KAAK,CAAC+L,KAAnB;EACA,MAAM2pB,GAAG,GAAG8uB,mBAAmB,CAAC9B,QAAD,EAAW1iD,KAAX,CAA/B;EACA,MAAMmZ,QAAQ,GAAGkrC,8BAA8B,CAAC3B,QAAD,EAAWxD,IAAX,CAA/C;EACA,MAAM1gD,MAAM,GAAGkkD,QAAQ,CAACN,eAAT,CAAyBkC,cAAzB,CAAwCC,0BAA0B,CAACvkD,KAAD,CAAlE,EAA2E01B,GAA3E,EAAgFvc,QAAQ,CAAC+c,MAAzF,EAAiG/c,QAAQ,CAACvQ,UAA1G,CAAf;EACA,MAAMwoC,OAAO,GAAGsR,QAAQ,CAACL,cAAT,CAAwBjR,OAAxB,CAAgC1nC,IAAhC,CAAhB,CALmD,CAMnD;EACA;;EACA,IAAIgsB,GAAJ,EAAS;IACLlmB,sDAAM,CAAC,CAAC+xC,wBAAwB,CAACnQ,OAAO,CAACp1C,KAAT,CAA1B,EAA2C,mDAA3C,CAAN;EACH,CAFD,MAGK;IACD;IACA,MAAM6qD,aAAa,GAAGzV,OAAO,CAAC0D,IAAR,CAAa,CAACR,YAAD,EAAe+R,mBAAf,EAAoCC,QAApC,KAAiD;MAChF,IAAI,CAACh2B,WAAW,CAACgkB,YAAD,CAAZ,IACA+R,mBADA,IAEA9E,wBAAwB,CAAC8E,mBAAD,CAF5B,EAEmD;QAC/C,OAAO,CAACxE,wBAAwB,CAACwE,mBAAD,CAAxB,CAA8CrmD,KAA/C,CAAP;MACH,CAJD,MAKK;QACD;QACA,IAAIm6B,OAAO,GAAG,EAAd;;QACA,IAAIksB,mBAAJ,EAAyB;UACrBlsB,OAAO,GAAGA,OAAO,CAAC8lB,MAAR,CAAeyB,sBAAsB,CAAC2E,mBAAD,CAAtB,CAA4C/rD,GAA5C,CAAgD4kD,IAAI,IAAIA,IAAI,CAACl/C,KAA7D,CAAf,CAAV;QACH;;QACD0V,IAAI,CAAC4wC,QAAD,EAAW,CAACE,IAAD,EAAOM,YAAP,KAAwB;UACnC3sB,OAAO,GAAGA,OAAO,CAAC8lB,MAAR,CAAe6G,YAAf,CAAV;QACH,CAFG,CAAJ;QAGA,OAAO3sB,OAAP;MACH;IACJ,CAjBqB,CAAtB;;IAkBA,KAAK,IAAIj7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2nD,aAAa,CAAC5nD,MAAlC,EAA0C,EAAEC,CAA5C,EAA+C;MAC3C,MAAM6nD,WAAW,GAAGF,aAAa,CAAC3nD,CAAD,CAAjC;MACAwjD,QAAQ,CAACN,eAAT,CAAyBsC,aAAzB,CAAuCH,0BAA0B,CAACwC,WAAD,CAAjE,EAAgFvC,mBAAmB,CAAC9B,QAAD,EAAWqE,WAAX,CAAnG;IACH;EACJ;;EACD,OAAOvoD,MAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMwoD,qBAAN,CAA4B;EACxBtkD,WAAW,CAACkvC,KAAD,EAAQ;IACf,KAAKA,KAAL,GAAaA,KAAb;EACH;;EACDpS,iBAAiB,CAACC,SAAD,EAAY;IACzB,MAAMl/B,KAAK,GAAG,KAAKqxC,KAAL,CAAWpS,iBAAX,CAA6BC,SAA7B,CAAd;IACA,OAAO,IAAIunB,qBAAJ,CAA0BzmD,KAA1B,CAAP;EACH;;EACD+5B,IAAI,GAAG;IACH,OAAO,KAAKsX,KAAZ;EACH;;AAVuB;;AAY5B,MAAMqV,qBAAN,CAA4B;EACxBvkD,WAAW,CAACggD,QAAD,EAAWh5C,IAAX,EAAiB;IACxB,KAAKw9C,SAAL,GAAiBxE,QAAjB;IACA,KAAKyE,KAAL,GAAaz9C,IAAb;EACH;;EACD81B,iBAAiB,CAACC,SAAD,EAAY;IACzB,MAAM2U,SAAS,GAAGjkB,SAAS,CAAC,KAAKg3B,KAAN,EAAa1nB,SAAb,CAA3B;IACA,OAAO,IAAIwnB,qBAAJ,CAA0B,KAAKC,SAA/B,EAA0C9S,SAA1C,CAAP;EACH;;EACD9Z,IAAI,GAAG;IACH,OAAOorB,8BAA8B,CAAC,KAAKwB,SAAN,EAAiB,KAAKC,KAAtB,CAArC;EACH;;AAXuB;AAa5B;AACA;AACA;;;AACA,MAAMC,kBAAkB,GAAG,UAAU76C,MAAV,EAAkB;EACzCA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EACAA,MAAM,CAAC,WAAD,CAAN,GAAsBA,MAAM,CAAC,WAAD,CAAN,IAAuB,IAAI8rB,IAAJ,GAAWC,OAAX,EAA7C;EACA,OAAO/rB,MAAP;AACH,CAJD;AAKA;AACA;AACA;AACA;;;AACA,MAAM86C,wBAAwB,GAAG,UAAUrrD,KAAV,EAAiBsrD,WAAjB,EAA8BC,YAA9B,EAA4C;EACzE,IAAI,CAACvrD,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;IACrC,OAAOA,KAAP;EACH;;EACDwT,sDAAM,CAAC,SAASxT,KAAV,EAAiB,2CAAjB,CAAN;;EACA,IAAI,OAAOA,KAAK,CAAC,KAAD,CAAZ,KAAwB,QAA5B,EAAsC;IAClC,OAAOwrD,0BAA0B,CAACxrD,KAAK,CAAC,KAAD,CAAN,EAAesrD,WAAf,EAA4BC,YAA5B,CAAjC;EACH,CAFD,MAGK,IAAI,OAAOvrD,KAAK,CAAC,KAAD,CAAZ,KAAwB,QAA5B,EAAsC;IACvC,OAAOyrD,2BAA2B,CAACzrD,KAAK,CAAC,KAAD,CAAN,EAAesrD,WAAf,CAAlC;EACH,CAFI,MAGA;IACD93C,sDAAM,CAAC,KAAD,EAAQ,8BAA8Bk4C,IAAI,CAACr4C,SAAL,CAAerT,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAtC,CAAN;EACH;AACJ,CAdD;;AAeA,MAAMwrD,0BAA0B,GAAG,UAAU/D,EAAV,EAAc1D,QAAd,EAAwBwH,YAAxB,EAAsC;EACrE,QAAQ9D,EAAR;IACI,KAAK,WAAL;MACI,OAAO8D,YAAY,CAAC,WAAD,CAAnB;;IACJ;MACI/3C,sDAAM,CAAC,KAAD,EAAQ,8BAA8Bi0C,EAAtC,CAAN;EAJR;AAMH,CAPD;;AAQA,MAAMgE,2BAA2B,GAAG,UAAUhE,EAAV,EAAc1D,QAAd,EAAwB4H,MAAxB,EAAgC;EAChE,IAAI,CAAClE,EAAE,CAAC9tC,cAAH,CAAkB,WAAlB,CAAL,EAAqC;IACjCnG,sDAAM,CAAC,KAAD,EAAQ,8BAA8Bk4C,IAAI,CAACr4C,SAAL,CAAeo0C,EAAf,EAAmB,IAAnB,EAAyB,CAAzB,CAAtC,CAAN;EACH;;EACD,MAAM71C,KAAK,GAAG61C,EAAE,CAAC,WAAD,CAAhB;;EACA,IAAI,OAAO71C,KAAP,KAAiB,QAArB,EAA+B;IAC3B4B,sDAAM,CAAC,KAAD,EAAQ,iCAAiC5B,KAAzC,CAAN;EACH;;EACD,MAAMg6C,YAAY,GAAG7H,QAAQ,CAACzlB,IAAT,EAArB;EACA9qB,sDAAM,CAACo4C,YAAY,KAAK,IAAjB,IAAyB,OAAOA,YAAP,KAAwB,WAAlD,EAA+D,4CAA/D,CAAN,CATgE,CAUhE;;EACA,IAAI,CAACA,YAAY,CAAC5oB,UAAb,EAAL,EAAgC;IAC5B,OAAOpxB,KAAP;EACH;;EACD,MAAMi6C,IAAI,GAAGD,YAAb;EACA,MAAMN,WAAW,GAAGO,IAAI,CAAC1nB,QAAL,EAApB;;EACA,IAAI,OAAOmnB,WAAP,KAAuB,QAA3B,EAAqC;IACjC,OAAO15C,KAAP;EACH,CAlB+D,CAmBhE;;;EACA,OAAO05C,WAAW,GAAG15C,KAArB;AACH,CArBD;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMk6C,wBAAwB,GAAG,UAAUp+C,IAAV,EAAgB4wB,IAAhB,EAAsBooB,QAAtB,EAAgC6E,YAAhC,EAA8C;EAC3E,OAAOQ,oBAAoB,CAACztB,IAAD,EAAO,IAAI2sB,qBAAJ,CAA0BvE,QAA1B,EAAoCh5C,IAApC,CAAP,EAAkD69C,YAAlD,CAA3B;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AACA,MAAMS,4BAA4B,GAAG,UAAU1tB,IAAV,EAAgBylB,QAAhB,EAA0BwH,YAA1B,EAAwC;EACzE,OAAOQ,oBAAoB,CAACztB,IAAD,EAAO,IAAI0sB,qBAAJ,CAA0BjH,QAA1B,CAAP,EAA4CwH,YAA5C,CAA3B;AACH,CAFD;;AAGA,SAASQ,oBAAT,CAA8BztB,IAA9B,EAAoCgtB,WAApC,EAAiDC,YAAjD,EAA+D;EAC3D,MAAMU,MAAM,GAAG3tB,IAAI,CAACzwB,WAAL,GAAmBxH,GAAnB,EAAf;EACA,MAAM2G,QAAQ,GAAGq+C,wBAAwB,CAACY,MAAD,EAASX,WAAW,CAAC9nB,iBAAZ,CAA8B,WAA9B,CAAT,EAAqD+nB,YAArD,CAAzC;EACA,IAAI1sB,OAAJ;;EACA,IAAIP,IAAI,CAAC0E,UAAL,EAAJ,EAAuB;IACnB,MAAMkpB,QAAQ,GAAG5tB,IAAjB;IACA,MAAMt+B,KAAK,GAAGqrD,wBAAwB,CAACa,QAAQ,CAAC/nB,QAAT,EAAD,EAAsBmnB,WAAtB,EAAmCC,YAAnC,CAAtC;;IACA,IAAIvrD,KAAK,KAAKksD,QAAQ,CAAC/nB,QAAT,EAAV,IACAn3B,QAAQ,KAAKk/C,QAAQ,CAACr+C,WAAT,GAAuBxH,GAAvB,EADjB,EAC+C;MAC3C,OAAO,IAAI68B,QAAJ,CAAaljC,KAAb,EAAoBwqC,YAAY,CAACx9B,QAAD,CAAhC,CAAP;IACH,CAHD,MAIK;MACD,OAAOsxB,IAAP;IACH;EACJ,CAVD,MAWK;IACD,MAAM6tB,YAAY,GAAG7tB,IAArB;IACAO,OAAO,GAAGstB,YAAV;;IACA,IAAIn/C,QAAQ,KAAKm/C,YAAY,CAACt+C,WAAb,GAA2BxH,GAA3B,EAAjB,EAAmD;MAC/Cw4B,OAAO,GAAGA,OAAO,CAACyE,cAAR,CAAuB,IAAIJ,QAAJ,CAAal2B,QAAb,CAAvB,CAAV;IACH;;IACDm/C,YAAY,CAACloB,YAAb,CAA0BuB,cAA1B,EAA0C,CAAC/B,SAAD,EAAYG,SAAZ,KAA0B;MAChE,MAAME,YAAY,GAAGioB,oBAAoB,CAACnoB,SAAD,EAAY0nB,WAAW,CAAC9nB,iBAAZ,CAA8BC,SAA9B,CAAZ,EAAsD8nB,YAAtD,CAAzC;;MACA,IAAIznB,YAAY,KAAKF,SAArB,EAAgC;QAC5B/E,OAAO,GAAGA,OAAO,CAACgF,oBAAR,CAA6BJ,SAA7B,EAAwCK,YAAxC,CAAV;MACH;IACJ,CALD;IAMA,OAAOjF,OAAP;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMutB,IAAN,CAAW;EACP;AACJ;AACA;AACA;AACA;EACI1lD,WAAW,CAACC,IAAI,GAAG,EAAR,EAAYwJ,MAAM,GAAG,IAArB,EAA2BmuB,IAAI,GAAG;IAAEqM,QAAQ,EAAE,EAAZ;IAAgB0hB,UAAU,EAAE;EAA5B,CAAlC,EAAmE;IAC1E,KAAK1lD,IAAL,GAAYA,IAAZ;IACA,KAAKwJ,MAAL,GAAcA,MAAd;IACA,KAAKmuB,IAAL,GAAYA,IAAZ;EACH;;AAVM;AAYX;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASguB,WAAT,CAAqBpZ,IAArB,EAA2BqZ,OAA3B,EAAoC;EAChC;EACA,IAAI7+C,IAAI,GAAG6+C,OAAO,YAAYt5B,IAAnB,GAA0Bs5B,OAA1B,GAAoC,IAAIt5B,IAAJ,CAASs5B,OAAT,CAA/C;EACA,IAAIhoD,KAAK,GAAG2uC,IAAZ;EAAA,IAAkBtxC,IAAI,GAAG6xB,YAAY,CAAC/lB,IAAD,CAArC;;EACA,OAAO9L,IAAI,KAAK,IAAhB,EAAsB;IAClB,MAAMgiC,SAAS,GAAG3vB,uDAAO,CAAC1P,KAAK,CAAC+5B,IAAN,CAAWqM,QAAZ,EAAsB/oC,IAAtB,CAAP,IAAsC;MACpD+oC,QAAQ,EAAE,EAD0C;MAEpD0hB,UAAU,EAAE;IAFwC,CAAxD;IAIA9nD,KAAK,GAAG,IAAI6nD,IAAJ,CAASxqD,IAAT,EAAe2C,KAAf,EAAsBq/B,SAAtB,CAAR;IACAl2B,IAAI,GAAGimB,YAAY,CAACjmB,IAAD,CAAnB;IACA9L,IAAI,GAAG6xB,YAAY,CAAC/lB,IAAD,CAAnB;EACH;;EACD,OAAOnJ,KAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASioD,YAAT,CAAsBtZ,IAAtB,EAA4B;EACxB,OAAOA,IAAI,CAAC5U,IAAL,CAAUt+B,KAAjB;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASysD,YAAT,CAAsBvZ,IAAtB,EAA4BlzC,KAA5B,EAAmC;EAC/BkzC,IAAI,CAAC5U,IAAL,CAAUt+B,KAAV,GAAkBA,KAAlB;EACA0sD,iBAAiB,CAACxZ,IAAD,CAAjB;AACH;AACD;AACA;AACA;;;AACA,SAASyZ,eAAT,CAAyBzZ,IAAzB,EAA+B;EAC3B,OAAOA,IAAI,CAAC5U,IAAL,CAAU+tB,UAAV,GAAuB,CAA9B;AACH;AACD;AACA;AACA;;;AACA,SAASO,WAAT,CAAqB1Z,IAArB,EAA2B;EACvB,OAAOsZ,YAAY,CAACtZ,IAAD,CAAZ,KAAuB7yC,SAAvB,IAAoC,CAACssD,eAAe,CAACzZ,IAAD,CAA3D;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS2Z,gBAAT,CAA0B3Z,IAA1B,EAAgC7vC,MAAhC,EAAwC;EACpCqW,IAAI,CAACw5B,IAAI,CAAC5U,IAAL,CAAUqM,QAAX,EAAqB,CAACpmC,KAAD,EAAQwiC,SAAR,KAAsB;IAC3C1jC,MAAM,CAAC,IAAI+oD,IAAJ,CAAS7nD,KAAT,EAAgB2uC,IAAhB,EAAsBnM,SAAtB,CAAD,CAAN;EACH,CAFG,CAAJ;AAGH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+lB,qBAAT,CAA+B5Z,IAA/B,EAAqC7vC,MAArC,EAA6C0pD,WAA7C,EAA0DC,aAA1D,EAAyE;EACrE,IAAID,WAAW,IAAI,CAACC,aAApB,EAAmC;IAC/B3pD,MAAM,CAAC6vC,IAAD,CAAN;EACH;;EACD2Z,gBAAgB,CAAC3Z,IAAD,EAAO3uC,KAAK,IAAI;IAC5BuoD,qBAAqB,CAACvoD,KAAD,EAAQlB,MAAR,EAAgB,IAAhB,EAAsB2pD,aAAtB,CAArB;EACH,CAFe,CAAhB;;EAGA,IAAID,WAAW,IAAIC,aAAnB,EAAkC;IAC9B3pD,MAAM,CAAC6vC,IAAD,CAAN;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+Z,mBAAT,CAA6B/Z,IAA7B,EAAmC7vC,MAAnC,EAA2C0pD,WAA3C,EAAwD;EACpD,IAAIzuB,IAAI,GAAGyuB,WAAW,GAAG7Z,IAAH,GAAUA,IAAI,CAAC/iC,MAArC;;EACA,OAAOmuB,IAAI,KAAK,IAAhB,EAAsB;IAClB,IAAIj7B,MAAM,CAACi7B,IAAD,CAAV,EAAkB;MACd,OAAO,IAAP;IACH;;IACDA,IAAI,GAAGA,IAAI,CAACnuB,MAAZ;EACH;;EACD,OAAO,KAAP;AACH;AACD;AACA;AACA;;;AACA,SAAS+8C,WAAT,CAAqBha,IAArB,EAA2B;EACvB,OAAO,IAAIjgB,IAAJ,CAASigB,IAAI,CAAC/iC,MAAL,KAAgB,IAAhB,GACV+iC,IAAI,CAACvsC,IADK,GAEVumD,WAAW,CAACha,IAAI,CAAC/iC,MAAN,CAAX,GAA2B,GAA3B,GAAiC+iC,IAAI,CAACvsC,IAFrC,CAAP;AAGH;AACD;AACA;AACA;;;AACA,SAAS+lD,iBAAT,CAA2BxZ,IAA3B,EAAiC;EAC7B,IAAIA,IAAI,CAAC/iC,MAAL,KAAgB,IAApB,EAA0B;IACtBg9C,eAAe,CAACja,IAAI,CAAC/iC,MAAN,EAAc+iC,IAAI,CAACvsC,IAAnB,EAAyBusC,IAAzB,CAAf;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASia,eAAT,CAAyBja,IAAzB,EAA+BzP,SAA/B,EAA0Cl/B,KAA1C,EAAiD;EAC7C,MAAM6oD,UAAU,GAAGR,WAAW,CAACroD,KAAD,CAA9B;EACA,MAAM8oD,WAAW,GAAG95C,wDAAQ,CAAC2/B,IAAI,CAAC5U,IAAL,CAAUqM,QAAX,EAAqBlH,SAArB,CAA5B;;EACA,IAAI2pB,UAAU,IAAIC,WAAlB,EAA+B;IAC3B,OAAOna,IAAI,CAAC5U,IAAL,CAAUqM,QAAV,CAAmBlH,SAAnB,CAAP;IACAyP,IAAI,CAAC5U,IAAL,CAAU+tB,UAAV;IACAK,iBAAiB,CAACxZ,IAAD,CAAjB;EACH,CAJD,MAKK,IAAI,CAACka,UAAD,IAAe,CAACC,WAApB,EAAiC;IAClCna,IAAI,CAAC5U,IAAL,CAAUqM,QAAV,CAAmBlH,SAAnB,IAAgCl/B,KAAK,CAAC+5B,IAAtC;IACA4U,IAAI,CAAC5U,IAAL,CAAU+tB,UAAV;IACAK,iBAAiB,CAACxZ,IAAD,CAAjB;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMoa,kBAAkB,GAAG,gCAA3B;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,KAAK,IAAL,GAAY,IAAnC;;AACA,MAAMC,UAAU,GAAG,UAAUrrD,GAAV,EAAe;EAC9B,OAAQ,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACa,MAAJ,KAAe,CAA1C,IAA+C,CAACqqD,kBAAkB,CAACnyC,IAAnB,CAAwB/Y,GAAxB,CAAxD;AACH,CAFD;;AAGA,MAAMsrD,iBAAiB,GAAG,UAAUz9C,UAAV,EAAsB;EAC5C,OAAQ,OAAOA,UAAP,KAAsB,QAAtB,IACJA,UAAU,CAAChN,MAAX,KAAsB,CADlB,IAEJ,CAACsqD,mBAAmB,CAACpyC,IAApB,CAAyBlL,UAAzB,CAFL;AAGH,CAJD;;AAKA,MAAM09C,qBAAqB,GAAG,UAAU19C,UAAV,EAAsB;EAChD,IAAIA,UAAJ,EAAgB;IACZ;IACAA,UAAU,GAAGA,UAAU,CAACiuB,OAAX,CAAmB,kBAAnB,EAAuC,GAAvC,CAAb;EACH;;EACD,OAAOwvB,iBAAiB,CAACz9C,UAAD,CAAxB;AACH,CAND;;AAOA,MAAM29C,eAAe,GAAG,UAAU5gD,QAAV,EAAoB;EACxC,OAAQA,QAAQ,KAAK,IAAb,IACJ,OAAOA,QAAP,KAAoB,QADhB,IAEH,OAAOA,QAAP,KAAoB,QAApB,IAAgC,CAACyK,mBAAmB,CAACzK,QAAD,CAFjD,IAGHA,QAAQ,IACL,OAAOA,QAAP,KAAoB,QADvB,IAEG;EACAuG,wDAAQ,CAACvG,QAAD,EAAW,KAAX,CANhB;AAOH,CARD;AASA;AACA;AACA;;;AACA,MAAM6gD,uBAAuB,GAAG,UAAUzhD,MAAV,EAAkBpM,KAAlB,EAAyB0N,IAAzB,EAA+BnB,QAA/B,EAAyC;EACrE,IAAIA,QAAQ,IAAIvM,KAAK,KAAKK,SAA1B,EAAqC;IACjC;EACH;;EACDytD,oBAAoB,CAACtiD,2DAAW,CAACY,MAAD,EAAS,OAAT,CAAZ,EAA+BpM,KAA/B,EAAsC0N,IAAtC,CAApB;AACH,CALD;AAMA;AACA;AACA;;;AACA,MAAMogD,oBAAoB,GAAG,UAAUtiD,WAAV,EAAuB3H,IAAvB,EAA6BsnD,KAA7B,EAAoC;EAC7D,MAAMz9C,IAAI,GAAGy9C,KAAK,YAAYl4B,IAAjB,GAAwB,IAAIoC,cAAJ,CAAmB81B,KAAnB,EAA0B3/C,WAA1B,CAAxB,GAAiE2/C,KAA9E;;EACA,IAAItnD,IAAI,KAAKxD,SAAb,EAAwB;IACpB,MAAM,IAAIa,KAAJ,CAAUsK,WAAW,GAAG,qBAAd,GAAsCwqB,2BAA2B,CAACtoB,IAAD,CAA3E,CAAN;EACH;;EACD,IAAI,OAAO7J,IAAP,KAAgB,UAApB,EAAgC;IAC5B,MAAM,IAAI3C,KAAJ,CAAUsK,WAAW,GACvB,sBADY,GAEZwqB,2BAA2B,CAACtoB,IAAD,CAFf,GAGZ,mBAHY,GAIZ7J,IAAI,CAAC6L,QAAL,EAJE,CAAN;EAKH;;EACD,IAAI+H,mBAAmB,CAAC5T,IAAD,CAAvB,EAA+B;IAC3B,MAAM,IAAI3C,KAAJ,CAAUsK,WAAW,GACvB,WADY,GAEZ3H,IAAI,CAAC6L,QAAL,EAFY,GAGZ,GAHY,GAIZsmB,2BAA2B,CAACtoB,IAAD,CAJzB,CAAN;EAKH,CAlB4D,CAmB7D;;;EACA,IAAI,OAAO7J,IAAP,KAAgB,QAAhB,IACAA,IAAI,CAACZ,MAAL,GAAcuqD,cAAc,GAAG,CAD/B,IAEAx5C,4DAAY,CAACnQ,IAAD,CAAZ,GAAqB2pD,cAFzB,EAEyC;IACrC,MAAM,IAAItsD,KAAJ,CAAUsK,WAAW,GACvB,iCADY,GAEZgiD,cAFY,GAGZ,cAHY,GAIZx3B,2BAA2B,CAACtoB,IAAD,CAJf,GAKZ,KALY,GAMZ7J,IAAI,CAAC4V,SAAL,CAAe,CAAf,EAAkB,EAAlB,CANY,GAOZ,OAPE,CAAN;EAQH,CA/B4D,CAgC7D;EACA;;;EACA,IAAI5V,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;IAClC,IAAIkqD,WAAW,GAAG,KAAlB;IACA,IAAIC,cAAc,GAAG,KAArB;IACAt0C,IAAI,CAAC7V,IAAD,EAAO,CAACzB,GAAD,EAAMpC,KAAN,KAAgB;MACvB,IAAIoC,GAAG,KAAK,QAAZ,EAAsB;QAClB2rD,WAAW,GAAG,IAAd;MACH,CAFD,MAGK,IAAI3rD,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,KAAnC,EAA0C;QAC3C4rD,cAAc,GAAG,IAAjB;;QACA,IAAI,CAACP,UAAU,CAACrrD,GAAD,CAAf,EAAsB;UAClB,MAAM,IAAIlB,KAAJ,CAAUsK,WAAW,GACvB,4BADY,GAEZpJ,GAFY,GAGZ,IAHY,GAIZ4zB,2BAA2B,CAACtoB,IAAD,CAJf,GAKZ,oCALY,GAMZ,oDANE,CAAN;QAOH;MACJ;;MACDioB,kBAAkB,CAACjoB,IAAD,EAAOtL,GAAP,CAAlB;MACA0rD,oBAAoB,CAACtiD,WAAD,EAAcxL,KAAd,EAAqB0N,IAArB,CAApB;MACAmoB,iBAAiB,CAACnoB,IAAD,CAAjB;IACH,CAnBG,CAAJ;;IAoBA,IAAIqgD,WAAW,IAAIC,cAAnB,EAAmC;MAC/B,MAAM,IAAI9sD,KAAJ,CAAUsK,WAAW,GACvB,2BADY,GAEZwqB,2BAA2B,CAACtoB,IAAD,CAFf,GAGZ,kCAHE,CAAN;IAIH;EACJ;AACJ,CAhED;AAiEA;AACA;AACA;;;AACA,MAAMugD,0BAA0B,GAAG,UAAUziD,WAAV,EAAuB0iD,UAAvB,EAAmC;EAClE,IAAIhrD,CAAJ,EAAOirD,OAAP;;EACA,KAAKjrD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgrD,UAAU,CAACjrD,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;IACpCirD,OAAO,GAAGD,UAAU,CAAChrD,CAAD,CAApB;IACA,MAAMgW,IAAI,GAAG6a,SAAS,CAACo6B,OAAD,CAAtB;;IACA,KAAK,IAAIh5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjc,IAAI,CAACjW,MAAzB,EAAiCkyB,CAAC,EAAlC,EAAsC;MAClC,IAAIjc,IAAI,CAACic,CAAD,CAAJ,KAAY,WAAZ,IAA2BA,CAAC,KAAKjc,IAAI,CAACjW,MAAL,GAAc,CAAnD,EAAsD,CAAtD,KACK,IAAI,CAACwqD,UAAU,CAACv0C,IAAI,CAACic,CAAD,CAAL,CAAf,EAA0B;QAC3B,MAAM,IAAIj0B,KAAJ,CAAUsK,WAAW,GACvB,2BADY,GAEZ0N,IAAI,CAACic,CAAD,CAFQ,GAGZ,YAHY,GAIZg5B,OAAO,CAACz+C,QAAR,EAJY,GAKZ,mCALY,GAMZ,oDANE,CAAN;MAOH;IACJ;EACJ,CAjBiE,CAkBlE;EACA;EACA;;;EACAw+C,UAAU,CAAC90C,IAAX,CAAgBwb,WAAhB;EACA,IAAIw5B,QAAQ,GAAG,IAAf;;EACA,KAAKlrD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgrD,UAAU,CAACjrD,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;IACpCirD,OAAO,GAAGD,UAAU,CAAChrD,CAAD,CAApB;;IACA,IAAIkrD,QAAQ,KAAK,IAAb,IAAqBh5B,YAAY,CAACg5B,QAAD,EAAWD,OAAX,CAArC,EAA0D;MACtD,MAAM,IAAIjtD,KAAJ,CAAUsK,WAAW,GACvB,kBADY,GAEZ4iD,QAAQ,CAAC1+C,QAAT,EAFY,GAGZ,oCAHY,GAIZy+C,OAAO,CAACz+C,QAAR,EAJE,CAAN;IAKH;;IACD0+C,QAAQ,GAAGD,OAAX;EACH;AACJ,CAlCD;AAmCA;AACA;AACA;AACA;;;AACA,MAAME,4BAA4B,GAAG,UAAUjiD,MAAV,EAAkBvI,IAAlB,EAAwB6J,IAAxB,EAA8BnB,QAA9B,EAAwC;EACzE,IAAIA,QAAQ,IAAI1I,IAAI,KAAKxD,SAAzB,EAAoC;IAChC;EACH;;EACD,MAAMiuD,aAAa,GAAG9iD,2DAAW,CAACY,MAAD,EAAS,QAAT,CAAjC;;EACA,IAAI,EAAEvI,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA1B,KAAuCqJ,KAAK,CAACC,OAAN,CAActJ,IAAd,CAA3C,EAAgE;IAC5D,MAAM,IAAI3C,KAAJ,CAAUotD,aAAa,GAAG,wDAA1B,CAAN;EACH;;EACD,MAAMJ,UAAU,GAAG,EAAnB;EACAx0C,IAAI,CAAC7V,IAAD,EAAO,CAACzB,GAAD,EAAMpC,KAAN,KAAgB;IACvB,MAAMmuD,OAAO,GAAG,IAAIl7B,IAAJ,CAAS7wB,GAAT,CAAhB;IACA0rD,oBAAoB,CAACQ,aAAD,EAAgBtuD,KAAhB,EAAuBm0B,SAAS,CAACzmB,IAAD,EAAOygD,OAAP,CAAhC,CAApB;;IACA,IAAIv6B,WAAW,CAACu6B,OAAD,CAAX,KAAyB,WAA7B,EAA0C;MACtC,IAAI,CAACP,eAAe,CAAC5tD,KAAD,CAApB,EAA6B;QACzB,MAAM,IAAIkB,KAAJ,CAAUotD,aAAa,GACzB,iCADY,GAEZH,OAAO,CAACz+C,QAAR,EAFY,GAGZ,2BAHY,GAIZ,qEAJE,CAAN;MAKH;IACJ;;IACDw+C,UAAU,CAACtrD,IAAX,CAAgBurD,OAAhB;EACH,CAbG,CAAJ;EAcAF,0BAA0B,CAACK,aAAD,EAAgBJ,UAAhB,CAA1B;AACH,CAxBD;;AAyBA,MAAMK,gBAAgB,GAAG,UAAUniD,MAAV,EAAkBY,QAAlB,EAA4BT,QAA5B,EAAsC;EAC3D,IAAIA,QAAQ,IAAIS,QAAQ,KAAK3M,SAA7B,EAAwC;IACpC;EACH;;EACD,IAAIoX,mBAAmB,CAACzK,QAAD,CAAvB,EAAmC;IAC/B,MAAM,IAAI9L,KAAJ,CAAUsK,2DAAW,CAACY,MAAD,EAAS,UAAT,CAAX,GACZ,KADY,GAEZY,QAAQ,CAAC0C,QAAT,EAFY,GAGZ,oEAHY,GAIZ,yBAJE,CAAN;EAKH,CAV0D,CAW3D;;;EACA,IAAI,CAACk+C,eAAe,CAAC5gD,QAAD,CAApB,EAAgC;IAC5B,MAAM,IAAI9L,KAAJ,CAAUsK,2DAAW,CAACY,MAAD,EAAS,UAAT,CAAX,GACZ,oCADY,GAEZ,mDAFE,CAAN;EAGH;AACJ,CAjBD;;AAkBA,MAAMoiD,WAAW,GAAG,UAAUpiD,MAAV,EAAkBC,YAAlB,EAAgCjK,GAAhC,EAAqCmK,QAArC,EAA+C;EAC/D,IAAIA,QAAQ,IAAInK,GAAG,KAAK/B,SAAxB,EAAmC;IAC/B;EACH;;EACD,IAAI,CAACotD,UAAU,CAACrrD,GAAD,CAAf,EAAsB;IAClB,MAAM,IAAIlB,KAAJ,CAAUsK,2DAAW,CAACY,MAAD,EAASC,YAAT,CAAX,GACZ,wBADY,GAEZjK,GAFY,GAGZ,kDAHY,GAIZ,kDAJE,CAAN;EAKH;AACJ,CAXD;AAYA;AACA;AACA;;;AACA,MAAMqsD,kBAAkB,GAAG,UAAUriD,MAAV,EAAkBC,YAAlB,EAAgC4D,UAAhC,EAA4C1D,QAA5C,EAAsD;EAC7E,IAAIA,QAAQ,IAAI0D,UAAU,KAAK5P,SAA/B,EAA0C;IACtC;EACH;;EACD,IAAI,CAACqtD,iBAAiB,CAACz9C,UAAD,CAAtB,EAAoC;IAChC,MAAM,IAAI/O,KAAJ,CAAUsK,2DAAW,CAACY,MAAD,EAASC,YAAT,CAAX,GACZ,yBADY,GAEZ4D,UAFY,GAGZ,yCAHY,GAIZ,2CAJE,CAAN;EAKH;AACJ,CAXD;;AAYA,MAAMy+C,sBAAsB,GAAG,UAAUtiD,MAAV,EAAkBC,YAAlB,EAAgC4D,UAAhC,EAA4C1D,QAA5C,EAAsD;EACjF,IAAI0D,UAAJ,EAAgB;IACZ;IACAA,UAAU,GAAGA,UAAU,CAACiuB,OAAX,CAAmB,kBAAnB,EAAuC,GAAvC,CAAb;EACH;;EACDuwB,kBAAkB,CAACriD,MAAD,EAASC,YAAT,EAAuB4D,UAAvB,EAAmC1D,QAAnC,CAAlB;AACH,CAND;AAOA;AACA;AACA;;;AACA,MAAMoiD,oBAAoB,GAAG,UAAUviD,MAAV,EAAkBsB,IAAlB,EAAwB;EACjD,IAAI+lB,YAAY,CAAC/lB,IAAD,CAAZ,KAAuB,OAA3B,EAAoC;IAChC,MAAM,IAAIxM,KAAJ,CAAUkL,MAAM,GAAG,2CAAnB,CAAN;EACH;AACJ,CAJD;;AAKA,MAAMwiD,WAAW,GAAG,UAAUxiD,MAAV,EAAkByiD,SAAlB,EAA6B;EAC7C;EACA,MAAM5+C,UAAU,GAAG4+C,SAAS,CAACnhD,IAAV,CAAegC,QAAf,EAAnB;;EACA,IAAI,EAAE,OAAOm/C,SAAS,CAAClvC,QAAV,CAAmBtO,IAA1B,KAAmC,QAArC,KACAw9C,SAAS,CAAClvC,QAAV,CAAmBtO,IAAnB,CAAwBpO,MAAxB,KAAmC,CADnC,IAEC,CAACwqD,UAAU,CAACoB,SAAS,CAAClvC,QAAV,CAAmB5N,SAApB,CAAX,IACG88C,SAAS,CAAClvC,QAAV,CAAmBtO,IAAnB,CAAwBgiB,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,MAA0C,WAH9C,IAICpjB,UAAU,CAAChN,MAAX,KAAsB,CAAtB,IAA2B,CAAC0qD,qBAAqB,CAAC19C,UAAD,CAJtD,EAIqE;IACjE,MAAM,IAAI/O,KAAJ,CAAUsK,2DAAW,CAACY,MAAD,EAAS,KAAT,CAAX,GACZ,mCADY,GAEZ,qDAFE,CAAN;EAGH;AACJ,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM0iD,UAAN,CAAiB;EACbpoD,WAAW,GAAG;IACV,KAAKqoD,WAAL,GAAmB,EAAnB;IACA;AACR;AACA;;IACQ,KAAKC,eAAL,GAAuB,CAAvB;EACH;;AAPY;AASjB;AACA;AACA;;;AACA,SAASC,qBAAT,CAA+BC,UAA/B,EAA2CC,aAA3C,EAA0D;EACtD;EACA,IAAIC,QAAQ,GAAG,IAAf;;EACA,KAAK,IAAIlsD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGisD,aAAa,CAAClsD,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;IAC3C,MAAMW,IAAI,GAAGsrD,aAAa,CAACjsD,CAAD,CAA1B;IACA,MAAMwK,IAAI,GAAG7J,IAAI,CAACwrD,OAAL,EAAb;;IACA,IAAID,QAAQ,KAAK,IAAb,IAAqB,CAACl6B,UAAU,CAACxnB,IAAD,EAAO0hD,QAAQ,CAAC1hD,IAAhB,CAApC,EAA2D;MACvDwhD,UAAU,CAACH,WAAX,CAAuBnsD,IAAvB,CAA4BwsD,QAA5B;MACAA,QAAQ,GAAG,IAAX;IACH;;IACD,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;MACnBA,QAAQ,GAAG;QAAE5sD,MAAM,EAAE,EAAV;QAAckL;MAAd,CAAX;IACH;;IACD0hD,QAAQ,CAAC5sD,MAAT,CAAgBI,IAAhB,CAAqBiB,IAArB;EACH;;EACD,IAAIurD,QAAJ,EAAc;IACVF,UAAU,CAACH,WAAX,CAAuBnsD,IAAvB,CAA4BwsD,QAA5B;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,2BAAT,CAAqCJ,UAArC,EAAiDxhD,IAAjD,EAAuDyhD,aAAvD,EAAsE;EAClEF,qBAAqB,CAACC,UAAD,EAAaC,aAAb,CAArB;EACAI,4CAA4C,CAACL,UAAD,EAAaM,SAAS,IAAIt6B,UAAU,CAACs6B,SAAD,EAAY9hD,IAAZ,CAApC,CAA5C;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+hD,mCAAT,CAA6CP,UAA7C,EAAyDQ,WAAzD,EAAsEP,aAAtE,EAAqF;EACjFF,qBAAqB,CAACC,UAAD,EAAaC,aAAb,CAArB;EACAI,4CAA4C,CAACL,UAAD,EAAaM,SAAS,IAAIp6B,YAAY,CAACo6B,SAAD,EAAYE,WAAZ,CAAZ,IAClEt6B,YAAY,CAACs6B,WAAD,EAAcF,SAAd,CAD4B,CAA5C;AAEH;;AACD,SAASD,4CAAT,CAAsDL,UAAtD,EAAkE3W,SAAlE,EAA6E;EACzE2W,UAAU,CAACF,eAAX;EACA,IAAIW,OAAO,GAAG,IAAd;;EACA,KAAK,IAAIzsD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgsD,UAAU,CAACH,WAAX,CAAuB9rD,MAA3C,EAAmDC,CAAC,EAApD,EAAwD;IACpD,MAAM0sD,SAAS,GAAGV,UAAU,CAACH,WAAX,CAAuB7rD,CAAvB,CAAlB;;IACA,IAAI0sD,SAAJ,EAAe;MACX,MAAMJ,SAAS,GAAGI,SAAS,CAACliD,IAA5B;;MACA,IAAI6qC,SAAS,CAACiX,SAAD,CAAb,EAA0B;QACtBK,cAAc,CAACX,UAAU,CAACH,WAAX,CAAuB7rD,CAAvB,CAAD,CAAd;QACAgsD,UAAU,CAACH,WAAX,CAAuB7rD,CAAvB,IAA4B,IAA5B;MACH,CAHD,MAIK;QACDysD,OAAO,GAAG,KAAV;MACH;IACJ;EACJ;;EACD,IAAIA,OAAJ,EAAa;IACTT,UAAU,CAACH,WAAX,GAAyB,EAAzB;EACH;;EACDG,UAAU,CAACF,eAAX;AACH;AACD;AACA;AACA;;;AACA,SAASa,cAAT,CAAwBD,SAAxB,EAAmC;EAC/B,KAAK,IAAI1sD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0sD,SAAS,CAACptD,MAAV,CAAiBS,MAArC,EAA6CC,CAAC,EAA9C,EAAkD;IAC9C,MAAMqvB,SAAS,GAAGq9B,SAAS,CAACptD,MAAV,CAAiBU,CAAjB,CAAlB;;IACA,IAAIqvB,SAAS,KAAK,IAAlB,EAAwB;MACpBq9B,SAAS,CAACptD,MAAV,CAAiBU,CAAjB,IAAsB,IAAtB;MACA,MAAM4sD,OAAO,GAAGv9B,SAAS,CAACw9B,cAAV,EAAhB;;MACA,IAAIp5C,MAAJ,EAAY;QACRO,GAAG,CAAC,YAAYqb,SAAS,CAAC7iB,QAAV,EAAb,CAAH;MACH;;MACDuM,cAAc,CAAC6zC,OAAD,CAAd;IACH;EACJ;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,gBAAgB,GAAG,gBAAzB;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,uBAAuB,GAAG,EAAhC;AACA;AACA;AACA;;AACA,MAAMC,IAAN,CAAW;EACPxpD,WAAW,CAACinB,SAAD,EAAYwiC,gBAAZ,EAA8Bl5B,kBAA9B,EAAkDm5B,iBAAlD,EAAqE;IAC5E,KAAKziC,SAAL,GAAiBA,SAAjB;IACA,KAAKwiC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKl5B,kBAAL,GAA0BA,kBAA1B;IACA,KAAKm5B,iBAAL,GAAyBA,iBAAzB;IACA,KAAKC,eAAL,GAAuB,CAAvB;IACA,KAAKjc,cAAL,GAAsB,IAAtB;IACA,KAAKkc,WAAL,GAAmB,IAAIxB,UAAJ,EAAnB;IACA,KAAKyB,YAAL,GAAoB,CAApB;IACA,KAAKC,4BAAL,GAAoC,IAApC;IACA;;IACA,KAAKltC,aAAL,GAAqBuvB,qBAAqB,EAA1C;IACA;;IACA,KAAK4d,qBAAL,GAA6B,IAAIrE,IAAJ,EAA7B,CAb4E,CAc5E;;IACA,KAAKsE,qBAAL,GAA6B,IAA7B,CAf4E,CAgB5E;;IACA,KAAKtuD,GAAL,GAAW,KAAKurB,SAAL,CAAelO,WAAf,EAAX;EACH;EACD;AACJ;AACA;;;EACI/P,QAAQ,GAAG;IACP,OAAQ,CAAC,KAAKie,SAAL,CAAe7O,MAAf,GAAwB,UAAxB,GAAqC,SAAtC,IAAmD,KAAK6O,SAAL,CAAetc,IAA1E;EACH;;AAzBM;;AA2BX,SAASs/C,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,YAAhC,EAA8C;EAC1CF,IAAI,CAAC3tC,MAAL,GAAc3C,yBAAyB,CAACswC,IAAI,CAACjjC,SAAN,CAAvC;;EACA,IAAIijC,IAAI,CAACT,gBAAL,IAAyBh0C,YAAY,EAAzC,EAA6C;IACzCy0C,IAAI,CAAC1c,OAAL,GAAe,IAAIpC,kBAAJ,CAAuB8e,IAAI,CAACjjC,SAA5B,EAAuC,CAAC1d,UAAD,EAAapM,IAAb,EAAmBktD,OAAnB,EAA4Br3B,GAA5B,KAAoC;MACtFs3B,gBAAgB,CAACJ,IAAD,EAAO3gD,UAAP,EAAmBpM,IAAnB,EAAyBktD,OAAzB,EAAkCr3B,GAAlC,CAAhB;IACH,CAFc,EAEZk3B,IAAI,CAAC35B,kBAFO,EAEa25B,IAAI,CAACR,iBAFlB,CAAf,CADyC,CAIzC;;IACAj4C,UAAU,CAAC,MAAM84C,mBAAmB,CAACL,IAAD;IAAO;IAAqB,IAA5B,CAA1B,EAA6D,CAA7D,CAAV;EACH,CAND,MAOK;IACD;IACA,IAAI,OAAOE,YAAP,KAAwB,WAAxB,IAAuCA,YAAY,KAAK,IAA5D,EAAkE;MAC9D,IAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;QAClC,MAAM,IAAI5vD,KAAJ,CAAU,oEAAV,CAAN;MACH;;MACD,IAAI;QACAmS,yDAAS,CAACy9C,YAAD,CAAT;MACH,CAFD,CAGA,OAAOl7C,CAAP,EAAU;QACN,MAAM,IAAI1U,KAAJ,CAAU,oCAAoC0U,CAA9C,CAAN;MACH;IACJ;;IACDg7C,IAAI,CAACF,qBAAL,GAA6B,IAAI75B,oBAAJ,CAAyB+5B,IAAI,CAACjjC,SAA9B,EAAyCkjC,KAAzC,EAAgD,CAAC5gD,UAAD,EAAapM,IAAb,EAAmBktD,OAAnB,EAA4Br3B,GAA5B,KAAoC;MAC7Gs3B,gBAAgB,CAACJ,IAAD,EAAO3gD,UAAP,EAAmBpM,IAAnB,EAAyBktD,OAAzB,EAAkCr3B,GAAlC,CAAhB;IACH,CAF4B,EAEzBw3B,aAAD,IAAmB;MAClBD,mBAAmB,CAACL,IAAD,EAAOM,aAAP,CAAnB;IACH,CAJ4B,EAIzB9W,OAAD,IAAa;MACZ+W,sBAAsB,CAACP,IAAD,EAAOxW,OAAP,CAAtB;IACH,CAN4B,EAM1BwW,IAAI,CAAC35B,kBANqB,EAMD25B,IAAI,CAACR,iBANJ,EAMuBU,YANvB,CAA7B;IAOAF,IAAI,CAAC1c,OAAL,GAAe0c,IAAI,CAACF,qBAApB;EACH;;EACDE,IAAI,CAAC35B,kBAAL,CAAwB/Z,sBAAxB,CAA+CwU,KAAK,IAAI;IACpDk/B,IAAI,CAAC1c,OAAL,CAAaziB,gBAAb,CAA8BC,KAA9B;EACH,CAFD;EAGAk/B,IAAI,CAACR,iBAAL,CAAuBlzC,sBAAvB,CAA8CpQ,MAAM,IAAI;IACpD8jD,IAAI,CAAC1c,OAAL,CAAaviB,oBAAb,CAAkC7kB,MAAM,CAAC4kB,KAAzC;EACH,CAFD,EAlC0C,CAqC1C;EACA;;EACAk/B,IAAI,CAACQ,cAAL,GAAsB5wC,+BAA+B,CAACowC,IAAI,CAACjjC,SAAN,EAAiB,MAAM,IAAIqmB,aAAJ,CAAkB4c,IAAI,CAAC3tC,MAAvB,EAA+B2tC,IAAI,CAAC1c,OAApC,CAAvB,CAArD,CAvC0C,CAwC1C;;EACA0c,IAAI,CAACS,SAAL,GAAiB,IAAI7e,cAAJ,EAAjB;EACAoe,IAAI,CAACU,aAAL,GAAqB,IAAInL,QAAJ,CAAa;IAC9BmC,cAAc,EAAE,CAACtkD,KAAD,EAAQ01B,GAAR,EAAaD,aAAb,EAA4B7sB,UAA5B,KAA2C;MACvD,IAAI2kD,UAAU,GAAG,EAAjB;MACA,MAAMjzB,IAAI,GAAGsyB,IAAI,CAACS,SAAL,CAAe3e,OAAf,CAAuB1uC,KAAK,CAAC+L,KAA7B,CAAb,CAFuD,CAGvD;MACA;;MACA,IAAI,CAACuuB,IAAI,CAAClqB,OAAL,EAAL,EAAqB;QACjBm9C,UAAU,GAAGtK,4BAA4B,CAAC2J,IAAI,CAACU,aAAN,EAAqBttD,KAAK,CAAC+L,KAA3B,EAAkCuuB,IAAlC,CAAzC;QACAnmB,UAAU,CAAC,MAAM;UACbvL,UAAU,CAAC,IAAD,CAAV;QACH,CAFS,EAEP,CAFO,CAAV;MAGH;;MACD,OAAO2kD,UAAP;IACH,CAb6B;IAc9B7I,aAAa,EAAE,MAAM,CAAG;EAdM,CAAb,CAArB;EAgBA8I,cAAc,CAACZ,IAAD,EAAO,WAAP,EAAoB,KAApB,CAAd;EACAA,IAAI,CAACa,eAAL,GAAuB,IAAItL,QAAJ,CAAa;IAChCmC,cAAc,EAAE,CAACtkD,KAAD,EAAQ01B,GAAR,EAAaD,aAAb,EAA4B7sB,UAA5B,KAA2C;MACvDgkD,IAAI,CAAC1c,OAAL,CAAa1a,MAAb,CAAoBx1B,KAApB,EAA2By1B,aAA3B,EAA0CC,GAA1C,EAA+C,CAACW,MAAD,EAASx2B,IAAT,KAAkB;QAC7D,MAAMrB,MAAM,GAAGoK,UAAU,CAACytB,MAAD,EAASx2B,IAAT,CAAzB;QACA4rD,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmBtsD,KAAK,CAAC+L,KAAzB,EAAgCvN,MAAhC,CAAnC;MACH,CAHD,EADuD,CAKvD;;MACA,OAAO,EAAP;IACH,CAR+B;IAShCkmD,aAAa,EAAE,CAAC1kD,KAAD,EAAQ01B,GAAR,KAAgB;MAC3Bk3B,IAAI,CAAC1c,OAAL,CAAa1Y,QAAb,CAAsBx3B,KAAtB,EAA6B01B,GAA7B;IACH;EAX+B,CAAb,CAAvB;AAaH;AACD;AACA;AACA;;;AACA,SAASg4B,cAAT,CAAwBd,IAAxB,EAA8B;EAC1B,MAAMe,UAAU,GAAGf,IAAI,CAACS,SAAL,CAAe3e,OAAf,CAAuB,IAAIzf,IAAJ,CAAS,wBAAT,CAAvB,CAAnB;EACA,MAAM2+B,MAAM,GAAGD,UAAU,CAACtrD,GAAX,MAAoB,CAAnC;EACA,OAAO,IAAIg2B,IAAJ,GAAWC,OAAX,KAAuBs1B,MAA9B;AACH;AACD;AACA;AACA;;;AACA,SAASC,wBAAT,CAAkCjB,IAAlC,EAAwC;EACpC,OAAOxF,kBAAkB,CAAC;IACtBp6B,SAAS,EAAE0gC,cAAc,CAACd,IAAD;EADH,CAAD,CAAzB;AAGH;AACD;AACA;AACA;;;AACA,SAASI,gBAAT,CAA0BJ,IAA1B,EAAgC3gD,UAAhC,EAA4CpM,IAA5C,EAAkDktD,OAAlD,EAA2Dr3B,GAA3D,EAAgE;EAC5D;EACAk3B,IAAI,CAACP,eAAL;EACA,MAAM3iD,IAAI,GAAG,IAAIulB,IAAJ,CAAShjB,UAAT,CAAb;EACApM,IAAI,GAAG+sD,IAAI,CAACJ,4BAAL,GACDI,IAAI,CAACJ,4BAAL,CAAkCvgD,UAAlC,EAA8CpM,IAA9C,CADC,GAEDA,IAFN;EAGA,IAAIrB,MAAM,GAAG,EAAb;;EACA,IAAIk3B,GAAJ,EAAS;IACL,IAAIq3B,OAAJ,EAAa;MACT,MAAMe,cAAc,GAAGxzD,mDAAG,CAACuF,IAAD,EAAQkuD,GAAD,IAASvnB,YAAY,CAACunB,GAAD,CAA5B,CAA1B;MACAvvD,MAAM,GAAGwmD,6BAA6B,CAAC4H,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6BokD,cAA7B,EAA6Cp4B,GAA7C,CAAtC;IACH,CAHD,MAIK;MACD,MAAMs4B,UAAU,GAAGxnB,YAAY,CAAC3mC,IAAD,CAA/B;MACArB,MAAM,GAAGumD,iCAAiC,CAAC6H,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6BskD,UAA7B,EAAyCt4B,GAAzC,CAA1C;IACH;EACJ,CATD,MAUK,IAAIq3B,OAAJ,EAAa;IACd,MAAMtV,eAAe,GAAGn9C,mDAAG,CAACuF,IAAD,EAAQkuD,GAAD,IAASvnB,YAAY,CAACunB,GAAD,CAA5B,CAA3B;IACAvvD,MAAM,GAAG0kD,wBAAwB,CAAC0J,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6B+tC,eAA7B,CAAjC;EACH,CAHI,MAIA;IACD,MAAM52C,IAAI,GAAG2lC,YAAY,CAAC3mC,IAAD,CAAzB;IACArB,MAAM,GAAGykD,4BAA4B,CAAC2J,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6B7I,IAA7B,CAArC;EACH;;EACD,IAAIsnC,YAAY,GAAGz+B,IAAnB;;EACA,IAAIlL,MAAM,CAACS,MAAP,GAAgB,CAApB,EAAuB;IACnB;IACA;IACAkpC,YAAY,GAAG8lB,qBAAqB,CAACrB,IAAD,EAAOljD,IAAP,CAApC;EACH;;EACD+hD,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmBnkB,YAAnB,EAAiC3pC,MAAjC,CAAnC;AACH;;AACD,SAASyuD,mBAAT,CAA6BL,IAA7B,EAAmCM,aAAnC,EAAkD;EAC9CM,cAAc,CAACZ,IAAD,EAAO,WAAP,EAAoBM,aAApB,CAAd;;EACA,IAAIA,aAAa,KAAK,KAAtB,EAA6B;IACzBgB,yBAAyB,CAACtB,IAAD,CAAzB;EACH;AACJ;;AACD,SAASO,sBAAT,CAAgCP,IAAhC,EAAsCxW,OAAtC,EAA+C;EAC3C1gC,IAAI,CAAC0gC,OAAD,EAAU,CAACh4C,GAAD,EAAMpC,KAAN,KAAgB;IAC1BwxD,cAAc,CAACZ,IAAD,EAAOxuD,GAAP,EAAYpC,KAAZ,CAAd;EACH,CAFG,CAAJ;AAGH;;AACD,SAASwxD,cAAT,CAAwBZ,IAAxB,EAA8B3gD,UAA9B,EAA0CjQ,KAA1C,EAAiD;EAC7C,MAAM0N,IAAI,GAAG,IAAIulB,IAAJ,CAAS,YAAYhjB,UAArB,CAAb;EACA,MAAM4uB,OAAO,GAAG2L,YAAY,CAACxqC,KAAD,CAA5B;EACA4wD,IAAI,CAACS,SAAL,CAAe1e,cAAf,CAA8BjlC,IAA9B,EAAoCmxB,OAApC;EACA,MAAMr8B,MAAM,GAAGykD,4BAA4B,CAAC2J,IAAI,CAACU,aAAN,EAAqB5jD,IAArB,EAA2BmxB,OAA3B,CAA3C;EACA4wB,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmB5iD,IAAnB,EAAyBlL,MAAzB,CAAnC;AACH;;AACD,SAAS2vD,kBAAT,CAA4BvB,IAA5B,EAAkC;EAC9B,OAAOA,IAAI,CAACL,YAAL,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6B,YAAT,CAAsBxB,IAAtB,EAA4B5sD,KAA5B,EAAmCw/C,iBAAnC,EAAsD;EAClD;EACA,MAAM6O,MAAM,GAAGzI,sBAAsB,CAACgH,IAAI,CAACa,eAAN,EAAuBztD,KAAvB,CAArC;;EACA,IAAIquD,MAAM,IAAI,IAAd,EAAoB;IAChB,OAAOp1C,OAAO,CAAC5N,OAAR,CAAgBgjD,MAAhB,CAAP;EACH;;EACD,OAAOzB,IAAI,CAAC1c,OAAL,CAAa1qC,GAAb,CAAiBxF,KAAjB,EAAwB+I,IAAxB,CAA6B5K,OAAO,IAAI;IAC3C,MAAMm8B,IAAI,GAAGkM,YAAY,CAACroC,OAAD,CAAZ,CAAsB0iC,SAAtB,CAAgC7gC,KAAK,CAAC81B,YAAN,CAAmBa,QAAnB,EAAhC,CAAb;IACA;AACR;AACA;AACA;AACA;AACA;AACA;;IACQsuB,4BAA4B,CAAC2H,IAAI,CAACa,eAAN,EAAuBztD,KAAvB,EAA8Bw/C,iBAA9B,EAAiD,IAAjD,CAA5B;IACA,IAAIhhD,MAAJ;;IACA,IAAIwB,KAAK,CAAC81B,YAAN,CAAmBE,YAAnB,EAAJ,EAAuC;MACnCx3B,MAAM,GAAGykD,4BAA4B,CAAC2J,IAAI,CAACa,eAAN,EAAuBztD,KAAK,CAAC+L,KAA7B,EAAoCuuB,IAApC,CAArC;IACH,CAFD,MAGK;MACD,MAAM5E,GAAG,GAAG8uB,mBAAmB,CAACoI,IAAI,CAACa,eAAN,EAAuBztD,KAAvB,CAA/B;MACAxB,MAAM,GAAGumD,iCAAiC,CAAC6H,IAAI,CAACa,eAAN,EAAuBztD,KAAK,CAAC+L,KAA7B,EAAoCuuB,IAApC,EAA0C5E,GAA1C,CAA1C;IACH;IACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACQ+1B,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmBtsD,KAAK,CAAC+L,KAAzB,EAAgCvN,MAAhC,CAAnC;IACAmlD,+BAA+B,CAACiJ,IAAI,CAACa,eAAN,EAAuBztD,KAAvB,EAA8Bw/C,iBAA9B,EAAiD,IAAjD,EAAuD,IAAvD,CAA/B;IACA,OAAOllB,IAAP;EACH,CA/BM,EA+BJx8B,GAAG,IAAI;IACNwwD,OAAO,CAAC1B,IAAD,EAAO,mBAAmBv9C,yDAAS,CAACrP,KAAD,CAA5B,GAAsC,WAAtC,GAAoDlC,GAA3D,CAAP;IACA,OAAOmb,OAAO,CAAC3N,MAAR,CAAe,IAAIpO,KAAJ,CAAUY,GAAV,CAAf,CAAP;EACH,CAlCM,CAAP;AAmCH;;AACD,SAASywD,mBAAT,CAA6B3B,IAA7B,EAAmCljD,IAAnC,EAAyC4C,MAAzC,EAAiDE,WAAjD,EAA8D5D,UAA9D,EAA0E;EACtE0lD,OAAO,CAAC1B,IAAD,EAAO,KAAP,EAAc;IACjBljD,IAAI,EAAEA,IAAI,CAACgC,QAAL,EADW;IAEjB1P,KAAK,EAAEsQ,MAFU;IAGjBtD,QAAQ,EAAEwD;EAHO,CAAd,CAAP,CADsE,CAMtE;EACA;;EACA,MAAM+6C,YAAY,GAAGsG,wBAAwB,CAACjB,IAAD,CAA7C;EACA,MAAM4B,iBAAiB,GAAGhoB,YAAY,CAACl6B,MAAD,EAASE,WAAT,CAAtC;EACA,MAAMuzC,QAAQ,GAAG2F,8BAA8B,CAACkH,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,CAA/C;EACA,MAAMmxB,OAAO,GAAGmtB,4BAA4B,CAACwG,iBAAD,EAAoBzO,QAApB,EAA8BwH,YAA9B,CAA5C;EACA,MAAMnQ,OAAO,GAAG+W,kBAAkB,CAACvB,IAAD,CAAlC;EACA,MAAMpuD,MAAM,GAAGikD,0BAA0B,CAACmK,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6BmxB,OAA7B,EAAsCuc,OAAtC,EAA+C,IAA/C,CAAzC;EACA6T,qBAAqB,CAAC2B,IAAI,CAACN,WAAN,EAAmB9tD,MAAnB,CAArB;EACAouD,IAAI,CAAC1c,OAAL,CAAa3iB,GAAb,CAAiB7jB,IAAI,CAACgC,QAAL,EAAjB,EAAkC8iD,iBAAiB,CAACnsD,GAAlB;EAAsB;EAAY,IAAlC,CAAlC,EAA2E,CAACg0B,MAAD,EAAS2B,WAAT,KAAyB;IAChG,MAAMy2B,OAAO,GAAGp4B,MAAM,KAAK,IAA3B;;IACA,IAAI,CAACo4B,OAAL,EAAc;MACVzmD,IAAI,CAAC,YAAY0B,IAAZ,GAAmB,WAAnB,GAAiC2sB,MAAlC,CAAJ;IACH;;IACD,MAAMq4B,WAAW,GAAG3L,oBAAoB,CAAC6J,IAAI,CAACa,eAAN,EAAuBrW,OAAvB,EAAgC,CAACqX,OAAjC,CAAxC;IACAhD,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmB5iD,IAAnB,EAAyBglD,WAAzB,CAAnC;IACAC,0BAA0B,CAAC/B,IAAD,EAAOhkD,UAAP,EAAmBytB,MAAnB,EAA2B2B,WAA3B,CAA1B;EACH,CARD;EASA,MAAMmQ,YAAY,GAAGymB,qBAAqB,CAAChC,IAAD,EAAOljD,IAAP,CAA1C;EACAukD,qBAAqB,CAACrB,IAAD,EAAOzkB,YAAP,CAArB,CAzBsE,CA0BtE;;EACAsjB,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmBnkB,YAAnB,EAAiC,EAAjC,CAAnC;AACH;;AACD,SAAS0mB,UAAT,CAAoBjC,IAApB,EAA0BljD,IAA1B,EAAgColD,eAAhC,EAAiDlmD,UAAjD,EAA6D;EACzD0lD,OAAO,CAAC1B,IAAD,EAAO,QAAP,EAAiB;IAAEljD,IAAI,EAAEA,IAAI,CAACgC,QAAL,EAAR;IAAyB1P,KAAK,EAAE8yD;EAAhC,CAAjB,CAAP,CADyD,CAEzD;;EACA,IAAIjZ,KAAK,GAAG,IAAZ;EACA,MAAM0R,YAAY,GAAGsG,wBAAwB,CAACjB,IAAD,CAA7C;EACA,MAAMnV,eAAe,GAAG,EAAxB;EACA/hC,IAAI,CAACo5C,eAAD,EAAkB,CAACC,UAAD,EAAaC,YAAb,KAA8B;IAChDnZ,KAAK,GAAG,KAAR;IACA4B,eAAe,CAACsX,UAAD,CAAf,GAA8BjH,wBAAwB,CAAC33B,SAAS,CAACzmB,IAAD,EAAOqlD,UAAP,CAAV,EAA8BvoB,YAAY,CAACwoB,YAAD,CAA1C,EAA0DpC,IAAI,CAACa,eAA/D,EAAgFlG,YAAhF,CAAtD;EACH,CAHG,CAAJ;;EAIA,IAAI,CAAC1R,KAAL,EAAY;IACR,MAAMuB,OAAO,GAAG+W,kBAAkB,CAACvB,IAAD,CAAlC;IACA,MAAMpuD,MAAM,GAAGqkD,sBAAsB,CAAC+J,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6B+tC,eAA7B,EAA8CL,OAA9C,CAArC;IACA6T,qBAAqB,CAAC2B,IAAI,CAACN,WAAN,EAAmB9tD,MAAnB,CAArB;IACAouD,IAAI,CAAC1c,OAAL,CAAa71C,KAAb,CAAmBqP,IAAI,CAACgC,QAAL,EAAnB,EAAoCojD,eAApC,EAAqD,CAACz4B,MAAD,EAAS2B,WAAT,KAAyB;MAC1E,MAAMy2B,OAAO,GAAGp4B,MAAM,KAAK,IAA3B;;MACA,IAAI,CAACo4B,OAAL,EAAc;QACVzmD,IAAI,CAAC,eAAe0B,IAAf,GAAsB,WAAtB,GAAoC2sB,MAArC,CAAJ;MACH;;MACD,MAAMq4B,WAAW,GAAG3L,oBAAoB,CAAC6J,IAAI,CAACa,eAAN,EAAuBrW,OAAvB,EAAgC,CAACqX,OAAjC,CAAxC;MACA,MAAMtmB,YAAY,GAAGumB,WAAW,CAACzvD,MAAZ,GAAqB,CAArB,GAAyBgvD,qBAAqB,CAACrB,IAAD,EAAOljD,IAAP,CAA9C,GAA6DA,IAAlF;MACA+hD,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmBnkB,YAAnB,EAAiCumB,WAAjC,CAAnC;MACAC,0BAA0B,CAAC/B,IAAD,EAAOhkD,UAAP,EAAmBytB,MAAnB,EAA2B2B,WAA3B,CAA1B;IACH,CATD;IAUAtiB,IAAI,CAACo5C,eAAD,EAAmBpD,WAAD,IAAiB;MACnC,MAAMvjB,YAAY,GAAGymB,qBAAqB,CAAChC,IAAD,EAAOz8B,SAAS,CAACzmB,IAAD,EAAOgiD,WAAP,CAAhB,CAA1C;MACAuC,qBAAqB,CAACrB,IAAD,EAAOzkB,YAAP,CAArB;IACH,CAHG,CAAJ,CAdQ,CAkBR;;IACAsjB,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmB5iD,IAAnB,EAAyB,EAAzB,CAAnC;EACH,CApBD,MAqBK;IACDwJ,GAAG,CAAC,sDAAD,CAAH;IACAy7C,0BAA0B,CAAC/B,IAAD,EAAOhkD,UAAP,EAAmB,IAAnB,EAAyBvM,SAAzB,CAA1B;EACH;AACJ;AACD;AACA;AACA;;;AACA,SAAS6xD,yBAAT,CAAmCtB,IAAnC,EAAyC;EACrC0B,OAAO,CAAC1B,IAAD,EAAO,oBAAP,CAAP;EACA,MAAMrF,YAAY,GAAGsG,wBAAwB,CAACjB,IAAD,CAA7C;EACA,MAAMqC,wBAAwB,GAAGpgB,qBAAqB,EAAtD;EACAO,6BAA6B,CAACwd,IAAI,CAACttC,aAAN,EAAqBkQ,YAAY,EAAjC,EAAqC,CAAC9lB,IAAD,EAAO4wB,IAAP,KAAgB;IAC9E,MAAM40B,QAAQ,GAAGpH,wBAAwB,CAACp+C,IAAD,EAAO4wB,IAAP,EAAasyB,IAAI,CAACa,eAAlB,EAAmClG,YAAnC,CAAzC;IACAzY,0BAA0B,CAACmgB,wBAAD,EAA2BvlD,IAA3B,EAAiCwlD,QAAjC,CAA1B;EACH,CAH4B,CAA7B;EAIA,IAAI1wD,MAAM,GAAG,EAAb;EACA4wC,6BAA6B,CAAC6f,wBAAD,EAA2Bz/B,YAAY,EAAvC,EAA2C,CAAC9lB,IAAD,EAAO7I,IAAP,KAAgB;IACpFrC,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAcgD,4BAA4B,CAAC2J,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6B7I,IAA7B,CAA1C,CAAT;IACA,MAAMsnC,YAAY,GAAGymB,qBAAqB,CAAChC,IAAD,EAAOljD,IAAP,CAA1C;IACAukD,qBAAqB,CAACrB,IAAD,EAAOzkB,YAAP,CAArB;EACH,CAJ4B,CAA7B;EAKAykB,IAAI,CAACttC,aAAL,GAAqBuvB,qBAAqB,EAA1C;EACA4c,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmB98B,YAAY,EAA/B,EAAmChxB,MAAnC,CAAnC;AACH;;AACD,SAAS2wD,sBAAT,CAAgCvC,IAAhC,EAAsCljD,IAAtC,EAA4Cd,UAA5C,EAAwD;EACpDgkD,IAAI,CAAC1c,OAAL,CAAapiB,kBAAb,CAAgCpkB,IAAI,CAACgC,QAAL,EAAhC,EAAiD,CAAC2qB,MAAD,EAAS2B,WAAT,KAAyB;IACtE,IAAI3B,MAAM,KAAK,IAAf,EAAqB;MACjB4Y,wBAAwB,CAAC2d,IAAI,CAACttC,aAAN,EAAqB5V,IAArB,CAAxB;IACH;;IACDilD,0BAA0B,CAAC/B,IAAD,EAAOhkD,UAAP,EAAmBytB,MAAnB,EAA2B2B,WAA3B,CAA1B;EACH,CALD;AAMH;;AACD,SAASo3B,mBAAT,CAA6BxC,IAA7B,EAAmCljD,IAAnC,EAAyC1N,KAAzC,EAAgD4M,UAAhD,EAA4D;EACxD,MAAMiyB,OAAO,GAAG2L,YAAY,CAACxqC,KAAD,CAA5B;EACA4wD,IAAI,CAAC1c,OAAL,CAAatiB,eAAb,CAA6BlkB,IAAI,CAACgC,QAAL,EAA7B,EAA8CmvB,OAAO,CAACx4B,GAAR;EAAY;EAAY,IAAxB,CAA9C,EAA6E,CAACg0B,MAAD,EAAS2B,WAAT,KAAyB;IAClG,IAAI3B,MAAM,KAAK,IAAf,EAAqB;MACjByY,0BAA0B,CAAC8d,IAAI,CAACttC,aAAN,EAAqB5V,IAArB,EAA2BmxB,OAA3B,CAA1B;IACH;;IACD8zB,0BAA0B,CAAC/B,IAAD,EAAOhkD,UAAP,EAAmBytB,MAAnB,EAA2B2B,WAA3B,CAA1B;EACH,CALD;AAMH;;AACD,SAASq3B,+BAAT,CAAyCzC,IAAzC,EAA+CljD,IAA/C,EAAqD1N,KAArD,EAA4DgN,QAA5D,EAAsEJ,UAAtE,EAAkF;EAC9E,MAAMiyB,OAAO,GAAG2L,YAAY,CAACxqC,KAAD,EAAQgN,QAAR,CAA5B;EACA4jD,IAAI,CAAC1c,OAAL,CAAatiB,eAAb,CAA6BlkB,IAAI,CAACgC,QAAL,EAA7B,EAA8CmvB,OAAO,CAACx4B,GAAR;EAAY;EAAY,IAAxB,CAA9C,EAA6E,CAACg0B,MAAD,EAAS2B,WAAT,KAAyB;IAClG,IAAI3B,MAAM,KAAK,IAAf,EAAqB;MACjByY,0BAA0B,CAAC8d,IAAI,CAACttC,aAAN,EAAqB5V,IAArB,EAA2BmxB,OAA3B,CAA1B;IACH;;IACD8zB,0BAA0B,CAAC/B,IAAD,EAAOhkD,UAAP,EAAmBytB,MAAnB,EAA2B2B,WAA3B,CAA1B;EACH,CALD;AAMH;;AACD,SAASs3B,sBAAT,CAAgC1C,IAAhC,EAAsCljD,IAAtC,EAA4ColD,eAA5C,EAA6DlmD,UAA7D,EAAyE;EACrE,IAAIwH,uDAAO,CAAC0+C,eAAD,CAAX,EAA8B;IAC1B57C,GAAG,CAAC,qEAAD,CAAH;IACAy7C,0BAA0B,CAAC/B,IAAD,EAAOhkD,UAAP,EAAmB,IAAnB,EAAyBvM,SAAzB,CAA1B;IACA;EACH;;EACDuwD,IAAI,CAAC1c,OAAL,CAAariB,iBAAb,CAA+BnkB,IAAI,CAACgC,QAAL,EAA/B,EAAgDojD,eAAhD,EAAiE,CAACz4B,MAAD,EAAS2B,WAAT,KAAyB;IACtF,IAAI3B,MAAM,KAAK,IAAf,EAAqB;MACjB3gB,IAAI,CAACo5C,eAAD,EAAkB,CAACrvB,SAAD,EAAYG,SAAZ,KAA0B;QAC5C,MAAME,YAAY,GAAG0G,YAAY,CAAC5G,SAAD,CAAjC;QACAkP,0BAA0B,CAAC8d,IAAI,CAACttC,aAAN,EAAqB6Q,SAAS,CAACzmB,IAAD,EAAO+1B,SAAP,CAA9B,EAAiDK,YAAjD,CAA1B;MACH,CAHG,CAAJ;IAIH;;IACD6uB,0BAA0B,CAAC/B,IAAD,EAAOhkD,UAAP,EAAmBytB,MAAnB,EAA2B2B,WAA3B,CAA1B;EACH,CARD;AASH;;AACD,SAASu3B,4BAAT,CAAsC3C,IAAtC,EAA4C5sD,KAA5C,EAAmDw/C,iBAAnD,EAAsE;EAClE,IAAIhhD,MAAJ;;EACA,IAAIixB,YAAY,CAACzvB,KAAK,CAAC+L,KAAP,CAAZ,KAA8B,OAAlC,EAA2C;IACvCvN,MAAM,GAAGymD,4BAA4B,CAAC2H,IAAI,CAACU,aAAN,EAAqBttD,KAArB,EAA4Bw/C,iBAA5B,CAArC;EACH,CAFD,MAGK;IACDhhD,MAAM,GAAGymD,4BAA4B,CAAC2H,IAAI,CAACa,eAAN,EAAuBztD,KAAvB,EAA8Bw/C,iBAA9B,CAArC;EACH;;EACD8L,2BAA2B,CAACsB,IAAI,CAACN,WAAN,EAAmBtsD,KAAK,CAAC+L,KAAzB,EAAgCvN,MAAhC,CAA3B;AACH;;AACD,SAASgxD,+BAAT,CAAyC5C,IAAzC,EAA+C5sD,KAA/C,EAAsDw/C,iBAAtD,EAAyE;EACrE;EACA;EACA,IAAIhhD,MAAJ;;EACA,IAAIixB,YAAY,CAACzvB,KAAK,CAAC+L,KAAP,CAAZ,KAA8B,OAAlC,EAA2C;IACvCvN,MAAM,GAAGmlD,+BAA+B,CAACiJ,IAAI,CAACU,aAAN,EAAqBttD,KAArB,EAA4Bw/C,iBAA5B,CAAxC;EACH,CAFD,MAGK;IACDhhD,MAAM,GAAGmlD,+BAA+B,CAACiJ,IAAI,CAACa,eAAN,EAAuBztD,KAAvB,EAA8Bw/C,iBAA9B,CAAxC;EACH;;EACD8L,2BAA2B,CAACsB,IAAI,CAACN,WAAN,EAAmBtsD,KAAK,CAAC+L,KAAzB,EAAgCvN,MAAhC,CAA3B;AACH;;AACD,SAASixD,aAAT,CAAuB7C,IAAvB,EAA6B;EACzB,IAAIA,IAAI,CAACF,qBAAT,EAAgC;IAC5BE,IAAI,CAACF,qBAAL,CAA2B/yB,SAA3B,CAAqCqyB,gBAArC;EACH;AACJ;;AACD,SAAS0D,UAAT,CAAoB9C,IAApB,EAA0B;EACtB,IAAIA,IAAI,CAACF,qBAAT,EAAgC;IAC5BE,IAAI,CAACF,qBAAL,CAA2B9yB,MAA3B,CAAkCoyB,gBAAlC;EACH;AACJ;;AACD,SAASsC,OAAT,CAAiB1B,IAAjB,EAAuB,GAAGp6C,OAA1B,EAAmC;EAC/B,IAAIY,MAAM,GAAG,EAAb;;EACA,IAAIw5C,IAAI,CAACF,qBAAT,EAAgC;IAC5Bt5C,MAAM,GAAGw5C,IAAI,CAACF,qBAAL,CAA2B16C,EAA3B,GAAgC,GAAzC;EACH;;EACDkB,GAAG,CAACE,MAAD,EAAS,GAAGZ,OAAZ,CAAH;AACH;;AACD,SAASm8C,0BAAT,CAAoC/B,IAApC,EAA0CviD,QAA1C,EAAoDgsB,MAApD,EAA4D2B,WAA5D,EAAyE;EACrE,IAAI3tB,QAAJ,EAAc;IACV4N,cAAc,CAAC,MAAM;MACjB,IAAIoe,MAAM,KAAK,IAAf,EAAqB;QACjBhsB,QAAQ,CAAC,IAAD,CAAR;MACH,CAFD,MAGK;QACD,MAAMoN,IAAI,GAAG,CAAC4e,MAAM,IAAI,OAAX,EAAoB1e,WAApB,EAAb;QACA,IAAIzP,OAAO,GAAGuP,IAAd;;QACA,IAAIugB,WAAJ,EAAiB;UACb9vB,OAAO,IAAI,OAAO8vB,WAAlB;QACH;;QACD,MAAMj6B,KAAK,GAAG,IAAIb,KAAJ,CAAUgL,OAAV,CAAd,CANC,CAOD;;QACAnK,KAAK,CAAC0Z,IAAN,GAAaA,IAAb;QACApN,QAAQ,CAACtM,KAAD,CAAR;MACH;IACJ,CAfa,CAAd;EAgBH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4xD,oBAAT,CAA8B/C,IAA9B,EAAoCljD,IAApC,EAA0CgD,iBAA1C,EAA6D9D,UAA7D,EAAyEgnD,SAAzE,EAAoFjjD,YAApF,EAAkG;EAC9F2hD,OAAO,CAAC1B,IAAD,EAAO,oBAAoBljD,IAA3B,CAAP,CAD8F,CAE9F;;EACA,MAAM+C,WAAW,GAAG;IAChB/C,IADgB;IAEhB7H,MAAM,EAAE6K,iBAFQ;IAGhB9D,UAHgB;IAIhB;IACAytB,MAAM,EAAE,IALQ;IAMhB;IACA;IACAw5B,KAAK,EAAE99C,aAAa,EARJ;IAShB;IACApF,YAVgB;IAWhB;IACAmjD,UAAU,EAAE,CAZI;IAahB;IACAF,SAdgB;IAehB;IACAG,WAAW,EAAE,IAhBG;IAiBhBC,cAAc,EAAE,IAjBA;IAkBhBC,oBAAoB,EAAE,IAlBN;IAmBhBC,wBAAwB,EAAE,IAnBV;IAoBhBC,6BAA6B,EAAE;EApBf,CAApB,CAH8F,CAyB9F;;EACA,MAAMC,YAAY,GAAGC,kBAAkB,CAACzD,IAAD,EAAOljD,IAAP,EAAarN,SAAb,CAAvC;EACAoQ,WAAW,CAACwjD,oBAAZ,GAAmCG,YAAnC;EACA,MAAM9jD,MAAM,GAAGG,WAAW,CAAC5K,MAAZ,CAAmBuuD,YAAY,CAAC/tD,GAAb,EAAnB,CAAf;;EACA,IAAIiK,MAAM,KAAKjQ,SAAf,EAA0B;IACtB;IACAoQ,WAAW,CAACmjD,SAAZ;IACAnjD,WAAW,CAACyjD,wBAAZ,GAAuC,IAAvC;IACAzjD,WAAW,CAAC0jD,6BAAZ,GAA4C,IAA5C;;IACA,IAAI1jD,WAAW,CAAC7D,UAAhB,EAA4B;MACxB6D,WAAW,CAAC7D,UAAZ,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC6D,WAAW,CAACwjD,oBAAhD;IACH;EACJ,CARD,MASK;IACDnG,oBAAoB,CAAC,oCAAD,EAAuCx9C,MAAvC,EAA+CG,WAAW,CAAC/C,IAA3D,CAApB,CADC,CAED;;IACA+C,WAAW,CAAC4pB,MAAZ,GAAqB;IAAE;IAAvB;IACA,MAAMi6B,SAAS,GAAGhI,WAAW,CAACsE,IAAI,CAACH,qBAAN,EAA6B/iD,IAA7B,CAA7B;IACA,MAAM6mD,SAAS,GAAG/H,YAAY,CAAC8H,SAAD,CAAZ,IAA2B,EAA7C;IACAC,SAAS,CAAC3xD,IAAV,CAAe6N,WAAf;IACAg8C,YAAY,CAAC6H,SAAD,EAAYC,SAAZ,CAAZ,CAPC,CAQD;IACA;IACA;IACA;;IACA,IAAIC,eAAJ;;IACA,IAAI,OAAOlkD,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAiD,wDAAQ,CAACjD,MAAD,EAAS,WAAT,CAFZ,EAEmC;MAC/B;MACAkkD,eAAe,GAAGvgD,uDAAO,CAAC3D,MAAD,EAAS,WAAT,CAAzB;MACAkD,sDAAM,CAACo6C,eAAe,CAAC4G,eAAD,CAAhB,EAAmC,+CACrC,wEADE,CAAN;IAEH,CAPD,MAQK;MACD,MAAMC,WAAW,GAAG/K,8BAA8B,CAACkH,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,CAA9B,IAChBg7B,YAAY,CAACpI,UADjB;MAEAk0B,eAAe,GAAGC,WAAW,CAAC5mD,WAAZ,GAA0BxH,GAA1B,EAAlB;IACH;;IACD,MAAMklD,YAAY,GAAGsG,wBAAwB,CAACjB,IAAD,CAA7C;IACA,MAAM4B,iBAAiB,GAAGhoB,YAAY,CAACl6B,MAAD,EAASkkD,eAAT,CAAtC;IACA,MAAM31B,OAAO,GAAGmtB,4BAA4B,CAACwG,iBAAD,EAAoB4B,YAApB,EAAkC7I,YAAlC,CAA5C;IACA96C,WAAW,CAACyjD,wBAAZ,GAAuC1B,iBAAvC;IACA/hD,WAAW,CAAC0jD,6BAAZ,GAA4Ct1B,OAA5C;IACApuB,WAAW,CAACujD,cAAZ,GAA6B7B,kBAAkB,CAACvB,IAAD,CAA/C;IACA,MAAMpuD,MAAM,GAAGikD,0BAA0B,CAACmK,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6BmxB,OAA7B,EAAsCpuB,WAAW,CAACujD,cAAlD,EAAkEvjD,WAAW,CAACE,YAA9E,CAAzC;IACA8+C,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmB5iD,IAAnB,EAAyBlL,MAAzB,CAAnC;IACAkyD,yBAAyB,CAAC9D,IAAD,EAAOA,IAAI,CAACH,qBAAZ,CAAzB;EACH;AACJ;AACD;AACA;AACA;;;AACA,SAAS4D,kBAAT,CAA4BzD,IAA5B,EAAkCljD,IAAlC,EAAwCinD,WAAxC,EAAqD;EACjD,OAAQjL,8BAA8B,CAACkH,IAAI,CAACa,eAAN,EAAuB/jD,IAAvB,EAA6BinD,WAA7B,CAA9B,IACJjsB,YAAY,CAACpI,UADjB;AAEH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASo0B,yBAAT,CAAmC9D,IAAnC,EAAyCtyB,IAAI,GAAGsyB,IAAI,CAACH,qBAArD,EAA4E;EACxE;EACA,IAAI,CAACnyB,IAAL,EAAW;IACPs2B,uCAAuC,CAAChE,IAAD,EAAOtyB,IAAP,CAAvC;EACH;;EACD,IAAIkuB,YAAY,CAACluB,IAAD,CAAhB,EAAwB;IACpB,MAAMu2B,KAAK,GAAGC,yBAAyB,CAAClE,IAAD,EAAOtyB,IAAP,CAAvC;IACA9qB,sDAAM,CAACqhD,KAAK,CAAC5xD,MAAN,GAAe,CAAhB,EAAmB,uCAAnB,CAAN;IACA,MAAM8xD,MAAM,GAAGF,KAAK,CAACG,KAAN,CAAavkD,WAAD,IAAiBA,WAAW,CAAC4pB,MAAZ,KAAuB;IAAE;IAAtD,CAAf,CAHoB,CAIpB;;IACA,IAAI06B,MAAJ,EAAY;MACRE,wBAAwB,CAACrE,IAAD,EAAO1D,WAAW,CAAC5uB,IAAD,CAAlB,EAA0Bu2B,KAA1B,CAAxB;IACH;EACJ,CARD,MASK,IAAIlI,eAAe,CAACruB,IAAD,CAAnB,EAA2B;IAC5BuuB,gBAAgB,CAACvuB,IAAD,EAAOsF,SAAS,IAAI;MAChC8wB,yBAAyB,CAAC9D,IAAD,EAAOhtB,SAAP,CAAzB;IACH,CAFe,CAAhB;EAGH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqxB,wBAAT,CAAkCrE,IAAlC,EAAwCljD,IAAxC,EAA8CmnD,KAA9C,EAAqD;EACjD;EACA,MAAMK,YAAY,GAAGL,KAAK,CAACv2D,GAAN,CAAU62D,GAAG,IAAI;IAClC,OAAOA,GAAG,CAACnB,cAAX;EACH,CAFoB,CAArB;EAGA,MAAMoB,WAAW,GAAGf,kBAAkB,CAACzD,IAAD,EAAOljD,IAAP,EAAawnD,YAAb,CAAtC;EACA,IAAIG,UAAU,GAAGD,WAAjB;EACA,MAAME,UAAU,GAAGF,WAAW,CAAC5jC,IAAZ,EAAnB;;EACA,KAAK,IAAItuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2xD,KAAK,CAAC5xD,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;IACnC,MAAMiyD,GAAG,GAAGN,KAAK,CAAC3xD,CAAD,CAAjB;IACAsQ,sDAAM,CAAC2hD,GAAG,CAAC96B,MAAJ,KAAe;IAAE;IAAlB,EAA+C,+DAA/C,CAAN;IACA86B,GAAG,CAAC96B,MAAJ,GAAa;IAAE;IAAf;IACA86B,GAAG,CAACrB,UAAJ;IACA,MAAMxb,YAAY,GAAG/jB,eAAe,CAAC7mB,IAAD,EAAOynD,GAAG,CAACznD,IAAX,CAApC,CALmC,CAMnC;;IACA2nD,UAAU,GAAGA,UAAU,CAACtxB,WAAX,CAAuBuU;IAAa;IAApC,EAA0D6c,GAAG,CAACjB,wBAA9D,CAAb;EACH;;EACD,MAAMqB,UAAU,GAAGF,UAAU,CAAChvD,GAAX,CAAe,IAAf,CAAnB;EACA,MAAMmvD,UAAU,GAAG9nD,IAAnB,CAlBiD,CAmBjD;;EACAkjD,IAAI,CAAC1c,OAAL,CAAa3iB,GAAb,CAAiBikC,UAAU,CAAC9lD,QAAX,EAAjB,EAAwC6lD,UAAxC,EAAqDl7B,MAAD,IAAY;IAC5Di4B,OAAO,CAAC1B,IAAD,EAAO,0BAAP,EAAmC;MACtCljD,IAAI,EAAE8nD,UAAU,CAAC9lD,QAAX,EADgC;MAEtC2qB;IAFsC,CAAnC,CAAP;IAIA,IAAI73B,MAAM,GAAG,EAAb;;IACA,IAAI63B,MAAM,KAAK,IAAf,EAAqB;MACjB;MACA;MACA;MACA,MAAMo7B,SAAS,GAAG,EAAlB;;MACA,KAAK,IAAIvyD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2xD,KAAK,CAAC5xD,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;QACnC2xD,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,GAAkB;QAAE;QAApB;QACA73B,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAc8C,oBAAoB,CAAC6J,IAAI,CAACa,eAAN,EAAuBoD,KAAK,CAAC3xD,CAAD,CAAL,CAAS8wD,cAAhC,CAAlC,CAAT;;QACA,IAAIa,KAAK,CAAC3xD,CAAD,CAAL,CAAS0J,UAAb,EAAyB;UACrB;UACA;UACA6oD,SAAS,CAAC7yD,IAAV,CAAe,MAAMiyD,KAAK,CAAC3xD,CAAD,CAAL,CAAS0J,UAAT,CAAoB,IAApB,EAA0B,IAA1B,EAAgCioD,KAAK,CAAC3xD,CAAD,CAAL,CAASixD,6BAAzC,CAArB;QACH;;QACDU,KAAK,CAAC3xD,CAAD,CAAL,CAAS0wD,SAAT;MACH,CAdgB,CAejB;;;MACAgB,uCAAuC,CAAChE,IAAD,EAAOtE,WAAW,CAACsE,IAAI,CAACH,qBAAN,EAA6B/iD,IAA7B,CAAlB,CAAvC,CAhBiB,CAiBjB;;MACAgnD,yBAAyB,CAAC9D,IAAD,EAAOA,IAAI,CAACH,qBAAZ,CAAzB;MACAhB,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmB5iD,IAAnB,EAAyBlL,MAAzB,CAAnC,CAnBiB,CAoBjB;;MACA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuyD,SAAS,CAACxyD,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;QACvC+Y,cAAc,CAACw5C,SAAS,CAACvyD,CAAD,CAAV,CAAd;MACH;IACJ,CAxBD,MAyBK;MACD;MACA,IAAIm3B,MAAM,KAAK,WAAf,EAA4B;QACxB,KAAK,IAAIn3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2xD,KAAK,CAAC5xD,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;UACnC,IAAI2xD,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,KAAoB;UAAE;UAA1B,EAAoE;YAChEw6B,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,GAAkB;YAAE;YAApB;UACH,CAFD,MAGK;YACDw6B,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,GAAkB;YAAE;YAApB;UACH;QACJ;MACJ,CATD,MAUK;QACDruB,IAAI,CAAC,oBAAoBwpD,UAAU,CAAC9lD,QAAX,EAApB,GAA4C,WAA5C,GAA0D2qB,MAA3D,CAAJ;;QACA,KAAK,IAAIn3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2xD,KAAK,CAAC5xD,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;UACnC2xD,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,GAAkB;UAAE;UAApB;UACAw6B,KAAK,CAAC3xD,CAAD,CAAL,CAAS6wD,WAAT,GAAuB15B,MAAvB;QACH;MACJ;;MACD43B,qBAAqB,CAACrB,IAAD,EAAOljD,IAAP,CAArB;IACH;EACJ,CApDD,EAoDG4nD,UApDH;AAqDH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASrD,qBAAT,CAA+BrB,IAA/B,EAAqClB,WAArC,EAAkD;EAC9C,MAAMgG,uBAAuB,GAAGC,8BAA8B,CAAC/E,IAAD,EAAOlB,WAAP,CAA9D;EACA,MAAMhiD,IAAI,GAAGw/C,WAAW,CAACwI,uBAAD,CAAxB;EACA,MAAMb,KAAK,GAAGC,yBAAyB,CAAClE,IAAD,EAAO8E,uBAAP,CAAvC;EACAE,yBAAyB,CAAChF,IAAD,EAAOiE,KAAP,EAAcnnD,IAAd,CAAzB;EACA,OAAOA,IAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkoD,yBAAT,CAAmChF,IAAnC,EAAyCiE,KAAzC,EAAgDnnD,IAAhD,EAAsD;EAClD,IAAImnD,KAAK,CAAC5xD,MAAN,KAAiB,CAArB,EAAwB;IACpB,OADoB,CACZ;EACX,CAHiD,CAIlD;EACA;EACA;;;EACA,MAAMwyD,SAAS,GAAG,EAAlB;EACA,IAAIjzD,MAAM,GAAG,EAAb,CARkD,CASlD;;EACA,MAAMqzD,WAAW,GAAGhB,KAAK,CAACpxD,MAAN,CAAa01B,CAAC,IAAI;IAClC,OAAOA,CAAC,CAACkB,MAAF,KAAa;IAAE;IAAtB;EACH,CAFmB,CAApB;EAGA,MAAM66B,YAAY,GAAGW,WAAW,CAACv3D,GAAZ,CAAgB66B,CAAC,IAAI;IACtC,OAAOA,CAAC,CAAC66B,cAAT;EACH,CAFoB,CAArB;;EAGA,KAAK,IAAI9wD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2xD,KAAK,CAAC5xD,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;IACnC,MAAMuN,WAAW,GAAGokD,KAAK,CAAC3xD,CAAD,CAAzB;IACA,MAAMo1C,YAAY,GAAG/jB,eAAe,CAAC7mB,IAAD,EAAO+C,WAAW,CAAC/C,IAAnB,CAApC;IACA,IAAIooD,gBAAgB,GAAG,KAAvB;IAAA,IAA8B/B,WAA9B;IACAvgD,sDAAM,CAAC8kC,YAAY,KAAK,IAAlB,EAAwB,+DAAxB,CAAN;;IACA,IAAI7nC,WAAW,CAAC4pB,MAAZ,KAAuB;IAAE;IAA7B,EAAkE;MAC9Dy7B,gBAAgB,GAAG,IAAnB;MACA/B,WAAW,GAAGtjD,WAAW,CAACsjD,WAA1B;MACAvxD,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAc8C,oBAAoB,CAAC6J,IAAI,CAACa,eAAN,EAAuBhhD,WAAW,CAACujD,cAAnC,EAAmD,IAAnD,CAAlC,CAAT;IACH,CAJD,MAKK,IAAIvjD,WAAW,CAAC4pB,MAAZ,KAAuB;IAAE;IAA7B,EAA0D;MAC3D,IAAI5pB,WAAW,CAACqjD,UAAZ,IAA0B7D,uBAA9B,EAAuD;QACnD6F,gBAAgB,GAAG,IAAnB;QACA/B,WAAW,GAAG,UAAd;QACAvxD,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAc8C,oBAAoB,CAAC6J,IAAI,CAACa,eAAN,EAAuBhhD,WAAW,CAACujD,cAAnC,EAAmD,IAAnD,CAAlC,CAAT;MACH,CAJD,MAKK;QACD;QACA,MAAMS,WAAW,GAAGJ,kBAAkB,CAACzD,IAAD,EAAOngD,WAAW,CAAC/C,IAAnB,EAAyBwnD,YAAzB,CAAtC;QACAzkD,WAAW,CAACwjD,oBAAZ,GAAmCQ,WAAnC;QACA,MAAM9N,OAAO,GAAGkO,KAAK,CAAC3xD,CAAD,CAAL,CAAS2C,MAAT,CAAgB4uD,WAAW,CAACpuD,GAAZ,EAAhB,CAAhB;;QACA,IAAIsgD,OAAO,KAAKtmD,SAAhB,EAA2B;UACvBytD,oBAAoB,CAAC,oCAAD,EAAuCnH,OAAvC,EAAgDl2C,WAAW,CAAC/C,IAA5D,CAApB;UACA,IAAIqoD,WAAW,GAAGvrB,YAAY,CAACmc,OAAD,CAA9B;UACA,MAAMqP,mBAAmB,GAAG,OAAOrP,OAAP,KAAmB,QAAnB,IACxBA,OAAO,IAAI,IADa,IAExBpzC,wDAAQ,CAACozC,OAAD,EAAU,WAAV,CAFZ;;UAGA,IAAI,CAACqP,mBAAL,EAA0B;YACtB;YACAD,WAAW,GAAGA,WAAW,CAACzyB,cAAZ,CAA2BmxB,WAAW,CAAC5mD,WAAZ,EAA3B,CAAd;UACH;;UACD,MAAMooD,UAAU,GAAGxlD,WAAW,CAACujD,cAA/B;UACA,MAAMzI,YAAY,GAAGsG,wBAAwB,CAACjB,IAAD,CAA7C;UACA,MAAMsF,eAAe,GAAGlK,4BAA4B,CAAC+J,WAAD,EAActB,WAAd,EAA2BlJ,YAA3B,CAApD;UACA96C,WAAW,CAACyjD,wBAAZ,GAAuC6B,WAAvC;UACAtlD,WAAW,CAAC0jD,6BAAZ,GAA4C+B,eAA5C;UACAzlD,WAAW,CAACujD,cAAZ,GAA6B7B,kBAAkB,CAACvB,IAAD,CAA/C,CAfuB,CAgBvB;;UACAsE,YAAY,CAACvxD,MAAb,CAAoBuxD,YAAY,CAACnwD,OAAb,CAAqBkxD,UAArB,CAApB,EAAsD,CAAtD;UACAzzD,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAcwC,0BAA0B,CAACmK,IAAI,CAACa,eAAN,EAAuBhhD,WAAW,CAAC/C,IAAnC,EAAyCwoD,eAAzC,EAA0DzlD,WAAW,CAACujD,cAAtE,EAAsFvjD,WAAW,CAACE,YAAlG,CAAxC,CAAT;UACAnO,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAc8C,oBAAoB,CAAC6J,IAAI,CAACa,eAAN,EAAuBwE,UAAvB,EAAmC,IAAnC,CAAlC,CAAT;QACH,CApBD,MAqBK;UACDH,gBAAgB,GAAG,IAAnB;UACA/B,WAAW,GAAG,QAAd;UACAvxD,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAc8C,oBAAoB,CAAC6J,IAAI,CAACa,eAAN,EAAuBhhD,WAAW,CAACujD,cAAnC,EAAmD,IAAnD,CAAlC,CAAT;QACH;MACJ;IACJ;;IACDvE,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmB5iD,IAAnB,EAAyBlL,MAAzB,CAAnC;IACAA,MAAM,GAAG,EAAT;;IACA,IAAIszD,gBAAJ,EAAsB;MAClB;MACAjB,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,GAAkB;MAAE;MAApB,CAFkB,CAGlB;MACA;MACA;;MACA,CAAC,UAAUu5B,SAAV,EAAqB;QAClBz7C,UAAU,CAACy7C,SAAD,EAAYx7C,IAAI,CAACC,KAAL,CAAW,CAAX,CAAZ,CAAV;MACH,CAFD,EAEGw8C,KAAK,CAAC3xD,CAAD,CAAL,CAAS0wD,SAFZ;;MAGA,IAAIiB,KAAK,CAAC3xD,CAAD,CAAL,CAAS0J,UAAb,EAAyB;QACrB,IAAImnD,WAAW,KAAK,QAApB,EAA8B;UAC1B0B,SAAS,CAAC7yD,IAAV,CAAe,MAAMiyD,KAAK,CAAC3xD,CAAD,CAAL,CAAS0J,UAAT,CAAoB,IAApB,EAA0B,KAA1B,EAAiCioD,KAAK,CAAC3xD,CAAD,CAAL,CAAS+wD,oBAA1C,CAArB;QACH,CAFD,MAGK;UACDwB,SAAS,CAAC7yD,IAAV,CAAe,MAAMiyD,KAAK,CAAC3xD,CAAD,CAAL,CAAS0J,UAAT,CAAoB,IAAI1L,KAAJ,CAAU6yD,WAAV,CAApB,EAA4C,KAA5C,EAAmD,IAAnD,CAArB;QACH;MACJ;IACJ;EACJ,CArFiD,CAsFlD;;;EACAa,uCAAuC,CAAChE,IAAD,EAAOA,IAAI,CAACH,qBAAZ,CAAvC,CAvFkD,CAwFlD;;EACA,KAAK,IAAIvtD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuyD,SAAS,CAACxyD,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;IACvC+Y,cAAc,CAACw5C,SAAS,CAACvyD,CAAD,CAAV,CAAd;EACH,CA3FiD,CA4FlD;;;EACAwxD,yBAAyB,CAAC9D,IAAD,EAAOA,IAAI,CAACH,qBAAZ,CAAzB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkF,8BAAT,CAAwC/E,IAAxC,EAA8CljD,IAA9C,EAAoD;EAChD,IAAIs2B,KAAJ,CADgD,CAEhD;EACA;;EACA,IAAImyB,eAAe,GAAGvF,IAAI,CAACH,qBAA3B;EACAzsB,KAAK,GAAGvQ,YAAY,CAAC/lB,IAAD,CAApB;;EACA,OAAOs2B,KAAK,KAAK,IAAV,IAAkBwoB,YAAY,CAAC2J,eAAD,CAAZ,KAAkC91D,SAA3D,EAAsE;IAClE81D,eAAe,GAAG7J,WAAW,CAAC6J,eAAD,EAAkBnyB,KAAlB,CAA7B;IACAt2B,IAAI,GAAGimB,YAAY,CAACjmB,IAAD,CAAnB;IACAs2B,KAAK,GAAGvQ,YAAY,CAAC/lB,IAAD,CAApB;EACH;;EACD,OAAOyoD,eAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASrB,yBAAT,CAAmClE,IAAnC,EAAyCuF,eAAzC,EAA0D;EACtD;EACA,MAAMC,gBAAgB,GAAG,EAAzB;EACAC,qCAAqC,CAACzF,IAAD,EAAOuF,eAAP,EAAwBC,gBAAxB,CAArC,CAHsD,CAItD;;EACAA,gBAAgB,CAACh9C,IAAjB,CAAsB,CAACnT,CAAD,EAAI0S,CAAJ,KAAU1S,CAAC,CAAC4tD,KAAF,GAAUl7C,CAAC,CAACk7C,KAA5C;EACA,OAAOuC,gBAAP;AACH;;AACD,SAASC,qCAAT,CAA+CzF,IAA/C,EAAqDtyB,IAArD,EAA2Du2B,KAA3D,EAAkE;EAC9D,MAAMN,SAAS,GAAG/H,YAAY,CAACluB,IAAD,CAA9B;;EACA,IAAIi2B,SAAJ,EAAe;IACX,KAAK,IAAIrxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqxD,SAAS,CAACtxD,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;MACvC2xD,KAAK,CAACjyD,IAAN,CAAW2xD,SAAS,CAACrxD,CAAD,CAApB;IACH;EACJ;;EACD2pD,gBAAgB,CAACvuB,IAAD,EAAO/5B,KAAK,IAAI;IAC5B8xD,qCAAqC,CAACzF,IAAD,EAAOrsD,KAAP,EAAcswD,KAAd,CAArC;EACH,CAFe,CAAhB;AAGH;AACD;AACA;AACA;;;AACA,SAASD,uCAAT,CAAiDhE,IAAjD,EAAuDtyB,IAAvD,EAA6D;EACzD,MAAMu2B,KAAK,GAAGrI,YAAY,CAACluB,IAAD,CAA1B;;EACA,IAAIu2B,KAAJ,EAAW;IACP,IAAIyB,EAAE,GAAG,CAAT;;IACA,KAAK,IAAIvX,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAG8V,KAAK,CAAC5xD,MAAhC,EAAwC87C,IAAI,EAA5C,EAAgD;MAC5C,IAAI8V,KAAK,CAAC9V,IAAD,CAAL,CAAY1kB,MAAZ,KAAuB;MAAE;MAA7B,EAAgE;QAC5Dw6B,KAAK,CAACyB,EAAD,CAAL,GAAYzB,KAAK,CAAC9V,IAAD,CAAjB;QACAuX,EAAE;MACL;IACJ;;IACDzB,KAAK,CAAC5xD,MAAN,GAAeqzD,EAAf;IACA7J,YAAY,CAACnuB,IAAD,EAAOu2B,KAAK,CAAC5xD,MAAN,GAAe,CAAf,GAAmB4xD,KAAnB,GAA2Bx0D,SAAlC,CAAZ;EACH;;EACDwsD,gBAAgB,CAACvuB,IAAD,EAAOsF,SAAS,IAAI;IAChCgxB,uCAAuC,CAAChE,IAAD,EAAOhtB,SAAP,CAAvC;EACH,CAFe,CAAhB;AAGH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgvB,qBAAT,CAA+BhC,IAA/B,EAAqCljD,IAArC,EAA2C;EACvC,MAAMy+B,YAAY,GAAG+gB,WAAW,CAACyI,8BAA8B,CAAC/E,IAAD,EAAOljD,IAAP,CAA/B,CAAhC;EACA,MAAMyoD,eAAe,GAAG7J,WAAW,CAACsE,IAAI,CAACH,qBAAN,EAA6B/iD,IAA7B,CAAnC;EACAu/C,mBAAmB,CAACkJ,eAAD,EAAmB73B,IAAD,IAAU;IAC3Ci4B,2BAA2B,CAAC3F,IAAD,EAAOtyB,IAAP,CAA3B;EACH,CAFkB,CAAnB;EAGAi4B,2BAA2B,CAAC3F,IAAD,EAAOuF,eAAP,CAA3B;EACArJ,qBAAqB,CAACqJ,eAAD,EAAmB73B,IAAD,IAAU;IAC7Ci4B,2BAA2B,CAAC3F,IAAD,EAAOtyB,IAAP,CAA3B;EACH,CAFoB,CAArB;EAGA,OAAO6N,YAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASoqB,2BAAT,CAAqC3F,IAArC,EAA2CtyB,IAA3C,EAAiD;EAC7C,MAAMu2B,KAAK,GAAGrI,YAAY,CAACluB,IAAD,CAA1B;;EACA,IAAIu2B,KAAJ,EAAW;IACP;IACA;IACA;IACA,MAAMY,SAAS,GAAG,EAAlB,CAJO,CAKP;IACA;;IACA,IAAIjzD,MAAM,GAAG,EAAb;IACA,IAAIg0D,QAAQ,GAAG,CAAC,CAAhB;;IACA,KAAK,IAAItzD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2xD,KAAK,CAAC5xD,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;MACnC,IAAI2xD,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,KAAoB;MAAE;MAA1B,EAAoE,CAApE,KACK,IAAIw6B,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,KAAoB;MAAE;MAA1B,EAAwD;QACzD7mB,sDAAM,CAACgjD,QAAQ,KAAKtzD,CAAC,GAAG,CAAlB,EAAqB,iDAArB,CAAN;QACAszD,QAAQ,GAAGtzD,CAAX,CAFyD,CAGzD;;QACA2xD,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,GAAkB;QAAE;QAApB;QACAw6B,KAAK,CAAC3xD,CAAD,CAAL,CAAS6wD,WAAT,GAAuB,KAAvB;MACH,CANI,MAOA;QACDvgD,sDAAM,CAACqhD,KAAK,CAAC3xD,CAAD,CAAL,CAASm3B,MAAT,KAAoB;QAAE;QAAvB,EAAoD,wCAApD,CAAN,CADC,CAED;;QACAw6B,KAAK,CAAC3xD,CAAD,CAAL,CAAS0wD,SAAT;QACApxD,MAAM,GAAGA,MAAM,CAACyhD,MAAP,CAAc8C,oBAAoB,CAAC6J,IAAI,CAACa,eAAN,EAAuBoD,KAAK,CAAC3xD,CAAD,CAAL,CAAS8wD,cAAhC,EAAgD,IAAhD,CAAlC,CAAT;;QACA,IAAIa,KAAK,CAAC3xD,CAAD,CAAL,CAAS0J,UAAb,EAAyB;UACrB6oD,SAAS,CAAC7yD,IAAV,CAAeiyD,KAAK,CAAC3xD,CAAD,CAAL,CAAS0J,UAAT,CAAoBqC,IAApB,CAAyB,IAAzB,EAA+B,IAAI/N,KAAJ,CAAU,KAAV,CAA/B,EAAiD,KAAjD,EAAwD,IAAxD,CAAf;QACH;MACJ;IACJ;;IACD,IAAIs1D,QAAQ,KAAK,CAAC,CAAlB,EAAqB;MACjB;MACA/J,YAAY,CAACnuB,IAAD,EAAOj+B,SAAP,CAAZ;IACH,CAHD,MAIK;MACD;MACAw0D,KAAK,CAAC5xD,MAAN,GAAeuzD,QAAQ,GAAG,CAA1B;IACH,CAnCM,CAoCP;;;IACA/G,mCAAmC,CAACmB,IAAI,CAACN,WAAN,EAAmBpD,WAAW,CAAC5uB,IAAD,CAA9B,EAAsC97B,MAAtC,CAAnC;;IACA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuyD,SAAS,CAACxyD,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;MACvC+Y,cAAc,CAACw5C,SAAS,CAACvyD,CAAD,CAAV,CAAd;IACH;EACJ;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASuzD,UAAT,CAAoBxmD,UAApB,EAAgC;EAC5B,IAAIymD,iBAAiB,GAAG,EAAxB;EACA,MAAMxiC,MAAM,GAAGjkB,UAAU,CAACojB,KAAX,CAAiB,GAAjB,CAAf;;EACA,KAAK,IAAInwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgxB,MAAM,CAACjxB,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;IACpC,IAAIgxB,MAAM,CAAChxB,CAAD,CAAN,CAAUD,MAAV,GAAmB,CAAvB,EAA0B;MACtB,IAAI0zD,KAAK,GAAGziC,MAAM,CAAChxB,CAAD,CAAlB;;MACA,IAAI;QACAyzD,KAAK,GAAGC,kBAAkB,CAACD,KAAK,CAACz4B,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAD,CAA1B;MACH,CAFD,CAGA,OAAOtoB,CAAP,EAAU,CAAG;;MACb8gD,iBAAiB,IAAI,MAAMC,KAA3B;IACH;EACJ;;EACD,OAAOD,iBAAP;AACH;AACD;AACA;AACA;;;AACA,SAASG,WAAT,CAAqBC,WAArB,EAAkC;EAC9B,MAAMC,OAAO,GAAG,EAAhB;;EACA,IAAID,WAAW,CAACE,MAAZ,CAAmB,CAAnB,MAA0B,GAA9B,EAAmC;IAC/BF,WAAW,GAAGA,WAAW,CAACr9C,SAAZ,CAAsB,CAAtB,CAAd;EACH;;EACD,KAAK,MAAMw9C,OAAX,IAAsBH,WAAW,CAACzjC,KAAZ,CAAkB,GAAlB,CAAtB,EAA8C;IAC1C,IAAI4jC,OAAO,CAACh0D,MAAR,KAAmB,CAAvB,EAA0B;MACtB;IACH;;IACD,MAAMi0D,EAAE,GAAGD,OAAO,CAAC5jC,KAAR,CAAc,GAAd,CAAX;;IACA,IAAI6jC,EAAE,CAACj0D,MAAH,KAAc,CAAlB,EAAqB;MACjB8zD,OAAO,CAACH,kBAAkB,CAACM,EAAE,CAAC,CAAD,CAAH,CAAnB,CAAP,GAAqCN,kBAAkB,CAACM,EAAE,CAAC,CAAD,CAAH,CAAvD;IACH,CAFD,MAGK;MACDlrD,IAAI,CAAE,0BAAyBirD,OAAQ,eAAcH,WAAY,GAA7D,CAAJ;IACH;EACJ;;EACD,OAAOC,OAAP;AACH;;AACD,MAAMI,aAAa,GAAG,UAAUC,OAAV,EAAmBplD,SAAnB,EAA8B;EAChD,MAAM68C,SAAS,GAAGwI,gBAAgB,CAACD,OAAD,CAAlC;EAAA,MAA6CrlD,SAAS,GAAG88C,SAAS,CAAC98C,SAAnE;;EACA,IAAI88C,SAAS,CAAC/nC,MAAV,KAAqB,cAAzB,EAAyC;IACrCzP,KAAK,CAACw3C,SAAS,CAACx9C,IAAV,GACF,2BADE,GAEF,mDAFC,CAAL;EAGH,CAN+C,CAOhD;;;EACA,IAAI,CAAC,CAACU,SAAD,IAAcA,SAAS,KAAK,WAA7B,KACA88C,SAAS,CAAC/nC,MAAV,KAAqB,WADzB,EACsC;IAClCzP,KAAK,CAAC,8EAAD,CAAL;EACH;;EACD,IAAI,CAACw3C,SAAS,CAAC/vC,MAAf,EAAuB;IACnBxH,kBAAkB;EACrB;;EACD,MAAMyH,aAAa,GAAG8vC,SAAS,CAACyI,MAAV,KAAqB,IAArB,IAA6BzI,SAAS,CAACyI,MAAV,KAAqB,KAAxE;EACA,OAAO;IACH33C,QAAQ,EAAE,IAAId,QAAJ,CAAagwC,SAAS,CAACx9C,IAAvB,EAA6Bw9C,SAAS,CAAC/vC,MAAvC,EAA+C/M,SAA/C,EAA0DgN,aAA1D,EAAyE/M,SAAzE;IACV;IAAoB,EADV;IAEV;IAAmCD,SAAS,KAAK88C,SAAS,CAAC0I,SAFjD,CADP;IAIH7pD,IAAI,EAAE,IAAIulB,IAAJ,CAAS47B,SAAS,CAAC5+C,UAAnB;EAJH,CAAP;AAMH,CAtBD;;AAuBA,MAAMonD,gBAAgB,GAAG,UAAUD,OAAV,EAAmB;EACxC;EACA,IAAI/lD,IAAI,GAAG,EAAX;EAAA,IAAeyV,MAAM,GAAG,EAAxB;EAAA,IAA4BywC,SAAS,GAAG,EAAxC;EAAA,IAA4CtnD,UAAU,GAAG,EAAzD;EAAA,IAA6D8B,SAAS,GAAG,EAAzE,CAFwC,CAGxC;;EACA,IAAI+M,MAAM,GAAG,IAAb;EAAA,IAAmBw4C,MAAM,GAAG,OAA5B;EAAA,IAAqChmD,IAAI,GAAG,GAA5C,CAJwC,CAKxC;;EACA,IAAI,OAAO8lD,OAAP,KAAmB,QAAvB,EAAiC;IAC7B;IACA,IAAII,QAAQ,GAAGJ,OAAO,CAACryD,OAAR,CAAgB,IAAhB,CAAf;;IACA,IAAIyyD,QAAQ,IAAI,CAAhB,EAAmB;MACfF,MAAM,GAAGF,OAAO,CAAC39C,SAAR,CAAkB,CAAlB,EAAqB+9C,QAAQ,GAAG,CAAhC,CAAT;MACAJ,OAAO,GAAGA,OAAO,CAAC39C,SAAR,CAAkB+9C,QAAQ,GAAG,CAA7B,CAAV;IACH,CAN4B,CAO7B;;;IACA,IAAIC,QAAQ,GAAGL,OAAO,CAACryD,OAAR,CAAgB,GAAhB,CAAf;;IACA,IAAI0yD,QAAQ,KAAK,CAAC,CAAlB,EAAqB;MACjBA,QAAQ,GAAGL,OAAO,CAACn0D,MAAnB;IACH;;IACD,IAAIy0D,eAAe,GAAGN,OAAO,CAACryD,OAAR,CAAgB,GAAhB,CAAtB;;IACA,IAAI2yD,eAAe,KAAK,CAAC,CAAzB,EAA4B;MACxBA,eAAe,GAAGN,OAAO,CAACn0D,MAA1B;IACH;;IACDoO,IAAI,GAAG+lD,OAAO,CAAC39C,SAAR,CAAkB,CAAlB,EAAqBrB,IAAI,CAACmC,GAAL,CAASk9C,QAAT,EAAmBC,eAAnB,CAArB,CAAP;;IACA,IAAID,QAAQ,GAAGC,eAAf,EAAgC;MAC5B;MACAznD,UAAU,GAAGwmD,UAAU,CAACW,OAAO,CAAC39C,SAAR,CAAkBg+C,QAAlB,EAA4BC,eAA5B,CAAD,CAAvB;IACH;;IACD,MAAM7mB,WAAW,GAAGgmB,WAAW,CAACO,OAAO,CAAC39C,SAAR,CAAkBrB,IAAI,CAACmC,GAAL,CAAS68C,OAAO,CAACn0D,MAAjB,EAAyBy0D,eAAzB,CAAlB,CAAD,CAA/B,CArB6B,CAsB7B;;IACAF,QAAQ,GAAGnmD,IAAI,CAACtM,OAAL,CAAa,GAAb,CAAX;;IACA,IAAIyyD,QAAQ,IAAI,CAAhB,EAAmB;MACf14C,MAAM,GAAGw4C,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,KAA1C;MACAhmD,IAAI,GAAGyJ,QAAQ,CAAC1J,IAAI,CAACoI,SAAL,CAAe+9C,QAAQ,GAAG,CAA1B,CAAD,EAA+B,EAA/B,CAAf;IACH,CAHD,MAIK;MACDA,QAAQ,GAAGnmD,IAAI,CAACpO,MAAhB;IACH;;IACD,MAAM00D,eAAe,GAAGtmD,IAAI,CAACzN,KAAL,CAAW,CAAX,EAAc4zD,QAAd,CAAxB;;IACA,IAAIG,eAAe,CAAC18C,WAAhB,OAAkC,WAAtC,EAAmD;MAC/C6L,MAAM,GAAG,WAAT;IACH,CAFD,MAGK,IAAI6wC,eAAe,CAACtkC,KAAhB,CAAsB,GAAtB,EAA2BpwB,MAA3B,IAAqC,CAAzC,EAA4C;MAC7C6jB,MAAM,GAAG6wC,eAAT;IACH,CAFI,MAGA;MACD;MACA,MAAMC,MAAM,GAAGvmD,IAAI,CAACtM,OAAL,CAAa,GAAb,CAAf;MACAwyD,SAAS,GAAGlmD,IAAI,CAACoI,SAAL,CAAe,CAAf,EAAkBm+C,MAAlB,EAA0B38C,WAA1B,EAAZ;MACA6L,MAAM,GAAGzV,IAAI,CAACoI,SAAL,CAAem+C,MAAM,GAAG,CAAxB,CAAT,CAJC,CAKD;;MACA7lD,SAAS,GAAGwlD,SAAZ;IACH,CA7C4B,CA8C7B;;;IACA,IAAI,QAAQ1mB,WAAZ,EAAyB;MACrB9+B,SAAS,GAAG8+B,WAAW,CAAC,IAAD,CAAvB;IACH;EACJ;;EACD,OAAO;IACHx/B,IADG;IAEHC,IAFG;IAGHwV,MAHG;IAIHywC,SAJG;IAKHz4C,MALG;IAMHw4C,MANG;IAOHrnD,UAPG;IAQH8B;EARG,CAAP;AAUH,CAnED;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM8lD,UAAU,GAAG,kEAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAI,YAAY;EAC5B;EACA;EACA,IAAIC,YAAY,GAAG,CAAnB,CAH4B,CAI5B;EACA;EACA;EACA;;EACA,MAAMC,aAAa,GAAG,EAAtB;EACA,OAAO,UAAUC,GAAV,EAAe;IAClB,MAAMC,aAAa,GAAGD,GAAG,KAAKF,YAA9B;IACAA,YAAY,GAAGE,GAAf;IACA,IAAI/0D,CAAJ;IACA,MAAMi1D,cAAc,GAAG,IAAIjrD,KAAJ,CAAU,CAAV,CAAvB;;IACA,KAAKhK,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;MACrBi1D,cAAc,CAACj1D,CAAD,CAAd,GAAoB20D,UAAU,CAACb,MAAX,CAAkBiB,GAAG,GAAG,EAAxB,CAApB,CADqB,CAErB;MACA;;MACAA,GAAG,GAAG7/C,IAAI,CAACC,KAAL,CAAW4/C,GAAG,GAAG,EAAjB,CAAN;IACH;;IACDzkD,sDAAM,CAACykD,GAAG,KAAK,CAAT,EAAY,0BAAZ,CAAN;IACA,IAAIjiD,EAAE,GAAGmiD,cAAc,CAACv9C,IAAf,CAAoB,EAApB,CAAT;;IACA,IAAI,CAACs9C,aAAL,EAAoB;MAChB,KAAKh1D,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;QACrB80D,aAAa,CAAC90D,CAAD,CAAb,GAAmBkV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACoM,MAAL,KAAgB,EAA3B,CAAnB;MACH;IACJ,CAJD,MAKK;MACD;MACA;MACA,KAAKthB,CAAC,GAAG,EAAT,EAAaA,CAAC,IAAI,CAAL,IAAU80D,aAAa,CAAC90D,CAAD,CAAb,KAAqB,EAA5C,EAAgDA,CAAC,EAAjD,EAAqD;QACjD80D,aAAa,CAAC90D,CAAD,CAAb,GAAmB,CAAnB;MACH;;MACD80D,aAAa,CAAC90D,CAAD,CAAb;IACH;;IACD,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;MACrB8S,EAAE,IAAI6hD,UAAU,CAACb,MAAX,CAAkBgB,aAAa,CAAC90D,CAAD,CAA/B,CAAN;IACH;;IACDsQ,sDAAM,CAACwC,EAAE,CAAC/S,MAAH,KAAc,EAAf,EAAmB,kCAAnB,CAAN;IACA,OAAO+S,EAAP;EACH,CA/BD;AAgCH,CAzCkB,EAAnB;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMoiD,SAAN,CAAgB;EACZ;AACJ;AACA;AACA;AACA;AACA;EACI1xD,WAAW,CAAC+F,SAAD,EAAY+2C,iBAAZ,EAA+B/hD,QAA/B,EAAyC21C,QAAzC,EAAmD;IAC1D,KAAK3qC,SAAL,GAAiBA,SAAjB;IACA,KAAK+2C,iBAAL,GAAyBA,iBAAzB;IACA,KAAK/hD,QAAL,GAAgBA,QAAhB;IACA,KAAK21C,QAAL,GAAgBA,QAAhB;EACH;;EACDiY,OAAO,GAAG;IACN,MAAM1uD,GAAG,GAAG,KAAKc,QAAL,CAAcd,GAA1B;;IACA,IAAI,KAAK8L,SAAL,KAAmB,OAAvB,EAAgC;MAC5B,OAAO9L,GAAG,CAACoP,KAAX;IACH,CAFD,MAGK;MACD,OAAOpP,GAAG,CAACwP,MAAJ,CAAWJ,KAAlB;IACH;EACJ;;EACDsoD,YAAY,GAAG;IACX,OAAO,KAAK5rD,SAAZ;EACH;;EACDsjD,cAAc,GAAG;IACb,OAAO,KAAKvM,iBAAL,CAAuBuM,cAAvB,CAAsC,IAAtC,CAAP;EACH;;EACDrgD,QAAQ,GAAG;IACP,OAAQ,KAAK2/C,OAAL,GAAe3/C,QAAf,KACJ,GADI,GAEJ,KAAKjD,SAFD,GAGJ,GAHI,GAIJ4G,yDAAS,CAAC,KAAK5R,QAAL,CAAcvB,SAAd,EAAD,CAJb;EAKH;;AAlCW;;AAoChB,MAAMo4D,WAAN,CAAkB;EACd5xD,WAAW,CAAC88C,iBAAD,EAAoBzhD,KAApB,EAA2B2L,IAA3B,EAAiC;IACxC,KAAK81C,iBAAL,GAAyBA,iBAAzB;IACA,KAAKzhD,KAAL,GAAaA,KAAb;IACA,KAAK2L,IAAL,GAAYA,IAAZ;EACH;;EACD2hD,OAAO,GAAG;IACN,OAAO,KAAK3hD,IAAZ;EACH;;EACD2qD,YAAY,GAAG;IACX,OAAO,QAAP;EACH;;EACDtI,cAAc,GAAG;IACb,OAAO,KAAKvM,iBAAL,CAAuBuM,cAAvB,CAAsC,IAAtC,CAAP;EACH;;EACDrgD,QAAQ,GAAG;IACP,OAAO,KAAKhC,IAAL,CAAUgC,QAAV,KAAuB,SAA9B;EACH;;AAjBa;AAoBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM6oD,eAAN,CAAsB;EAClB7xD,WAAW,CAAC8xD,gBAAD,EAAmBxpD,cAAnB,EAAmC;IAC1C,KAAKwpD,gBAAL,GAAwBA,gBAAxB;IACA,KAAKxpD,cAAL,GAAsBA,cAAtB;EACH;;EACDzF,OAAO,CAACuE,eAAD,EAAkBe,iBAAlB,EAAqC;IACxC,KAAK2pD,gBAAL,CAAsB1pD,IAAtB,CAA2B,IAA3B,EAAiChB,eAAjC,EAAkDe,iBAAlD;EACH;;EACD4pD,QAAQ,CAAC12D,KAAD,EAAQ;IACZyR,sDAAM,CAAC,KAAKklD,iBAAN,EAAyB,8DAAzB,CAAN;IACA,OAAO,KAAK1pD,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,EAA+B/M,KAA/B,CAAP;EACH;;EACoB,IAAjB22D,iBAAiB,GAAG;IACpB,OAAO,CAAC,CAAC,KAAK1pD,cAAd;EACH;;EACDw+B,OAAO,CAAC59B,KAAD,EAAQ;IACX,OAAQ,KAAK4oD,gBAAL,KAA0B5oD,KAAK,CAAC4oD,gBAAhC,IACH,KAAKA,gBAAL,CAAsBzpD,YAAtB,KAAuC1O,SAAvC,IACG,KAAKm4D,gBAAL,CAAsBzpD,YAAtB,KACIa,KAAK,CAAC4oD,gBAAN,CAAuBzpD,YAF9B,IAGG,KAAKypD,gBAAL,CAAsBjqD,OAAtB,KAAkCqB,KAAK,CAAC4oD,gBAAN,CAAuBjqD,OAJjE;EAKH;;AArBiB;AAwBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM5D,YAAN,CAAmB;EACf;EACAjE,WAAW,CAACoJ,KAAD,EAAQC,KAAR,EAAe;IACtB,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIpD,MAAM,GAAG;IACL,MAAMyC,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;IACAunD,sBAAsB,CAAC,KAAKrjD,KAAN,EAAa,KAAKC,KAAlB,EAAyBX,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CAAzB,CAAtB;IACA,OAAOvpD,QAAQ,CAACI,OAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIpK,MAAM,GAAG;IACLupD,oBAAoB,CAAC,qBAAD,EAAwB,KAAK5+C,KAA7B,CAApB;IACA,MAAMX,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;IACAwnD,mBAAmB,CAAC,KAAKtjD,KAAN,EAAa,KAAKC,KAAlB,EAAyB,IAAzB,EAA+BX,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CAA/B,CAAnB;IACA,OAAOvpD,QAAQ,CAACI,OAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIjP,GAAG,CAACP,KAAD,EAAQ;IACP2uD,oBAAoB,CAAC,kBAAD,EAAqB,KAAK5+C,KAA1B,CAApB;IACA89C,uBAAuB,CAAC,kBAAD,EAAqB7tD,KAArB,EAA4B,KAAK+P,KAAjC,EAAwC,KAAxC,CAAvB;IACA,MAAMX,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;IACAwnD,mBAAmB,CAAC,KAAKtjD,KAAN,EAAa,KAAKC,KAAlB,EAAyB/P,KAAzB,EAAgCoP,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CAAhC,CAAnB;IACA,OAAOvpD,QAAQ,CAACI,OAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIhF,eAAe,CAACxK,KAAD,EAAQgN,QAAR,EAAkB;IAC7B2hD,oBAAoB,CAAC,8BAAD,EAAiC,KAAK5+C,KAAtC,CAApB;IACA89C,uBAAuB,CAAC,8BAAD,EAAiC7tD,KAAjC,EAAwC,KAAK+P,KAA7C,EAAoD,KAApD,CAAvB;IACAw+C,gBAAgB,CAAC,8BAAD,EAAiCvhD,QAAjC,EAA2C,KAA3C,CAAhB;IACA,MAAMoC,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;IACAynD,+BAA+B,CAAC,KAAKvjD,KAAN,EAAa,KAAKC,KAAlB,EAAyB/P,KAAzB,EAAgCgN,QAAhC,EAA0CoC,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CAA1C,CAA/B;IACA,OAAOvpD,QAAQ,CAACI,OAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI3J,MAAM,CAAC0K,MAAD,EAAS;IACXo+C,oBAAoB,CAAC,qBAAD,EAAwB,KAAK5+C,KAA7B,CAApB;IACAs+C,4BAA4B,CAAC,qBAAD,EAAwB99C,MAAxB,EAAgC,KAAKR,KAArC,EAA4C,KAA5C,CAA5B;IACA,MAAMX,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;IACA0nD,sBAAsB,CAAC,KAAKxjD,KAAN,EAAa,KAAKC,KAAlB,EAAyBQ,MAAzB,EAAiCnB,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CAAjC,CAAtB;IACA,OAAOvpD,QAAQ,CAACI,OAAhB;EACH;;AAnGc;AAsGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMopD,SAAN,CAAgB;EACZ;AACJ;AACA;EACIlyD,WAAW,CAACoJ,KAAD,EAAQC,KAAR,EAAe+pB,YAAf,EAA6B++B,cAA7B,EAA6C;IACpD,KAAK/oD,KAAL,GAAaA,KAAb;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAK+pB,YAAL,GAAoBA,YAApB;IACA,KAAK++B,cAAL,GAAsBA,cAAtB;EACH;;EACM,IAAHz2D,GAAG,GAAG;IACN,IAAIkyB,WAAW,CAAC,KAAKvkB,KAAN,CAAf,EAA6B;MACzB,OAAO,IAAP;IACH,CAFD,MAGK;MACD,OAAO6jB,WAAW,CAAC,KAAK7jB,KAAN,CAAlB;IACH;EACJ;;EACM,IAAHpP,GAAG,GAAG;IACN,OAAO,IAAIm4D,aAAJ,CAAkB,KAAKhpD,KAAvB,EAA8B,KAAKC,KAAnC,CAAP;EACH;;EACmB,IAAhB6pB,gBAAgB,GAAG;IACnB,MAAMx5B,GAAG,GAAGwxC,yBAAyB,CAAC,KAAK9X,YAAN,CAArC;IACA,MAAM9jB,EAAE,GAAGiD,iBAAiB,CAAC7Y,GAAD,CAA5B;IACA,OAAO4V,EAAE,KAAK,IAAP,GAAc,SAAd,GAA0BA,EAAjC;EACH;EACD;AACJ;AACA;;;EACoB,IAAZojB,YAAY,GAAG;IACf,OAAOwY,yBAAyB,CAAC,KAAK9X,YAAN,CAAhC;EACH;;EACDnqB,OAAO,CAACC,KAAD,EAAQ;IACXA,KAAK,GAAG4E,kEAAkB,CAAC5E,KAAD,CAA1B;;IACA,IAAI,EAAEA,KAAK,YAAYgpD,SAAnB,CAAJ,EAAmC;MAC/B,OAAO,KAAP;IACH;;IACD,MAAMG,QAAQ,GAAG,KAAKjpD,KAAL,KAAeF,KAAK,CAACE,KAAtC;IACA,MAAMkpD,QAAQ,GAAG9jC,UAAU,CAAC,KAAKnlB,KAAN,EAAaH,KAAK,CAACG,KAAnB,CAA3B;IACA,MAAMkpD,mBAAmB,GAAG,KAAKr/B,gBAAL,KAA0BhqB,KAAK,CAACgqB,gBAA5D;IACA,OAAOm/B,QAAQ,IAAIC,QAAZ,IAAwBC,mBAA/B;EACH;;EACD1rD,MAAM,GAAG;IACL,OAAO,KAAKmC,QAAL,EAAP;EACH;;EACDA,QAAQ,GAAG;IACP,OAAO,KAAKI,KAAL,CAAWJ,QAAX,KAAwBmkB,sBAAsB,CAAC,KAAK9jB,KAAN,CAArD;EACH;;AA/CW;AAiDhB;AACA;AACA;;;AACA,SAASmpD,6BAAT,CAAuCl1D,KAAvC,EAA8CoI,MAA9C,EAAsD;EAClD,IAAIpI,KAAK,CAAC60D,cAAN,KAAyB,IAA7B,EAAmC;IAC/B,MAAM,IAAI33D,KAAJ,CAAUkL,MAAM,GAAG,6CAAnB,CAAN;EACH;AACJ;AACD;AACA;AACA;;;AACA,SAAS+sD,sBAAT,CAAgCt5C,MAAhC,EAAwC;EACpC,IAAIu5C,SAAS,GAAG,IAAhB;EACA,IAAIC,OAAO,GAAG,IAAd;;EACA,IAAIx5C,MAAM,CAACguB,QAAP,EAAJ,EAAuB;IACnBurB,SAAS,GAAGv5C,MAAM,CAACmuB,kBAAP,EAAZ;EACH;;EACD,IAAInuB,MAAM,CAACouB,MAAP,EAAJ,EAAqB;IACjBorB,OAAO,GAAGx5C,MAAM,CAACuuB,gBAAP,EAAV;EACH;;EACD,IAAIvuB,MAAM,CAAC8a,QAAP,OAAsB6E,SAA1B,EAAqC;IACjC,MAAM85B,gBAAgB,GAAG,oEACrB,mCADJ;IAEA,MAAMC,iBAAiB,GAAG,kFACtB,sDADJ;;IAEA,IAAI15C,MAAM,CAACguB,QAAP,EAAJ,EAAuB;MACnB,MAAMC,SAAS,GAAGjuB,MAAM,CAACkuB,iBAAP,EAAlB;;MACA,IAAID,SAAS,KAAKt1B,QAAlB,EAA4B;QACxB,MAAM,IAAItX,KAAJ,CAAUo4D,gBAAV,CAAN;MACH,CAFD,MAGK,IAAI,OAAOF,SAAP,KAAqB,QAAzB,EAAmC;QACpC,MAAM,IAAIl4D,KAAJ,CAAUq4D,iBAAV,CAAN;MACH;IACJ;;IACD,IAAI15C,MAAM,CAACouB,MAAP,EAAJ,EAAqB;MACjB,MAAMC,OAAO,GAAGruB,MAAM,CAACsuB,eAAP,EAAhB;;MACA,IAAID,OAAO,KAAKz1B,QAAhB,EAA0B;QACtB,MAAM,IAAIvX,KAAJ,CAAUo4D,gBAAV,CAAN;MACH,CAFD,MAGK,IAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;QAClC,MAAM,IAAIn4D,KAAJ,CAAUq4D,iBAAV,CAAN;MACH;IACJ;EACJ,CAvBD,MAwBK,IAAI15C,MAAM,CAAC8a,QAAP,OAAsB6K,cAA1B,EAA0C;IAC3C,IAAK4zB,SAAS,IAAI,IAAb,IAAqB,CAACxL,eAAe,CAACwL,SAAD,CAAtC,IACCC,OAAO,IAAI,IAAX,IAAmB,CAACzL,eAAe,CAACyL,OAAD,CADxC,EACoD;MAChD,MAAM,IAAIn4D,KAAJ,CAAU,+EACZ,iFADY,GAEZ,gCAFE,CAAN;IAGH;EACJ,CAPI,MAQA;IACDsS,sDAAM,CAACqM,MAAM,CAAC8a,QAAP,cAA6BsQ,SAA7B,IACHprB,MAAM,CAAC8a,QAAP,OAAsB6Q,WADpB,EACiC,qBADjC,CAAN;;IAEA,IAAK4tB,SAAS,IAAI,IAAb,IAAqB,OAAOA,SAAP,KAAqB,QAA3C,IACCC,OAAO,IAAI,IAAX,IAAmB,OAAOA,OAAP,KAAmB,QAD3C,EACsD;MAClD,MAAM,IAAIn4D,KAAJ,CAAU,uFACZ,gCADE,CAAN;IAEH;EACJ;AACJ;AACD;AACA;AACA;;;AACA,SAASs4D,aAAT,CAAuB35C,MAAvB,EAA+B;EAC3B,IAAIA,MAAM,CAACguB,QAAP,MACAhuB,MAAM,CAACouB,MAAP,EADA,IAEApuB,MAAM,CAAC6wB,QAAP,EAFA,IAGA,CAAC7wB,MAAM,CAAC8wB,gBAAP,EAHL,EAGgC;IAC5B,MAAM,IAAIzvC,KAAJ,CAAU,0FACZ,0CADE,CAAN;EAEH;AACJ;AACD;AACA;AACA;;;AACA,MAAM43D,aAAN,SAA4BF,SAA5B,CAAsC;EAClC;EACAlyD,WAAW,CAACkqD,IAAD,EAAOljD,IAAP,EAAa;IACpB,MAAMkjD,IAAN,EAAYljD,IAAZ,EAAkB,IAAIqiC,WAAJ,EAAlB,EAAqC,KAArC;EACH;;EACS,IAAN5/B,MAAM,GAAG;IACT,MAAMspD,UAAU,GAAGxlC,UAAU,CAAC,KAAKlkB,KAAN,CAA7B;IACA,OAAO0pD,UAAU,KAAK,IAAf,GACD,IADC,GAED,IAAIX,aAAJ,CAAkB,KAAKhpD,KAAvB,EAA8B2pD,UAA9B,CAFN;EAGH;;EACO,IAAJppD,IAAI,GAAG;IACP,IAAI1P,GAAG,GAAG,IAAV;;IACA,OAAOA,GAAG,CAACwP,MAAJ,KAAe,IAAtB,EAA4B;MACxBxP,GAAG,GAAGA,GAAG,CAACwP,MAAV;IACH;;IACD,OAAOxP,GAAP;EACH;;AAjBiC;AAmBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM6M,YAAN,CAAmB;EACf;AACJ;AACA;AACA;AACA;AACA;EACI9G,WAAW,CAACgzD,KAAD;EACX;AACJ;AACA;EACI/4D,GAJW,EAINg5D,MAJM,EAIE;IACT,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAK/4D,GAAL,GAAWA,GAAX;IACA,KAAKg5D,MAAL,GAAcA,MAAd;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACgB,IAAR3sD,QAAQ,GAAG;IACX;IACA,OAAO,KAAK0sD,KAAL,CAAW7rD,WAAX,GAAyBxH,GAAzB,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACW,IAAHjE,GAAG,GAAG;IACN,OAAO,KAAKzB,GAAL,CAASyB,GAAhB;EACH;EACD;;;EACQ,IAAJ6L,IAAI,GAAG;IACP,OAAO,KAAKyrD,KAAL,CAAW1rD,WAAX,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIzJ,KAAK,CAACmJ,IAAD,EAAO;IACR,MAAM0qC,SAAS,GAAG,IAAInlB,IAAJ,CAASvlB,IAAT,CAAlB;IACA,MAAM6D,QAAQ,GAAGhN,KAAK,CAAC,KAAK5D,GAAN,EAAW+M,IAAX,CAAtB;IACA,OAAO,IAAIF,YAAJ,CAAiB,KAAKksD,KAAL,CAAWh2B,QAAX,CAAoB0U,SAApB,CAAjB,EAAiD7mC,QAAjD,EAA2Di0B,cAA3D,CAAP;EACH;EACD;AACJ;AACA;AACA;;;EACInjC,MAAM,GAAG;IACL,OAAO,CAAC,KAAKq3D,KAAL,CAAWtlD,OAAX,EAAR;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;;;EACAlU,SAAS,GAAG;IACR,OAAO,KAAKw5D,KAAL,CAAWrzD,GAAX,CAAe,IAAf,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI1D,OAAO,CAACU,MAAD,EAAS;IACZ,IAAI,KAAKq2D,KAAL,CAAW12B,UAAX,EAAJ,EAA6B;MACzB,OAAO,KAAP;IACH;;IACD,MAAMmpB,YAAY,GAAG,KAAKuN,KAA1B,CAJY,CAKZ;;IACA,OAAO,CAAC,CAACvN,YAAY,CAACloB,YAAb,CAA0B,KAAK01B,MAA/B,EAAuC,CAACv3D,GAAD,EAAMk8B,IAAN,KAAe;MAC3D,OAAOj7B,MAAM,CAAC,IAAImK,YAAJ,CAAiB8wB,IAAjB,EAAuB/5B,KAAK,CAAC,KAAK5D,GAAN,EAAWyB,GAAX,CAA5B,EAA6CojC,cAA7C,CAAD,CAAb;IACH,CAFQ,CAAT;EAGH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI53B,QAAQ,CAACF,IAAD,EAAO;IACX,MAAM0qC,SAAS,GAAG,IAAInlB,IAAJ,CAASvlB,IAAT,CAAlB;IACA,OAAO,CAAC,KAAKgsD,KAAL,CAAWh2B,QAAX,CAAoB0U,SAApB,EAA+BhkC,OAA/B,EAAR;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIrG,WAAW,GAAG;IACV,IAAI,KAAK2rD,KAAL,CAAW12B,UAAX,EAAJ,EAA6B;MACzB,OAAO,KAAP;IACH,CAFD,MAGK;MACD,OAAO,CAAC,KAAK02B,KAAL,CAAWtlD,OAAX,EAAR;IACH;EACJ;EACD;AACJ;AACA;;;EACI7G,MAAM,GAAG;IACL,OAAO,KAAKrN,SAAL,EAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;;;EACAmG,GAAG,GAAG;IACF,OAAO,KAAKqzD,KAAL,CAAWrzD,GAAX,EAAP;EACH;;AAhKc;AAkKnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS1F,GAAT,CAAai5D,EAAb,EAAiBlsD,IAAjB,EAAuB;EACnBksD,EAAE,GAAGplD,kEAAkB,CAAColD,EAAD,CAAvB;;EACAA,EAAE,CAACC,gBAAH,CAAoB,KAApB;;EACA,OAAOnsD,IAAI,KAAKrN,SAAT,GAAqBkE,KAAK,CAACq1D,EAAE,CAACE,KAAJ,EAAWpsD,IAAX,CAA1B,GAA6CksD,EAAE,CAACE,KAAvD;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS9uD,UAAT,CAAoB4uD,EAApB,EAAwBpoD,GAAxB,EAA6B;EACzBooD,EAAE,GAAGplD,kEAAkB,CAAColD,EAAD,CAAvB;;EACAA,EAAE,CAACC,gBAAH,CAAoB,YAApB;;EACA,MAAME,SAAS,GAAG5C,aAAa,CAAC3lD,GAAD,EAAMooD,EAAE,CAAC9pD,KAAH,CAAS6d,SAAT,CAAmB3b,SAAzB,CAA/B;EACA48C,WAAW,CAAC,YAAD,EAAemL,SAAf,CAAX;EACA,MAAMp6C,QAAQ,GAAGo6C,SAAS,CAACp6C,QAA3B;;EACA,IAAI,CAACi6C,EAAE,CAAC9pD,KAAH,CAAS6d,SAAT,CAAmBpO,YAAnB,EAAD,IACAI,QAAQ,CAACtO,IAAT,KAAkBuoD,EAAE,CAAC9pD,KAAH,CAAS6d,SAAT,CAAmBtc,IADzC,EAC+C;IAC3CgG,KAAK,CAAC,eACF,mDADE,GAEF,SAFE,GAGFsI,QAAQ,CAACtO,IAHP,GAIF,gBAJE,GAKFuoD,EAAE,CAAC9pD,KAAH,CAAS6d,SAAT,CAAmBtc,IALjB,GAMF,GANC,CAAL;EAOH;;EACD,OAAO1Q,GAAG,CAACi5D,EAAD,EAAKG,SAAS,CAACrsD,IAAV,CAAegC,QAAf,EAAL,CAAV;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASnL,KAAT,CAAe4L,MAAf,EAAuBzC,IAAvB,EAA6B;EACzByC,MAAM,GAAGqE,kEAAkB,CAACrE,MAAD,CAA3B;;EACA,IAAIsjB,YAAY,CAACtjB,MAAM,CAACJ,KAAR,CAAZ,KAA+B,IAAnC,EAAyC;IACrC2+C,sBAAsB,CAAC,OAAD,EAAU,MAAV,EAAkBhhD,IAAlB,EAAwB,KAAxB,CAAtB;EACH,CAFD,MAGK;IACD+gD,kBAAkB,CAAC,OAAD,EAAU,MAAV,EAAkB/gD,IAAlB,EAAwB,KAAxB,CAAlB;EACH;;EACD,OAAO,IAAIorD,aAAJ,CAAkB3oD,MAAM,CAACL,KAAzB,EAAgCqkB,SAAS,CAAChkB,MAAM,CAACJ,KAAR,EAAerC,IAAf,CAAzC,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsD,YAAT,CAAsBrQ,GAAtB,EAA2B;EACvBA,GAAG,GAAG6T,kEAAkB,CAAC7T,GAAD,CAAxB;EACA,OAAO,IAAIgK,YAAJ,CAAiBhK,GAAG,CAACmP,KAArB,EAA4BnP,GAAG,CAACoP,KAAhC,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASnN,IAAT,CAAcuN,MAAd,EAAsBnQ,KAAtB,EAA6B;EACzBmQ,MAAM,GAAGqE,kEAAkB,CAACrE,MAAD,CAA3B;EACAw+C,oBAAoB,CAAC,MAAD,EAASx+C,MAAM,CAACJ,KAAhB,CAApB;EACA89C,uBAAuB,CAAC,MAAD,EAAS7tD,KAAT,EAAgBmQ,MAAM,CAACJ,KAAvB,EAA8B,IAA9B,CAAvB;EACA,MAAMkoD,GAAG,GAAGvG,cAAc,CAACvhD,MAAM,CAACL,KAAR,CAA1B;EACA,MAAMnJ,IAAI,GAAGmxD,UAAU,CAACG,GAAD,CAAvB,CALyB,CAMzB;EACA;EACA;EACA;EACA;EACA;;EACA,MAAM+B,gBAAgB,GAAGz1D,KAAK,CAAC4L,MAAD,EAASxJ,IAAT,CAA9B;EACA,MAAMszD,OAAO,GAAG11D,KAAK,CAAC4L,MAAD,EAASxJ,IAAT,CAArB;EACA,IAAI6I,OAAJ;;EACA,IAAIxP,KAAK,IAAI,IAAb,EAAmB;IACfwP,OAAO,GAAGjP,GAAG,CAAC05D,OAAD,EAAUj6D,KAAV,CAAH,CAAoB+M,IAApB,CAAyB,MAAMktD,OAA/B,CAAV;EACH,CAFD,MAGK;IACDzqD,OAAO,GAAGyN,OAAO,CAAC5N,OAAR,CAAgB4qD,OAAhB,CAAV;EACH;;EACDD,gBAAgB,CAACjtD,IAAjB,GAAwByC,OAAO,CAACzC,IAAR,CAAakC,IAAb,CAAkBO,OAAlB,CAAxB;EACAwqD,gBAAgB,CAACjpD,KAAjB,GAAyBvB,OAAO,CAACzC,IAAR,CAAakC,IAAb,CAAkBO,OAAlB,EAA2BnP,SAA3B,CAAzB;EACA,OAAO25D,gBAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS50D,MAAT,CAAgBzE,GAAhB,EAAqB;EACjBguD,oBAAoB,CAAC,QAAD,EAAWhuD,GAAG,CAACoP,KAAf,CAApB;EACA,OAAOxP,GAAG,CAACI,GAAD,EAAM,IAAN,CAAV;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASJ,GAAT,CAAaI,GAAb,EAAkBX,KAAlB,EAAyB;EACrBW,GAAG,GAAG6T,kEAAkB,CAAC7T,GAAD,CAAxB;EACAguD,oBAAoB,CAAC,KAAD,EAAQhuD,GAAG,CAACoP,KAAZ,CAApB;EACA89C,uBAAuB,CAAC,KAAD,EAAQ7tD,KAAR,EAAeW,GAAG,CAACoP,KAAnB,EAA0B,KAA1B,CAAvB;EACA,MAAMX,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;EACA2mD,mBAAmB,CAAC5xD,GAAG,CAACmP,KAAL,EAAYnP,GAAG,CAACoP,KAAhB,EAAuB/P,KAAvB;EACnB;EAAc,IADK,EACCoP,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CADD,CAAnB;EAEA,OAAOvpD,QAAQ,CAACI,OAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS9E,WAAT,CAAqB/J,GAArB,EAA0BqM,QAA1B,EAAoC;EAChCrM,GAAG,GAAG6T,kEAAkB,CAAC7T,GAAD,CAAxB;EACAguD,oBAAoB,CAAC,aAAD,EAAgBhuD,GAAG,CAACoP,KAApB,CAApB;EACAw+C,gBAAgB,CAAC,aAAD,EAAgBvhD,QAAhB,EAA0B,KAA1B,CAAhB;EACA,MAAMoC,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;EACA2mD,mBAAmB,CAAC5xD,GAAG,CAACmP,KAAL,EAAYqkB,SAAS,CAACxzB,GAAG,CAACoP,KAAL,EAAY,WAAZ,CAArB,EAA+C/C,QAA/C,EAAyD,IAAzD,EAA+DoC,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CAA/D,CAAnB;EACA,OAAOvpD,QAAQ,CAACI,OAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAShF,eAAT,CAAyB7J,GAAzB,EAA8BX,KAA9B,EAAqCgN,QAArC,EAA+C;EAC3C2hD,oBAAoB,CAAC,iBAAD,EAAoBhuD,GAAG,CAACoP,KAAxB,CAApB;EACA89C,uBAAuB,CAAC,iBAAD,EAAoB7tD,KAApB,EAA2BW,GAAG,CAACoP,KAA/B,EAAsC,KAAtC,CAAvB;EACAw+C,gBAAgB,CAAC,iBAAD,EAAoBvhD,QAApB,EAA8B,KAA9B,CAAhB;;EACA,IAAIrM,GAAG,CAACyB,GAAJ,KAAY,SAAZ,IAAyBzB,GAAG,CAACyB,GAAJ,KAAY,OAAzC,EAAkD;IAC9C,MAAM,6BAA6BzB,GAAG,CAACyB,GAAjC,GAAuC,yBAA7C;EACH;;EACD,MAAMgN,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;EACA2mD,mBAAmB,CAAC5xD,GAAG,CAACmP,KAAL,EAAYnP,GAAG,CAACoP,KAAhB,EAAuB/P,KAAvB,EAA8BgN,QAA9B,EAAwCoC,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CAAxC,CAAnB;EACA,OAAOvpD,QAAQ,CAACI,OAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS3J,MAAT,CAAgBlF,GAAhB,EAAqB4P,MAArB,EAA6B;EACzB89C,4BAA4B,CAAC,QAAD,EAAW99C,MAAX,EAAmB5P,GAAG,CAACoP,KAAvB,EAA8B,KAA9B,CAA5B;EACA,MAAMX,QAAQ,GAAG,IAAIxD,oDAAJ,EAAjB;EACAinD,UAAU,CAAClyD,GAAG,CAACmP,KAAL,EAAYnP,GAAG,CAACoP,KAAhB,EAAuBQ,MAAvB,EAA+BnB,QAAQ,CAACupD,YAAT,CAAsB,MAAM,CAAG,CAA/B,CAA/B,CAAV;EACA,OAAOvpD,QAAQ,CAACI,OAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAShG,GAAT,CAAaxF,KAAb,EAAoB;EAChBA,KAAK,GAAGwQ,kEAAkB,CAACxQ,KAAD,CAA1B;EACA,MAAMk2D,eAAe,GAAG,IAAI3B,eAAJ,CAAoB,MAAM,CAAG,CAA7B,CAAxB;EACA,MAAM/lD,SAAS,GAAG,IAAI2nD,sBAAJ,CAA2BD,eAA3B,CAAlB;EACA,OAAO9H,YAAY,CAACpuD,KAAK,CAAC8L,KAAP,EAAc9L,KAAd,EAAqBwO,SAArB,CAAZ,CAA4CzF,IAA5C,CAAiDuxB,IAAI,IAAI;IAC5D,OAAO,IAAI9wB,YAAJ,CAAiB8wB,IAAjB,EAAuB,IAAIw6B,aAAJ,CAAkB90D,KAAK,CAAC8L,KAAxB,EAA+B9L,KAAK,CAAC+L,KAArC,CAAvB,EAAoE/L,KAAK,CAAC81B,YAAN,CAAmBa,QAAnB,EAApE,CAAP;EACH,CAFM,CAAP;AAGH;AACD;AACA;AACA;;;AACA,MAAMw/B,sBAAN,CAA6B;EACzBzzD,WAAW,CAACwzD,eAAD,EAAkB;IACzB,KAAKA,eAAL,GAAuBA,eAAvB;EACH;;EACDhjB,UAAU,CAACzqC,SAAD,EAAY;IAClB,OAAOA,SAAS,KAAK,OAArB;EACH;;EACD0qC,WAAW,CAACT,MAAD,EAAS1yC,KAAT,EAAgB;IACvB,MAAMs1B,KAAK,GAAGt1B,KAAK,CAAC81B,YAAN,CAAmBa,QAAnB,EAAd;;IACA,OAAO,IAAIy9B,SAAJ,CAAc,OAAd,EAAuB,IAAvB,EAA6B,IAAI5qD,YAAJ,CAAiBkpC,MAAM,CAAChL,YAAxB,EAAsC,IAAIotB,aAAJ,CAAkB90D,KAAK,CAAC8L,KAAxB,EAA+B9L,KAAK,CAAC+L,KAArC,CAAtC,EAAmFupB,KAAnF,CAA7B,CAAP;EACH;;EACDy2B,cAAc,CAACx9B,SAAD,EAAY;IACtB,IAAIA,SAAS,CAAC8lC,YAAV,OAA6B,QAAjC,EAA2C;MACvC,OAAO,MAAM,KAAK6B,eAAL,CAAqBzB,QAArB,CAA8BlmC,SAAS,CAACxwB,KAAxC,CAAb;IACH,CAFD,MAGK;MACD,OAAO,MAAM,KAAKm4D,eAAL,CAAqB3wD,OAArB,CAA6BgpB,SAAS,CAAC9wB,QAAvC,EAAiD,IAAjD,CAAb;IACH;EACJ;;EACDoiD,iBAAiB,CAAC9hD,KAAD,EAAQ2L,IAAR,EAAc;IAC3B,IAAI,KAAKwsD,eAAL,CAAqBxB,iBAAzB,EAA4C;MACxC,OAAO,IAAIJ,WAAJ,CAAgB,IAAhB,EAAsBv2D,KAAtB,EAA6B2L,IAA7B,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ;;EACD8/B,OAAO,CAAC59B,KAAD,EAAQ;IACX,IAAI,EAAEA,KAAK,YAAYuqD,sBAAnB,CAAJ,EAAgD;MAC5C,OAAO,KAAP;IACH,CAFD,MAGK,IAAI,CAACvqD,KAAK,CAACsqD,eAAP,IAA0B,CAAC,KAAKA,eAApC,EAAqD;MACtD;MACA,OAAO,IAAP;IACH,CAHI,MAIA;MACD,OAAOtqD,KAAK,CAACsqD,eAAN,CAAsB1sB,OAAtB,CAA8B,KAAK0sB,eAAnC,CAAP;IACH;EACJ;;EACDlW,cAAc,GAAG;IACb,OAAO,KAAKkW,eAAL,KAAyB,IAAhC;EACH;;AAzCwB;AA2C7B;AACA;AACA;;;AACA,MAAME,sBAAN,CAA6B;EACzB1zD,WAAW,CAAC+F,SAAD,EAAYytD,eAAZ,EAA6B;IACpC,KAAKztD,SAAL,GAAiBA,SAAjB;IACA,KAAKytD,eAAL,GAAuBA,eAAvB;EACH;;EACDhjB,UAAU,CAACzqC,SAAD,EAAY;IAClB,IAAI4tD,YAAY,GAAG5tD,SAAS,KAAK,gBAAd,GAAiC,aAAjC,GAAiDA,SAApE;IACA4tD,YAAY,GACRA,YAAY,KAAK,kBAAjB,GAAsC,eAAtC,GAAwDA,YAD5D;IAEA,OAAO,KAAK5tD,SAAL,KAAmB4tD,YAA1B;EACH;;EACDxW,iBAAiB,CAAC9hD,KAAD,EAAQ2L,IAAR,EAAc;IAC3B,IAAI,KAAKwsD,eAAL,CAAqBxB,iBAAzB,EAA4C;MACxC,OAAO,IAAIJ,WAAJ,CAAgB,IAAhB,EAAsBv2D,KAAtB,EAA6B2L,IAA7B,CAAP;IACH,CAFD,MAGK;MACD,OAAO,IAAP;IACH;EACJ;;EACDypC,WAAW,CAACT,MAAD,EAAS1yC,KAAT,EAAgB;IACvBwP,sDAAM,CAACkjC,MAAM,CAACjT,SAAP,IAAoB,IAArB,EAA2B,uCAA3B,CAAN;IACA,MAAMlyB,QAAQ,GAAGhN,KAAK,CAAC,IAAIu0D,aAAJ,CAAkB90D,KAAK,CAAC8L,KAAxB,EAA+B9L,KAAK,CAAC+L,KAArC,CAAD,EAA8C2mC,MAAM,CAACjT,SAArD,CAAtB;;IACA,MAAMnK,KAAK,GAAGt1B,KAAK,CAAC81B,YAAN,CAAmBa,QAAnB,EAAd;;IACA,OAAO,IAAIy9B,SAAJ,CAAc1hB,MAAM,CAACp0C,IAArB,EAA2B,IAA3B,EAAiC,IAAIkL,YAAJ,CAAiBkpC,MAAM,CAAChL,YAAxB,EAAsCn6B,QAAtC,EAAgD+nB,KAAhD,CAAjC,EAAyFod,MAAM,CAACU,QAAhG,CAAP;EACH;;EACD2Y,cAAc,CAACx9B,SAAD,EAAY;IACtB,IAAIA,SAAS,CAAC8lC,YAAV,OAA6B,QAAjC,EAA2C;MACvC,OAAO,MAAM,KAAK6B,eAAL,CAAqBzB,QAArB,CAA8BlmC,SAAS,CAACxwB,KAAxC,CAAb;IACH,CAFD,MAGK;MACD,OAAO,MAAM,KAAKm4D,eAAL,CAAqB3wD,OAArB,CAA6BgpB,SAAS,CAAC9wB,QAAvC,EAAiD8wB,SAAS,CAAC6kB,QAA3D,CAAb;IACH;EACJ;;EACD5J,OAAO,CAAC59B,KAAD,EAAQ;IACX,IAAIA,KAAK,YAAYwqD,sBAArB,EAA6C;MACzC,OAAQ,KAAK3tD,SAAL,KAAmBmD,KAAK,CAACnD,SAAzB,KACH,CAAC,KAAKytD,eAAN,IACG,CAACtqD,KAAK,CAACsqD,eADV,IAEG,KAAKA,eAAL,CAAqB1sB,OAArB,CAA6B59B,KAAK,CAACsqD,eAAnC,CAHA,CAAR;IAIH;;IACD,OAAO,KAAP;EACH;;EACDlW,cAAc,GAAG;IACb,OAAO,CAAC,CAAC,KAAKkW,eAAd;EACH;;AA5CwB;;AA8C7B,SAAS5hD,gBAAT,CAA0BtU,KAA1B,EAAiCyI,SAAjC,EAA4C4B,QAA5C,EAAsDisD,6BAAtD,EAAqFv0D,OAArF,EAA8F;EAC1F,IAAIiJ,cAAJ;;EACA,IAAI,OAAOsrD,6BAAP,KAAyC,QAA7C,EAAuD;IACnDtrD,cAAc,GAAG3O,SAAjB;IACA0F,OAAO,GAAGu0D,6BAAV;EACH;;EACD,IAAI,OAAOA,6BAAP,KAAyC,UAA7C,EAAyD;IACrDtrD,cAAc,GAAGsrD,6BAAjB;EACH;;EACD,IAAIv0D,OAAO,IAAIA,OAAO,CAACwJ,QAAvB,EAAiC;IAC7B,MAAMR,YAAY,GAAGV,QAArB;;IACA,MAAMksD,YAAY,GAAG,CAACC,YAAD,EAAe3rD,iBAAf,KAAqC;MACtD2kD,+BAA+B,CAACxvD,KAAK,CAAC8L,KAAP,EAAc9L,KAAd,EAAqBwO,SAArB,CAA/B;MACAzD,YAAY,CAACyrD,YAAD,EAAe3rD,iBAAf,CAAZ;IACH,CAHD;;IAIA0rD,YAAY,CAACxrD,YAAb,GAA4BV,QAAQ,CAACU,YAArC;IACAwrD,YAAY,CAAChsD,OAAb,GAAuBF,QAAQ,CAACE,OAAhC;IACAF,QAAQ,GAAGksD,YAAX;EACH;;EACD,MAAML,eAAe,GAAG,IAAI3B,eAAJ,CAAoBlqD,QAApB,EAA8BW,cAAc,IAAI3O,SAAhD,CAAxB;EACA,MAAMmS,SAAS,GAAG/F,SAAS,KAAK,OAAd,GACZ,IAAI0tD,sBAAJ,CAA2BD,eAA3B,CADY,GAEZ,IAAIE,sBAAJ,CAA2B3tD,SAA3B,EAAsCytD,eAAtC,CAFN;EAGA3G,4BAA4B,CAACvvD,KAAK,CAAC8L,KAAP,EAAc9L,KAAd,EAAqBwO,SAArB,CAA5B;EACA,OAAO,MAAMghD,+BAA+B,CAACxvD,KAAK,CAAC8L,KAAP,EAAc9L,KAAd,EAAqBwO,SAArB,CAA5C;AACH;;AACD,SAASjJ,OAAT,CAAiBvF,KAAjB,EAAwBqK,QAAxB,EAAkCisD,6BAAlC,EAAiEv0D,OAAjE,EAA0E;EACtE,OAAOuS,gBAAgB,CAACtU,KAAD,EAAQ,OAAR,EAAiBqK,QAAjB,EAA2BisD,6BAA3B,EAA0Dv0D,OAA1D,CAAvB;AACH;;AACD,SAASuD,YAAT,CAAsBtF,KAAtB,EAA6BqK,QAA7B,EAAuCisD,6BAAvC,EAAsEv0D,OAAtE,EAA+E;EAC3E,OAAOuS,gBAAgB,CAACtU,KAAD,EAAQ,aAAR,EAAuBqK,QAAvB,EAAiCisD,6BAAjC,EAAgEv0D,OAAhE,CAAvB;AACH;;AACD,SAASqD,cAAT,CAAwBpF,KAAxB,EAA+BqK,QAA/B,EAAyCisD,6BAAzC,EAAwEv0D,OAAxE,EAAiF;EAC7E,OAAOuS,gBAAgB,CAACtU,KAAD,EAAQ,eAAR,EAAyBqK,QAAzB,EAAmCisD,6BAAnC,EAAkEv0D,OAAlE,CAAvB;AACH;;AACD,SAASoD,YAAT,CAAsBnF,KAAtB,EAA6BqK,QAA7B,EAAuCisD,6BAAvC,EAAsEv0D,OAAtE,EAA+E;EAC3E,OAAOuS,gBAAgB,CAACtU,KAAD,EAAQ,aAAR,EAAuBqK,QAAvB,EAAiCisD,6BAAjC,EAAgEv0D,OAAhE,CAAvB;AACH;;AACD,SAASsD,cAAT,CAAwBrF,KAAxB,EAA+BqK,QAA/B,EAAyCisD,6BAAzC,EAAwEv0D,OAAxE,EAAiF;EAC7E,OAAOuS,gBAAgB,CAACtU,KAAD,EAAQ,eAAR,EAAyBqK,QAAzB,EAAmCisD,6BAAnC,EAAkEv0D,OAAlE,CAAvB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS9D,GAAT,CAAa+B,KAAb,EAAoByI,SAApB,EAA+B4B,QAA/B,EAAyC;EACrC,IAAImE,SAAS,GAAG,IAAhB;EACA,MAAMioD,WAAW,GAAGpsD,QAAQ,GAAG,IAAIkqD,eAAJ,CAAoBlqD,QAApB,CAAH,GAAmC,IAA/D;;EACA,IAAI5B,SAAS,KAAK,OAAlB,EAA2B;IACvB+F,SAAS,GAAG,IAAI2nD,sBAAJ,CAA2BM,WAA3B,CAAZ;EACH,CAFD,MAGK,IAAIhuD,SAAJ,EAAe;IAChB+F,SAAS,GAAG,IAAI4nD,sBAAJ,CAA2B3tD,SAA3B,EAAsCguD,WAAtC,CAAZ;EACH;;EACDjH,+BAA+B,CAACxvD,KAAK,CAAC8L,KAAP,EAAc9L,KAAd,EAAqBwO,SAArB,CAA/B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMkoD,eAAN,CAAsB;;AAEtB,MAAMC,oBAAN,SAAmCD,eAAnC,CAAmD;EAC/Ch0D,WAAW,CAACk0D,MAAD,EAASpQ,IAAT,EAAe;IACtB;IACA,KAAKoQ,MAAL,GAAcA,MAAd;IACA,KAAKpQ,IAAL,GAAYA,IAAZ;EACH;;EACDqQ,MAAM,CAAC72D,KAAD,EAAQ;IACV6pD,uBAAuB,CAAC,OAAD,EAAU,KAAK+M,MAAf,EAAuB52D,KAAK,CAAC+L,KAA7B,EAAoC,IAApC,CAAvB;IACA,MAAMihC,SAAS,GAAGI,gBAAgB,CAACptC,KAAK,CAAC81B,YAAP,EAAqB,KAAK8gC,MAA1B,EAAkC,KAAKpQ,IAAvC,CAAlC;IACAgP,aAAa,CAACxoB,SAAD,CAAb;IACAmoB,sBAAsB,CAACnoB,SAAD,CAAtB;;IACA,IAAIhtC,KAAK,CAAC81B,YAAN,CAAmBmU,MAAnB,EAAJ,EAAiC;MAC7B,MAAM,IAAI/sC,KAAJ,CAAU,sEACZ,wBADE,CAAN;IAEH;;IACD,OAAO,IAAI03D,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCihC,SAAxC,EAAmDhtC,KAAK,CAAC60D,cAAzD,CAAP;EACH;;AAhB8C;AAkBnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS5uD,KAAT,CAAejK,KAAf,EAAsBoC,GAAtB,EAA2B;EACvBosD,WAAW,CAAC,OAAD,EAAU,KAAV,EAAiBpsD,GAAjB,EAAsB,IAAtB,CAAX;EACA,OAAO,IAAIu4D,oBAAJ,CAAyB36D,KAAzB,EAAgCoC,GAAhC,CAAP;AACH;;AACD,MAAM04D,wBAAN,SAAuCJ,eAAvC,CAAuD;EACnDh0D,WAAW,CAACk0D,MAAD,EAASpQ,IAAT,EAAe;IACtB;IACA,KAAKoQ,MAAL,GAAcA,MAAd;IACA,KAAKpQ,IAAL,GAAYA,IAAZ;EACH;;EACDqQ,MAAM,CAAC72D,KAAD,EAAQ;IACV6pD,uBAAuB,CAAC,WAAD,EAAc,KAAK+M,MAAnB,EAA2B52D,KAAK,CAAC+L,KAAjC,EAAwC,KAAxC,CAAvB;IACA,MAAMihC,SAAS,GAAGK,oBAAoB,CAACrtC,KAAK,CAAC81B,YAAP,EAAqB,KAAK8gC,MAA1B,EAAkC,KAAKpQ,IAAvC,CAAtC;IACAgP,aAAa,CAACxoB,SAAD,CAAb;IACAmoB,sBAAsB,CAACnoB,SAAD,CAAtB;;IACA,IAAIhtC,KAAK,CAAC81B,YAAN,CAAmBmU,MAAnB,EAAJ,EAAiC;MAC7B,MAAM,IAAI/sC,KAAJ,CAAU,0EACZ,wBADE,CAAN;IAEH;;IACD,OAAO,IAAI03D,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCihC,SAAxC,EAAmDhtC,KAAK,CAAC60D,cAAzD,CAAP;EACH;;AAhBkD;AAkBvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS3uD,SAAT,CAAmBlK,KAAnB,EAA0BoC,GAA1B,EAA+B;EAC3BosD,WAAW,CAAC,WAAD,EAAc,KAAd,EAAqBpsD,GAArB,EAA0B,IAA1B,CAAX;EACA,OAAO,IAAI04D,wBAAJ,CAA6B96D,KAA7B,EAAoCoC,GAApC,CAAP;AACH;;AACD,MAAM24D,sBAAN,SAAqCL,eAArC,CAAqD;EACjDh0D,WAAW,CAACk0D,MAAD,EAASpQ,IAAT,EAAe;IACtB;IACA,KAAKoQ,MAAL,GAAcA,MAAd;IACA,KAAKpQ,IAAL,GAAYA,IAAZ;EACH;;EACDqQ,MAAM,CAAC72D,KAAD,EAAQ;IACV6pD,uBAAuB,CAAC,SAAD,EAAY,KAAK+M,MAAjB,EAAyB52D,KAAK,CAAC+L,KAA/B,EAAsC,IAAtC,CAAvB;IACA,MAAMihC,SAAS,GAAGE,kBAAkB,CAACltC,KAAK,CAAC81B,YAAP,EAAqB,KAAK8gC,MAA1B,EAAkC,KAAKpQ,IAAvC,CAApC;IACAgP,aAAa,CAACxoB,SAAD,CAAb;IACAmoB,sBAAsB,CAACnoB,SAAD,CAAtB;;IACA,IAAIhtC,KAAK,CAAC81B,YAAN,CAAmB+T,QAAnB,EAAJ,EAAmC;MAC/B,MAAM,IAAI3sC,KAAJ,CAAU,0EACZ,0BADE,CAAN;IAEH;;IACD,OAAO,IAAI03D,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCihC,SAAxC,EAAmDhtC,KAAK,CAAC60D,cAAzD,CAAP;EACH;;AAhBgD;AAkBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS9uD,OAAT,CAAiB/J,KAAK,GAAG,IAAzB,EAA+BoC,GAA/B,EAAoC;EAChCosD,WAAW,CAAC,SAAD,EAAY,KAAZ,EAAmBpsD,GAAnB,EAAwB,IAAxB,CAAX;EACA,OAAO,IAAI24D,sBAAJ,CAA2B/6D,KAA3B,EAAkCoC,GAAlC,CAAP;AACH;;AACD,MAAM44D,yBAAN,SAAwCN,eAAxC,CAAwD;EACpDh0D,WAAW,CAACk0D,MAAD,EAASpQ,IAAT,EAAe;IACtB;IACA,KAAKoQ,MAAL,GAAcA,MAAd;IACA,KAAKpQ,IAAL,GAAYA,IAAZ;EACH;;EACDqQ,MAAM,CAAC72D,KAAD,EAAQ;IACV6pD,uBAAuB,CAAC,YAAD,EAAe,KAAK+M,MAApB,EAA4B52D,KAAK,CAAC+L,KAAlC,EAAyC,KAAzC,CAAvB;IACA,MAAMihC,SAAS,GAAGG,qBAAqB,CAACntC,KAAK,CAAC81B,YAAP,EAAqB,KAAK8gC,MAA1B,EAAkC,KAAKpQ,IAAvC,CAAvC;IACAgP,aAAa,CAACxoB,SAAD,CAAb;IACAmoB,sBAAsB,CAACnoB,SAAD,CAAtB;;IACA,IAAIhtC,KAAK,CAAC81B,YAAN,CAAmB+T,QAAnB,EAAJ,EAAmC;MAC/B,MAAM,IAAI3sC,KAAJ,CAAU,6EACZ,0BADE,CAAN;IAEH;;IACD,OAAO,IAAI03D,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCihC,SAAxC,EAAmDhtC,KAAK,CAAC60D,cAAzD,CAAP;EACH;;AAhBmD;AAkBxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS7uD,UAAT,CAAoBhK,KAApB,EAA2BoC,GAA3B,EAAgC;EAC5BosD,WAAW,CAAC,YAAD,EAAe,KAAf,EAAsBpsD,GAAtB,EAA2B,IAA3B,CAAX;EACA,OAAO,IAAI44D,yBAAJ,CAA8Bh7D,KAA9B,EAAqCoC,GAArC,CAAP;AACH;;AACD,MAAM64D,2BAAN,SAA0CP,eAA1C,CAA0D;EACtDh0D,WAAW,CAACw0D,MAAD,EAAS;IAChB;IACA,KAAKA,MAAL,GAAcA,MAAd;EACH;;EACDL,MAAM,CAAC72D,KAAD,EAAQ;IACV,IAAIA,KAAK,CAAC81B,YAAN,CAAmB4W,QAAnB,EAAJ,EAAmC;MAC/B,MAAM,IAAIxvC,KAAJ,CAAU,0EACZ,kBADE,CAAN;IAEH;;IACD,OAAO,IAAI03D,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwC+gC,uBAAuB,CAAC9sC,KAAK,CAAC81B,YAAP,EAAqB,KAAKohC,MAA1B,CAA/D,EAAkGl3D,KAAK,CAAC60D,cAAxG,CAAP;EACH;;AAXqD;AAa1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASpvD,YAAT,CAAsBgG,KAAtB,EAA6B;EACzB,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B2I,IAAI,CAACC,KAAL,CAAW5I,KAAX,MAAsBA,KAAnD,IAA4DA,KAAK,IAAI,CAAzE,EAA4E;IACxE,MAAM,IAAIvO,KAAJ,CAAU,0DAAV,CAAN;EACH;;EACD,OAAO,IAAI+5D,2BAAJ,CAAgCxrD,KAAhC,CAAP;AACH;;AACD,MAAM0rD,0BAAN,SAAyCT,eAAzC,CAAyD;EACrDh0D,WAAW,CAACw0D,MAAD,EAAS;IAChB;IACA,KAAKA,MAAL,GAAcA,MAAd;EACH;;EACDL,MAAM,CAAC72D,KAAD,EAAQ;IACV,IAAIA,KAAK,CAAC81B,YAAN,CAAmB4W,QAAnB,EAAJ,EAAmC;MAC/B,MAAM,IAAIxvC,KAAJ,CAAU,yEACZ,kBADE,CAAN;IAEH;;IACD,OAAO,IAAI03D,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCkhC,sBAAsB,CAACjtC,KAAK,CAAC81B,YAAP,EAAqB,KAAKohC,MAA1B,CAA9D,EAAiGl3D,KAAK,CAAC60D,cAAvG,CAAP;EACH;;AAXoD;AAazD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASnvD,WAAT,CAAqB+F,KAArB,EAA4B;EACxB,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B2I,IAAI,CAACC,KAAL,CAAW5I,KAAX,MAAsBA,KAAnD,IAA4DA,KAAK,IAAI,CAAzE,EAA4E;IACxE,MAAM,IAAIvO,KAAJ,CAAU,yDAAV,CAAN;EACH;;EACD,OAAO,IAAIi6D,0BAAJ,CAA+B1rD,KAA/B,CAAP;AACH;;AACD,MAAM2rD,2BAAN,SAA0CV,eAA1C,CAA0D;EACtDh0D,WAAW,CAACqJ,KAAD,EAAQ;IACf;IACA,KAAKA,KAAL,GAAaA,KAAb;EACH;;EACD8qD,MAAM,CAAC72D,KAAD,EAAQ;IACVk1D,6BAA6B,CAACl1D,KAAD,EAAQ,cAAR,CAA7B;IACA,MAAMq3D,UAAU,GAAG,IAAIpoC,IAAJ,CAAS,KAAKljB,KAAd,CAAnB;;IACA,IAAIukB,WAAW,CAAC+mC,UAAD,CAAf,EAA6B;MACzB,MAAM,IAAIn6D,KAAJ,CAAU,sEAAV,CAAN;IACH;;IACD,MAAMo4B,KAAK,GAAG,IAAI2R,SAAJ,CAAcowB,UAAd,CAAd;IACA,MAAMrqB,SAAS,GAAGM,kBAAkB,CAACttC,KAAK,CAAC81B,YAAP,EAAqBR,KAArB,CAApC;IACA6/B,sBAAsB,CAACnoB,SAAD,CAAtB;IACA,OAAO,IAAI4nB,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCihC,SAAxC;IACP;IAAmB,IADZ,CAAP;EAEH;;AAhBqD;AAkB1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASrnC,YAAT,CAAsB+D,IAAtB,EAA4B;EACxB,IAAIA,IAAI,KAAK,MAAb,EAAqB;IACjB,MAAM,IAAIxM,KAAJ,CAAU,6DAAV,CAAN;EACH,CAFD,MAGK,IAAIwM,IAAI,KAAK,WAAb,EAA0B;IAC3B,MAAM,IAAIxM,KAAJ,CAAU,uEAAV,CAAN;EACH,CAFI,MAGA,IAAIwM,IAAI,KAAK,QAAb,EAAuB;IACxB,MAAM,IAAIxM,KAAJ,CAAU,iEAAV,CAAN;EACH;;EACDutD,kBAAkB,CAAC,cAAD,EAAiB,MAAjB,EAAyB/gD,IAAzB,EAA+B,KAA/B,CAAlB;EACA,OAAO,IAAI0tD,2BAAJ,CAAgC1tD,IAAhC,CAAP;AACH;;AACD,MAAM4tD,yBAAN,SAAwCZ,eAAxC,CAAwD;EACpDG,MAAM,CAAC72D,KAAD,EAAQ;IACVk1D,6BAA6B,CAACl1D,KAAD,EAAQ,YAAR,CAA7B;IACA,MAAMgtC,SAAS,GAAGM,kBAAkB,CAACttC,KAAK,CAAC81B,YAAP,EAAqB0F,SAArB,CAApC;IACA25B,sBAAsB,CAACnoB,SAAD,CAAtB;IACA,OAAO,IAAI4nB,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCihC,SAAxC;IACP;IAAmB,IADZ,CAAP;EAEH;;AAPmD;AASxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASpnC,UAAT,GAAsB;EAClB,OAAO,IAAI0xD,yBAAJ,EAAP;AACH;;AACD,MAAMC,8BAAN,SAA6Cb,eAA7C,CAA6D;EACzDG,MAAM,CAAC72D,KAAD,EAAQ;IACVk1D,6BAA6B,CAACl1D,KAAD,EAAQ,iBAAR,CAA7B;IACA,MAAMgtC,SAAS,GAAGM,kBAAkB,CAACttC,KAAK,CAAC81B,YAAP,EAAqB0L,cAArB,CAApC;IACA2zB,sBAAsB,CAACnoB,SAAD,CAAtB;IACA,OAAO,IAAI4nB,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCihC,SAAxC;IACP;IAAmB,IADZ,CAAP;EAEH;;AAPwD;AAS7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASnnC,eAAT,GAA2B;EACvB,OAAO,IAAI0xD,8BAAJ,EAAP;AACH;;AACD,MAAMC,2BAAN,SAA0Cd,eAA1C,CAA0D;EACtDG,MAAM,CAAC72D,KAAD,EAAQ;IACVk1D,6BAA6B,CAACl1D,KAAD,EAAQ,cAAR,CAA7B;IACA,MAAMgtC,SAAS,GAAGM,kBAAkB,CAACttC,KAAK,CAAC81B,YAAP,EAAqB0R,WAArB,CAApC;IACA2tB,sBAAsB,CAACnoB,SAAD,CAAtB;IACA,OAAO,IAAI4nB,SAAJ,CAAc50D,KAAK,CAAC8L,KAApB,EAA2B9L,KAAK,CAAC+L,KAAjC,EAAwCihC,SAAxC;IACP;IAAmB,IADZ,CAAP;EAEH;;AAPqD;AAS1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASlnC,YAAT,GAAwB;EACpB,OAAO,IAAI0xD,2BAAJ,EAAP;AACH;;AACD,MAAMC,2BAAN,SAA0Cf,eAA1C,CAA0D;EACtDh0D,WAAW,CAACk0D,MAAD,EAASpQ,IAAT,EAAe;IACtB;IACA,KAAKoQ,MAAL,GAAcA,MAAd;IACA,KAAKpQ,IAAL,GAAYA,IAAZ;EACH;;EACDqQ,MAAM,CAAC72D,KAAD,EAAQ;IACV6pD,uBAAuB,CAAC,SAAD,EAAY,KAAK+M,MAAjB,EAAyB52D,KAAK,CAAC+L,KAA/B,EAAsC,KAAtC,CAAvB;;IACA,IAAI/L,KAAK,CAAC81B,YAAN,CAAmB+T,QAAnB,EAAJ,EAAmC;MAC/B,MAAM,IAAI3sC,KAAJ,CAAU,uFACZ,WADE,CAAN;IAEH;;IACD,IAAI8C,KAAK,CAAC81B,YAAN,CAAmBmU,MAAnB,EAAJ,EAAiC;MAC7B,MAAM,IAAI/sC,KAAJ,CAAU,kFACZ,WADE,CAAN;IAEH;;IACD,OAAO,IAAIy5D,oBAAJ,CAAyB,KAAKC,MAA9B,EAAsC,KAAKpQ,IAA3C,EAAiDqQ,MAAjD,CAAwD,IAAIE,sBAAJ,CAA2B,KAAKH,MAAhC,EAAwC,KAAKpQ,IAA7C,EAAmDqQ,MAAnD,CAA0D72D,KAA1D,CAAxD,CAAP;EACH;;AAjBqD;AAmB1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmG,OAAT,CAAiBnK,KAAjB,EAAwBoC,GAAxB,EAA6B;EACzBosD,WAAW,CAAC,SAAD,EAAY,KAAZ,EAAmBpsD,GAAnB,EAAwB,IAAxB,CAAX;EACA,OAAO,IAAIq5D,2BAAJ,CAAgCz7D,KAAhC,EAAuCoC,GAAvC,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4B,KAAT,CAAeA,KAAf,EAAsB,GAAG03D,gBAAzB,EAA2C;EACvC,IAAIC,SAAS,GAAGnnD,kEAAkB,CAACxQ,KAAD,CAAlC;;EACA,KAAK,MAAM43D,UAAX,IAAyBF,gBAAzB,EAA2C;IACvCC,SAAS,GAAGC,UAAU,CAACf,MAAX,CAAkBc,SAAlB,CAAZ;EACH;;EACD,OAAOA,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACAjX,gCAAgC,CAACoU,aAAD,CAAhC;AACA9S,+BAA+B,CAAC8S,aAAD,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAM+C,mCAAmC,GAAG,iCAA5C;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG,EAAd;AACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAG,KAApB;AACA;AACA;AACA;;AACA,SAASC,gCAAT,CAA0CpL,IAA1C,EAAgDv/C,IAAhD,EAAsDC,IAAtD,EAA4D2qD,aAA5D,EAA2E;EACvErL,IAAI,CAACjjC,SAAL,GAAiB,IAAI9O,QAAJ,CAAc,GAAExN,IAAK,IAAGC,IAAK,EAA7B;EACjB;EAAc,KADG,EACIs/C,IAAI,CAACjjC,SAAL,CAAe5b,SADnB,EAC8B6+C,IAAI,CAACjjC,SAAL,CAAe5O,aAD7C,EAC4D6xC,IAAI,CAACjjC,SAAL,CAAe3b,SAD3E,EACsF4+C,IAAI,CAACjjC,SAAL,CAAe3O,cADrG,EACqH4xC,IAAI,CAACjjC,SAAL,CAAe1O,6BADpI;EAEjB;EAAqB,IAFJ,CAAjB;;EAGA,IAAIg9C,aAAJ,EAAmB;IACfrL,IAAI,CAAC35B,kBAAL,GAA0BglC,aAA1B;EACH;AACJ;AACD;AACA;AACA;AACA;;;AACA,SAASC,0BAAT,CAAoCz0D,GAApC,EAAyCwK,YAAzC,EAAuD4K,gBAAvD,EAAyErL,GAAzE,EAA8EQ,SAA9E,EAAyF;EACrF,IAAImqD,KAAK,GAAG3qD,GAAG,IAAI/J,GAAG,CAAC1B,OAAJ,CAAYa,WAA/B;;EACA,IAAIu1D,KAAK,KAAK97D,SAAd,EAAyB;IACrB,IAAI,CAACoH,GAAG,CAAC1B,OAAJ,CAAYq2D,SAAjB,EAA4B;MACxB/kD,KAAK,CAAC,+DACF,sDADC,CAAL;IAEH;;IACDH,GAAG,CAAC,iCAAD,EAAoCzP,GAAG,CAAC1B,OAAJ,CAAYq2D,SAAhD,CAAH;IACAD,KAAK,GAAI,GAAE10D,GAAG,CAAC1B,OAAJ,CAAYq2D,SAAU,8BAAjC;EACH;;EACD,IAAIvN,SAAS,GAAGsI,aAAa,CAACgF,KAAD,EAAQnqD,SAAR,CAA7B;EACA,IAAI2N,QAAQ,GAAGkvC,SAAS,CAAClvC,QAAzB;EACA,IAAI08C,UAAJ;EACA,IAAIC,cAAc,GAAGj8D,SAArB;;EACA,IAAI,OAAO0pB,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACE,GAA9C,EAAmD;IAC/CqyC,cAAc,GAAGvyC,OAAO,CAACE,GAAR,CAAY4xC,mCAAZ,CAAjB;EACH;;EACD,IAAIS,cAAJ,EAAoB;IAChBD,UAAU,GAAG,IAAb;IACAF,KAAK,GAAI,UAASG,cAAe,OAAM38C,QAAQ,CAAC5N,SAAU,EAA1D;IACA88C,SAAS,GAAGsI,aAAa,CAACgF,KAAD,EAAQnqD,SAAR,CAAzB;IACA2N,QAAQ,GAAGkvC,SAAS,CAAClvC,QAArB;EACH,CALD,MAMK;IACD08C,UAAU,GAAG,CAACxN,SAAS,CAAClvC,QAAV,CAAmBb,MAAjC;EACH;;EACD,MAAMy9C,iBAAiB,GAAGvqD,SAAS,IAAIqqD,UAAb,GACpB,IAAIt+C,qBAAJ,CAA0BA,qBAAqB,CAACE,KAAhD,CADoB,GAEpB,IAAIX,yBAAJ,CAA8B7V,GAAG,CAACd,IAAlC,EAAwCc,GAAG,CAAC1B,OAA5C,EAAqDkM,YAArD,CAFN;EAGA28C,WAAW,CAAC,+BAAD,EAAkCC,SAAlC,CAAX;;EACA,IAAI,CAACv6B,WAAW,CAACu6B,SAAS,CAACnhD,IAAX,CAAhB,EAAkC;IAC9B2J,KAAK,CAAC,gEACF,+BADC,CAAL;EAEH;;EACD,MAAMu5C,IAAI,GAAG4L,qBAAqB,CAAC78C,QAAD,EAAWlY,GAAX,EAAgB80D,iBAAhB,EAAmC,IAAI5/C,qBAAJ,CAA0BlV,GAAG,CAACd,IAA9B,EAAoCkW,gBAApC,CAAnC,CAAlC;EACA,OAAO,IAAI5L,QAAJ,CAAa2/C,IAAb,EAAmBnpD,GAAnB,CAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASg1D,qBAAT,CAA+B7L,IAA/B,EAAqC8L,OAArC,EAA8C;EAC1C,MAAMC,QAAQ,GAAGb,KAAK,CAACY,OAAD,CAAtB,CAD0C,CAE1C;;EACA,IAAI,CAACC,QAAD,IAAaA,QAAQ,CAAC/L,IAAI,CAACxuD,GAAN,CAAR,KAAuBwuD,IAAxC,EAA8C;IAC1Cv5C,KAAK,CAAE,YAAWqlD,OAAQ,IAAG9L,IAAI,CAACjjC,SAAU,6BAAvC,CAAL;EACH;;EACD8lC,aAAa,CAAC7C,IAAD,CAAb;EACA,OAAO+L,QAAQ,CAAC/L,IAAI,CAACxuD,GAAN,CAAf;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASo6D,qBAAT,CAA+B78C,QAA/B,EAAyClY,GAAzC,EAA8C80D,iBAA9C,EAAiE1/C,gBAAjE,EAAmF;EAC/E,IAAI8/C,QAAQ,GAAGb,KAAK,CAACr0D,GAAG,CAACd,IAAL,CAApB;;EACA,IAAI,CAACg2D,QAAL,EAAe;IACXA,QAAQ,GAAG,EAAX;IACAb,KAAK,CAACr0D,GAAG,CAACd,IAAL,CAAL,GAAkBg2D,QAAlB;EACH;;EACD,IAAI/L,IAAI,GAAG+L,QAAQ,CAACh9C,QAAQ,CAACF,WAAT,EAAD,CAAnB;;EACA,IAAImxC,IAAJ,EAAU;IACNv5C,KAAK,CAAC,yHAAD,CAAL;EACH;;EACDu5C,IAAI,GAAG,IAAIV,IAAJ,CAASvwC,QAAT,EAAmBo8C,aAAnB,EAAkCQ,iBAAlC,EAAqD1/C,gBAArD,CAAP;EACA8/C,QAAQ,CAACh9C,QAAQ,CAACF,WAAT,EAAD,CAAR,GAAmCmxC,IAAnC;EACA,OAAOA,IAAP;AACH;AACD;AACA;AACA;;;AACA,SAASgM,0BAAT,CAAoCC,eAApC,EAAqD;EACjDd,aAAa,GAAGc,eAAhB;AACH;AACD;AACA;AACA;;;AACA,MAAM5rD,QAAN,CAAe;EACX;EACAvK,WAAW,CAACo2D,aAAD;EACX;EACAr1D,GAFW,EAEN;IACD,KAAKq1D,aAAL,GAAqBA,aAArB;IACA,KAAKr1D,GAAL,GAAWA,GAAX;IACA;;IACA,KAAK,MAAL,IAAe,UAAf;IACA;;IACA,KAAKs1D,gBAAL,GAAwB,KAAxB;EACH;;EACQ,IAALjtD,KAAK,GAAG;IACR,IAAI,CAAC,KAAKitD,gBAAV,EAA4B;MACxBpM,SAAS,CAAC,KAAKmM,aAAN,EAAqB,KAAKr1D,GAAL,CAAS1B,OAAT,CAAiB8qD,KAAtC,EAA6C,KAAKppD,GAAL,CAAS1B,OAAT,CAAiB,8BAAjB,CAA7C,CAAT;MACA,KAAKg3D,gBAAL,GAAwB,IAAxB;IACH;;IACD,OAAO,KAAKD,aAAZ;EACH;;EACQ,IAALhD,KAAK,GAAG;IACR,IAAI,CAAC,KAAKkD,aAAV,EAAyB;MACrB,KAAKA,aAAL,GAAqB,IAAIlE,aAAJ,CAAkB,KAAKhpD,KAAvB,EAA8B0jB,YAAY,EAA1C,CAArB;IACH;;IACD,OAAO,KAAKwpC,aAAZ;EACH;;EACD5rD,OAAO,GAAG;IACN,IAAI,KAAK4rD,aAAL,KAAuB,IAA3B,EAAiC;MAC7BP,qBAAqB,CAAC,KAAK3sD,KAAN,EAAa,KAAKrI,GAAL,CAASd,IAAtB,CAArB;MACA,KAAKm2D,aAAL,GAAqB,IAArB;MACA,KAAKE,aAAL,GAAqB,IAArB;IACH;;IACD,OAAO//C,OAAO,CAAC5N,OAAR,EAAP;EACH;;EACDwqD,gBAAgB,CAACpoD,OAAD,EAAU;IACtB,IAAI,KAAKurD,aAAL,KAAuB,IAA3B,EAAiC;MAC7B3lD,KAAK,CAAC,iBAAiB5F,OAAjB,GAA2B,yBAA5B,CAAL;IACH;EACJ;;AArCU;;AAuCf,SAASwrD,kBAAT,GAA8B;EAC1B,IAAIjxC,gBAAgB,CAACG,wBAArB,EAA+C;IAC3CngB,IAAI,CAAC,+GAAD,CAAJ;EACH;AACJ;AACD;AACA;AACA;;;AACA,SAASnB,eAAT,GAA2B;EACvBoyD,kBAAkB;EAClB36C,qBAAqB,CAAC4C,aAAtB;AACH;AACD;AACA;AACA;;;AACA,SAASpa,gBAAT,GAA4B;EACxBmyD,kBAAkB;EAClBzzC,mBAAmB,CAACtE,aAApB;EACA5C,qBAAqB,CAAC0C,UAAtB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASk4C,WAAT,CAAqBz1D,GAAG,GAAGwL,qDAAM,EAAjC,EAAqCzB,GAArC,EAA0C;EACtC,MAAMooD,EAAE,GAAG5mD,2DAAY,CAACvL,GAAD,EAAM,UAAN,CAAZ,CAA8BkL,YAA9B,CAA2C;IAClDE,UAAU,EAAErB;EADsC,CAA3C,CAAX;;EAGA,IAAI,CAACooD,EAAE,CAACmD,gBAAR,EAA0B;IACtB,MAAMI,QAAQ,GAAG1oD,iFAAiC,CAAC,UAAD,CAAlD;;IACA,IAAI0oD,QAAJ,EAAc;MACVpyD,uBAAuB,CAAC6uD,EAAD,EAAK,GAAGuD,QAAR,CAAvB;IACH;EACJ;;EACD,OAAOvD,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS7uD,uBAAT,CAAiC6uD,EAAjC,EAAqCvoD,IAArC,EAA2CC,IAA3C,EAAiDvL,OAAO,GAAG,EAA3D,EAA+D;EAC3D6zD,EAAE,GAAGplD,kEAAkB,CAAColD,EAAD,CAAvB;;EACAA,EAAE,CAACC,gBAAH,CAAoB,aAApB;;EACA,IAAID,EAAE,CAACmD,gBAAP,EAAyB;IACrB1lD,KAAK,CAAC,wEAAD,CAAL;EACH;;EACD,MAAMu5C,IAAI,GAAGgJ,EAAE,CAACkD,aAAhB;EACA,IAAIb,aAAa,GAAG57D,SAApB;;EACA,IAAIuwD,IAAI,CAACjjC,SAAL,CAAe3b,SAAnB,EAA8B;IAC1B,IAAIjM,OAAO,CAACq3D,aAAZ,EAA2B;MACvB/lD,KAAK,CAAC,oJAAD,CAAL;IACH;;IACD4kD,aAAa,GAAG,IAAIl+C,qBAAJ,CAA0BA,qBAAqB,CAACE,KAAhD,CAAhB;EACH,CALD,MAMK,IAAIlY,OAAO,CAACq3D,aAAZ,EAA2B;IAC5B,MAAM1rC,KAAK,GAAG,OAAO3rB,OAAO,CAACq3D,aAAf,KAAiC,QAAjC,GACRr3D,OAAO,CAACq3D,aADA,GAER1oD,mEAAmB,CAAC3O,OAAO,CAACq3D,aAAT,EAAwBxD,EAAE,CAACnyD,GAAH,CAAO1B,OAAP,CAAeq2D,SAAvC,CAFzB;IAGAH,aAAa,GAAG,IAAIl+C,qBAAJ,CAA0B2T,KAA1B,CAAhB;EACH,CAnB0D,CAoB3D;;;EACAsqC,gCAAgC,CAACpL,IAAD,EAAOv/C,IAAP,EAAaC,IAAb,EAAmB2qD,aAAnB,CAAhC;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAShxD,SAAT,CAAmB2uD,EAAnB,EAAuB;EACnBA,EAAE,GAAGplD,kEAAkB,CAAColD,EAAD,CAAvB;;EACAA,EAAE,CAACC,gBAAH,CAAoB,WAApB;;EACApG,aAAa,CAACmG,EAAE,CAAC9pD,KAAJ,CAAb;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS5E,QAAT,CAAkB0uD,EAAlB,EAAsB;EAClBA,EAAE,GAAGplD,kEAAkB,CAAColD,EAAD,CAAvB;;EACAA,EAAE,CAACC,gBAAH,CAAoB,UAApB;;EACAnG,UAAU,CAACkG,EAAE,CAAC9pD,KAAJ,CAAV;AACH;;AACD,SAASvE,aAAT,CAAuBoL,MAAvB,EAA+BI,UAA/B,EAA2C;EACvCF,eAAe,CAACF,MAAD,EAASI,UAAT,CAAf;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASzE,gBAAT,CAA0B+qD,OAA1B,EAAmC;EAC/BzoD,aAAa,CAACzB,sDAAD,CAAb;;EACAC,iEAAkB,CAAC,IAAInK,0DAAJ,CAAc,UAAd,EAA0B,CAACuJ,SAAD,EAAY;IAAEC,kBAAkB,EAAEjB;EAAtB,CAAZ,KAA4C;IACrF,MAAM/J,GAAG,GAAG+K,SAAS,CAACE,WAAV,CAAsB,KAAtB,EAA6BC,YAA7B,EAAZ;IACA,MAAMV,YAAY,GAAGO,SAAS,CAACE,WAAV,CAAsB,eAAtB,CAArB;IACA,MAAMmK,gBAAgB,GAAGrK,SAAS,CAACE,WAAV,CAAsB,oBAAtB,CAAzB;IACA,OAAOwpD,0BAA0B,CAACz0D,GAAD,EAAMwK,YAAN,EAAoB4K,gBAApB,EAAsCrL,GAAtC,CAAjC;EACH,CALkB,EAKhB;EAAS;EALO,EAKqBuB,oBALrB,CAK0C,IAL1C,CAAD,CAAlB;;EAMArK,8DAAe,CAAC/B,IAAD,EAAOmF,OAAP,EAAgBuxD,OAAhB,CAAf,CAR+B,CAS/B;;EACA30D,8DAAe,CAAC/B,IAAD,EAAOmF,OAAP,EAAgB,SAAhB,CAAf;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMwxD,gBAAgB,GAAG;EACrB,OAAO;AADc,CAAzB;AAGA;AACA;AACA;AACA;AACA;;AACA,SAASnyD,eAAT,GAA2B;EACvB,OAAOmyD,gBAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASlyD,SAAT,CAAmBwG,KAAnB,EAA0B;EACtB,OAAO;IACH,OAAO;MACH,aAAaA;IADV;EADJ,CAAP;AAKH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAMvE,iBAAN,CAAwB;EACpB;EACA3G,WAAW;EACX;EACA4G,SAFW;EAGX;EACA7L,QAJW,EAID;IACN,KAAK6L,SAAL,GAAiBA,SAAjB;IACA,KAAK7L,QAAL,GAAgBA,QAAhB;EACH;EACD;;;EACA8L,MAAM,GAAG;IACL,OAAO;MAAED,SAAS,EAAE,KAAKA,SAAlB;MAA6B7L,QAAQ,EAAE,KAAKA,QAAL,CAAc8L,MAAd;IAAvC,CAAP;EACH;;AAbmB;AAexB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS9C,cAAT,CAAwB9J,GAAxB,EACA;AACA+P,iBAFA,EAEmB3K,OAFnB,EAE4B;EACxB,IAAIyI,EAAJ;;EACA7N,GAAG,GAAG6T,kEAAkB,CAAC7T,GAAD,CAAxB;EACAguD,oBAAoB,CAA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","sources":["./node_modules/@angular/fire/fesm2015/angular-fire-compat-database.js","./node_modules/@angular/fire/node_modules/@firebase/database-compat/dist/index.esm2017.js","./node_modules/@angular/fire/node_modules/@firebase/database/dist/index.esm2017.js","./node_modules/rxjs/_esm2015/internal/operators/skipWhile.js","./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js","./node_modules/@angular/fire/node_modules/firebase/compat/database/dist/esm/index.esm.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport * as i3 from '@angular/fire/app-check';\nimport firebase from 'firebase/compat/app';\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n    // if a db ref was passed in, just return it\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable(subscriber => {\n        let fn = null;\n        fn = ref[listenType](event, (snapshot, prevKey) => {\n            scheduler.schedule(() => {\n                subscriber.next({ snapshot, prevKey });\n            });\n            if (listenType === 'once') {\n                scheduler.schedule(() => subscriber.complete());\n            }\n        }, err => {\n            scheduler.schedule(() => subscriber.error(err));\n        });\n        if (listenType === 'on') {\n            return {\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return {\n                unsubscribe() {\n                }\n            };\n        }\n    }).pipe(map(payload => {\n        const { snapshot, prevKey } = payload;\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    }), share());\n}\n\nfunction listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) !== prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\nfunction validateEventsArray(events) {\n    if (isNil(events) || events.length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n\nfunction snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, events, scheduler);\n}\n\nfunction stateChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n    return merge(...childEvent$);\n}\n\nfunction auditTrail(query, events, scheduler) {\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((current, action) => [...current, action], []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map(data => {\n        // Store the last key in the data set\n        let lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.payload.forEach(child => {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data, lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(meta => meta.actions));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n    return function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item)[operation](value),\n            firebaseCase: () => item[operation](value),\n            snapshotCase: () => item.ref[operation](value)\n        });\n    };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n    return function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item).remove(),\n            firebaseCase: () => item.remove(),\n            snapshotCase: () => item.ref.remove()\n        });\n    };\n}\n\nfunction createListReference(query, afDatabase) {\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n    return {\n        query,\n        update: createDataOperationMethod(refInZone, 'update'),\n        set: createDataOperationMethod(refInZone, 'set'),\n        push: (data) => refInZone.push(data),\n        remove: createRemoveMethod(refInZone),\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        valueChanges(events, options) {\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(map(actions => actions.map(a => {\n                if (options && options.idField) {\n                    return Object.assign(Object.assign({}, a.payload.val()), {\n                        [options.idField]: a.key\n                    });\n                }\n                else {\n                    return a.payload.val();\n                }\n            })), keepUnstableUntilFirst);\n        }\n    };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n    return function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    };\n}\n\nfunction createObjectReference(query, afDatabase) {\n    return {\n        query,\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n        },\n        update(data) { return query.ref.update(data); },\n        set(data) { return query.ref.set(data); },\n        remove() { return query.ref.remove(); },\n        valueChanges() {\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n        },\n    };\n}\n\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n    constructor(options, name, databaseURL, \n    // tslint:disable-next-line:ban-types\n    platformId, zone, schedulers, _useEmulator, // tuple isn't working here\n    auth, useAuthEmulator, authSettings, // can't use firebase.auth.AuthSettings here\n    tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n        this.schedulers = schedulers;\n        const useEmulator = _useEmulator;\n        const app = ɵfirebaseAppFactory(options, zone, name);\n        if (auth) {\n            ɵauthFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n        }\n        this.database = ɵcacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n            const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n            if (useEmulator) {\n                database.useEmulator(...useEmulator);\n            }\n            return database;\n        }, [useEmulator]);\n    }\n    list(pathOrRef, queryFn) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    object(pathOrRef) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        return createObjectReference(ref, this);\n    }\n    createPushId() {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n        return ref.push().key;\n    }\n}\nAngularFireDatabase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, deps: [{ token: FIREBASE_OPTIONS }, { token: FIREBASE_APP_NAME, optional: true }, { token: URL, optional: true }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i1.ɵAngularFireSchedulers }, { token: USE_EMULATOR, optional: true }, { token: i2.AngularFireAuth, optional: true }, { token: USE_EMULATOR$1, optional: true }, { token: SETTINGS, optional: true }, { token: TENANT_ID, optional: true }, { token: LANGUAGE_CODE, optional: true }, { token: USE_DEVICE_LANGUAGE, optional: true }, { token: PERSISTENCE, optional: true }, { token: i3.AppCheckInstances, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nAngularFireDatabase.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, providedIn: 'any' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FIREBASE_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FIREBASE_APP_NAME]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [URL]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: i1.ɵAngularFireSchedulers }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR]\n                }] }, { type: i2.AngularFireAuth, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR$1]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SETTINGS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TENANT_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LANGUAGE_CODE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_DEVICE_LANGUAGE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PERSISTENCE]\n                }] }, { type: i3.AppCheckInstances, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nclass AngularFireDatabaseModule {\n    constructor() {\n        firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n    }\n}\nAngularFireDatabaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularFireDatabaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule });\nAngularFireDatabaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, providers: [AngularFireDatabase] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [AngularFireDatabase]\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n","import firebase from '@firebase/app-compat';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { _validatePathString, onChildMoved, onChildChanged, onChildRemoved, onChildAdded, onValue, off, get, query, limitToFirst, limitToLast, orderByChild, orderByKey, orderByPriority, orderByValue, startAt, startAfter, endAt, endBefore, equalTo, _ReferenceImpl, _QueryImpl, _QueryParams, child, set, _validateWritablePath, update, setWithPriority, remove, runTransaction, setPriority, push, OnDisconnect as OnDisconnect$1, forceWebSockets, forceLongPolling, connectDatabaseEmulator, refFromURL, ref, goOffline, goOnline, serverTimestamp, increment, _setSDKVersion, _repoManagerDatabaseFromApp, enableLogging } from '@firebase/database';\nimport { errorPrefix, validateArgCount, validateCallback, validateContextObject, Deferred } from '@firebase/util';\nimport { Logger } from '@firebase/logger';\n\nconst name = \"@firebase/database-compat\";\nconst version = \"0.3.4\";\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/database-compat');\r\nconst warn = function (msg) {\r\n    const message = 'FIREBASE WARNING: ' + msg;\r\n    logClient.warn(message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\r\nconst validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass OnDisconnect {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    cancel(onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        const result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    remove(onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        const result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    set(value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        const result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    setWithPriority(value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        const result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    update(objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            const newObjectToMerge = {};\r\n            for (let i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        const result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass TransactionResult {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    constructor(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    toJSON() {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nclass DataSnapshot {\r\n    constructor(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    val() {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    }\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    exportVal() {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    toJSON() {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    }\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    exists() {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    }\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    child(path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        _validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    }\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    hasChild(path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        _validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    }\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    getPriority() {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    }\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    forEach(action) {\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(expDataSnapshot => action(new DataSnapshot(this._database, expDataSnapshot)));\r\n    }\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    hasChildren() {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    }\r\n    get key() {\r\n        return this._delegate.key;\r\n    }\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    numChildren() {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    }\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    getRef() {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    }\r\n    get ref() {\r\n        return this.getRef();\r\n    }\r\n}\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nclass Query {\r\n    constructor(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    on(eventType, callback, cancelCallbackOrContext, context) {\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        const ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        const valueCallback = (expSnapshot, previousChildName) => {\r\n            callback.call(ret.context, new DataSnapshot(this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        const cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    }\r\n    off(eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            const valueCallback = () => { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    }\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    get() {\r\n        return get(this._delegate).then(expSnapshot => {\r\n            return new DataSnapshot(this.database, expSnapshot);\r\n        });\r\n    }\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    once(eventType, callback, failureCallbackOrContext, context) {\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        const ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        const deferred = new Deferred();\r\n        const valueCallback = (expSnapshot, previousChildName) => {\r\n            const result = new DataSnapshot(this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        const cancelCallback = (error) => {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    limitToFirst(limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    }\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    limitToLast(limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    }\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    orderByChild(path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    }\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    orderByKey() {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    }\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    orderByPriority() {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    }\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    orderByValue() {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    }\r\n    startAt(value = null, name) {\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    }\r\n    startAfter(value = null, name) {\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    }\r\n    endAt(value = null, name) {\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    }\r\n    endBefore(value = null, name) {\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    }\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    equalTo(value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    }\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    toString() {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    toJSON() {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    }\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    isEqual(other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            const error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    }\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    static getCancelAndContextArgs_(fnName, cancelOrContext, context) {\r\n        const ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    get ref() {\r\n        return new Reference(this.database, new _ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n    }\r\n}\r\nclass Reference extends Query {\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    constructor(database, _delegate) {\r\n        super(database, new _QueryImpl(_delegate._repo, _delegate._path, new _QueryParams(), false));\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /** @returns {?string} */\r\n    getKey() {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    }\r\n    child(pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    }\r\n    /** @returns {?Reference} */\r\n    getParent() {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        const parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    }\r\n    /** @returns {!Reference} */\r\n    getRoot() {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    }\r\n    set(newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        const result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    update(values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            const newObjectToMerge = {};\r\n            for (let i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        _validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        const result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    setWithPriority(newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        const result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    remove(onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        const result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    transaction(transactionUpdate, onComplete, applyLocally) {\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        const result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally\r\n        }).then(transactionResult => new TransactionResult(transactionResult.committed, new DataSnapshot(this.database, transactionResult.snapshot)));\r\n        if (onComplete) {\r\n            result.then(transactionResult => onComplete(null, transactionResult.committed, transactionResult.snapshot), error => onComplete(error, false, null));\r\n        }\r\n        return result;\r\n    }\r\n    setPriority(priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        const result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    push(value, onComplete) {\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        const expPromise = push(this._delegate, value);\r\n        const promise = expPromise.then(expRef => new Reference(this.database, expRef));\r\n        if (onComplete) {\r\n            promise.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        const result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    }\r\n    onDisconnect() {\r\n        _validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\r\n    }\r\n    get key() {\r\n        return this.getKey();\r\n    }\r\n    get parent() {\r\n        return this.getParent();\r\n    }\r\n    get root() {\r\n        return this.getRoot();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nclass Database {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    constructor(_delegate, app) {\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: () => this._delegate._delete(),\r\n            forceWebSockets,\r\n            forceLongPolling\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n     */\r\n    useEmulator(host, port, options = {}) {\r\n        connectDatabaseEmulator(this._delegate, host, port, options);\r\n    }\r\n    ref(path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            const childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            const childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    refFromURL(url) {\r\n        const apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        const childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    }\r\n    // Make individual repo go offline.\r\n    goOffline() {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    }\r\n    goOnline() {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    }\r\n}\r\nDatabase.ServerValue = {\r\n    TIMESTAMP: serverTimestamp(),\r\n    increment: (delta) => increment(delta)\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone({ app, url, version, customAuthImpl, namespace, nodeAdmin = false }) {\r\n    _setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    const authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', () => customAuthImpl, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    return {\r\n        instance: new Database(_repoManagerDatabaseFromApp(app, authProvider, \r\n        /* appCheckProvider= */ undefined, url, nodeAdmin), app),\r\n        namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    instance.INTERNAL.registerComponent(new Component('database-compat', (container, { instanceIdentifier: url }) => {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const databaseExp = container\r\n            .getProvider('database')\r\n            .getImmediate({ identifier: url });\r\n        return new Database(databaseExp, app);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference,\r\n        Query,\r\n        Database,\r\n        DataSnapshot,\r\n        enableLogging,\r\n        INTERNAL,\r\n        ServerValue\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterDatabase(firebase);\n\nexport { registerDatabase };\n","import { _getProvider, getApp, SDK_VERSION as SDK_VERSION$1, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, stringToByteArray, Sha1, base64, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, getDefaultEmulatorHostnameAndPort, createMockUserToken } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nconst name = \"@firebase/database\";\nconst version = \"0.14.4\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nlet SDK_VERSION = '';\r\n/**\r\n * SDK_VERSION should be set before any database instance is created\r\n * @internal\r\n */\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nclass DOMStorageWrapper {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    constructor(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    set(key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    }\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    get(key) {\r\n        const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    }\r\n    remove(key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    }\r\n    prefixedName_(name) {\r\n        return this.prefix_ + name;\r\n    }\r\n    toString() {\r\n        return this.domStorage_.toString();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    set(key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    }\r\n    get(key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    }\r\n    remove(key) {\r\n        delete this.cache_[key];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nconst createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            const domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nconst PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nconst SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nconst LUIDGenerator = (function () {\r\n    let id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nconst sha1 = function (str) {\r\n    const utf8Bytes = stringToByteArray(str);\r\n    const sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    const sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nconst buildLogMessage_ = function (...varArgs) {\r\n    let message = '';\r\n    for (let i = 0; i < varArgs.length; i++) {\r\n        const arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nlet logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nlet firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nconst enableLogging$1 = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nconst log = function (...varArgs) {\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging$1(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        const message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nconst logWrapper = function (prefix) {\r\n    return function (...varArgs) {\r\n        log(prefix, ...varArgs);\r\n    };\r\n};\r\nconst error = function (...varArgs) {\r\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\r\n    logClient.error(message);\r\n};\r\nconst fatal = function (...varArgs) {\r\n    const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nconst warn = function (...varArgs) {\r\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nconst warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nconst isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nconst executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        let called = false;\r\n        const wrappedFn = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called) {\r\n                called = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', () => {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nconst MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nconst MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nconst nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nconst stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nconst requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nconst ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    const keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (const k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    let key = '{';\r\n    for (let i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nconst splitStringBySize = function (str, segsize) {\r\n    const len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    const dataSegs = [];\r\n    for (let c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nconst doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    const ebits = 11, fbits = 52;\r\n    const bias = (1 << (ebits - 1)) - 1;\r\n    let s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    const bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    const str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    let hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nconst isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nconst isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    let reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    const error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nconst INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nconst tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        const intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nconst exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(() => {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            const stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nconst beingCrawled = function () {\r\n    const userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nconst setTimeoutNonBlocking = function (fn, time) {\r\n    const timeout = setTimeout(fn, time);\r\n    // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\r\n    if (typeof timeout === 'number' &&\r\n        // @ts-ignore Is only defined in Deno environments.\r\n        typeof Deno !== 'undefined' &&\r\n        // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\r\n        Deno['unrefTimer']) {\r\n        // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\r\n        Deno.unrefTimer(timeout);\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    }\r\n    else if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nclass AppCheckTokenProvider {\r\n    constructor(appName_, appCheckProvider) {\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(appCheck => (this.appCheck = appCheck));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.appCheck) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.appCheck) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(appCheck => appCheck.addTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        warn(`Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nclass FirebaseAuthTokenProvider {\r\n    constructor(appName_, firebaseOptions_, authProvider_) {\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(auth => (this.auth_ = auth));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.auth_) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.auth_) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(error => {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(auth => auth.addAuthTokenListener(listener));\r\n        }\r\n    }\r\n    removeTokenChangeListener(listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(auth => auth.removeAuthTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        let errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    }\r\n}\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nclass EmulatorTokenProvider {\r\n    constructor(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    getToken(forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    }\r\n    removeTokenChangeListener(listener) { }\r\n    notifyForInvalidToken() { }\r\n}\r\n/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\nEmulatorTokenProvider.OWNER = 'owner';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PROTOCOL_VERSION = '5';\r\nconst VERSION_PARAM = 'v';\r\nconst TRANSPORT_SESSION_PARAM = 's';\r\nconst REFERER_PARAM = 'r';\r\nconst FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nconst FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nconst LAST_SESSION_PARAM = 'ls';\r\nconst APPLICATION_ID_PARAM = 'p';\r\nconst APP_CHECK_TOKEN_PARAM = 'ac';\r\nconst WEBSOCKET = 'websocket';\r\nconst LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nclass RepoInfo {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    constructor(host, secure, namespace, webSocketOnly, nodeAdmin = false, persistenceKey = '', includeNamespaceInQueryParams = false, isUsingEmulator = false) {\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.isUsingEmulator = isUsingEmulator;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    isCacheableHost() {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    }\r\n    isCustomHost() {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    }\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this._host, this.internalHost);\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        let str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    }\r\n    toURLString() {\r\n        const protocol = this.secure ? 'https://' : 'http://';\r\n        const query = this.includeNamespaceInQueryParams\r\n            ? `?ns=${this.namespace}`\r\n            : '';\r\n        return `${protocol}${this.host}/${query}`;\r\n    }\r\n}\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    let connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    const pairs = [];\r\n    each(params, (key, value) => {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nclass StatsCollection {\r\n    constructor() {\r\n        this.counters_ = {};\r\n    }\r\n    incrementCounter(name, amount = 1) {\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    }\r\n    get() {\r\n        return deepCopy(this.counters_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst collections = {};\r\nconst reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    const hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    const hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nclass PacketReceiver {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    constructor(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    closeAfter(responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    }\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    handleResponse(requestNum, data) {\r\n        this.pendingResponses[requestNum] = data;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            const toProcess = this.pendingResponses[this.currentResponseNum];\r\n            delete this.pendingResponses[this.currentResponseNum];\r\n            for (let i = 0; i < toProcess.length; ++i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(() => {\r\n                        this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            }\r\n            if (this.currentResponseNum === this.closeAfterResponse) {\r\n                if (this.onClose) {\r\n                    this.onClose();\r\n                    this.onClose = null;\r\n                }\r\n                break;\r\n            }\r\n            this.currentResponseNum++;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nconst FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nconst FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nconst FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nconst FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nconst FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nconst FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nconst FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nconst FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nconst FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nconst FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nconst FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nconst FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nconst MAX_URL_DATA_SIZE = 1870;\r\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nconst LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nclass BrowserPollConnection {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = (params) => {\r\n            // Always add the token if we have one.\r\n            if (this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(() => {\r\n            this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            this.onClosed_();\r\n            this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(() => {\r\n            if (this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            this.scriptTagHolder = new FirebaseIFrameScriptHolder((...args) => {\r\n                const [command, arg1, arg2, arg3, arg4] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                if (!this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (this.connectTimeoutTimer_) {\r\n                    clearTimeout(this.connectTimeoutTimer_);\r\n                    this.connectTimeoutTimer_ = null;\r\n                }\r\n                this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    this.id = arg1;\r\n                    this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        this.myPacketOrderer.closeAfter(arg1, () => {\r\n                            this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, (...args) => {\r\n                const [pN, data] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                this.myPacketOrderer.handleResponse(pN, data);\r\n            }, () => {\r\n                this.onClosed_();\r\n            }, this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\r\n                    this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\r\n            }\r\n            if (this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\r\n            }\r\n            if (this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = this.applicationId;\r\n            }\r\n            if (this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            const connectURL = this.urlFn(urlParams);\r\n            this.log_('Connecting via long-poll to ' + connectURL);\r\n            this.scriptTagHolder.addTag(connectURL, () => {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    start() {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    }\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    static forceAllow() {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    }\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    static forceDisallow() {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    }\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    static isAvailable() {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    }\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    markConnectionHealthy() { }\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    }\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    send(data) {\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        const base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    }\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    addDisconnectPingFrame(id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        const urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    }\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    incrementIncomingBytes_(args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        const bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    }\r\n}\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nclass FirebaseIFrameScriptHolder {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    constructor(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\r\n                onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            let script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                const currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            const iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    static createIFrame_() {\r\n        const iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                const a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                const domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    }\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    close() {\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\r\n            this.myIFrame.doc.body.textContent = '';\r\n            setTimeout(() => {\r\n                if (this.myIFrame !== null) {\r\n                    document.body.removeChild(this.myIFrame);\r\n                    this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        const onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    startLongPoll(id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    }\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    newRequest_() {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            let theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            let curDataString = '';\r\n            let i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                const nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    const theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    enqueueSegment(segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    }\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    addLongPollTag_(url, serial) {\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        const doNewRequest = () => {\r\n            this.outstandingRequests.delete(serial);\r\n            this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        const keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        const readyStateCB = () => {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    }\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    addTag(url, loadCB) {\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    const newScript = this.myIFrame.doc.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n                    newScript.async = true;\r\n                    newScript.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript.onload = newScript.onreadystatechange =\r\n                        function () {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            const rstate = newScript.readyState;\r\n                            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                newScript.onload = newScript.onreadystatechange = null;\r\n                                if (newScript.parentNode) {\r\n                                    newScript.parentNode.removeChild(newScript);\r\n                                }\r\n                                loadCB();\r\n                            }\r\n                        };\r\n                    newScript.onerror = () => {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        this.sendNewPolls = false;\r\n                        this.close();\r\n                    };\r\n                    this.myIFrame.doc.body.appendChild(newScript);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nlet WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nclass WebSocketConnection {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken, applicationId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    static connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken, applicationId) {\r\n        const urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        if (applicationId) {\r\n            urlParams[APPLICATION_ID_PARAM] = applicationId;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            let options;\r\n            if (isNodeSdk()) {\r\n                const device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                options = {\r\n                    headers: {\r\n                        'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = `Bearer ${this.authToken}`;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                const env = process['env'];\r\n                const proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n            }\r\n            this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = () => {\r\n            this.log_('Websocket connected.');\r\n            this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = () => {\r\n            this.log_('Websocket connection was disconnected.');\r\n            this.mySock = null;\r\n            this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = m => {\r\n            this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = e => {\r\n            this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n        };\r\n    }\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    start() { }\r\n    static forceDisallow() {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    }\r\n    static isAvailable() {\r\n        let isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    }\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    static previouslyFailed() {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    }\r\n    markConnectionHealthy() {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    }\r\n    appendFrame_(data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            const fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            const jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    }\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    handleNewFrameCount_(frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    }\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    extractFrameCount_(data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            const frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    }\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    handleIncomingFrame(mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        const data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            const remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    send(data) {\r\n        this.resetKeepAlive();\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    }\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    }\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    resetKeepAlive() {\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(() => {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (this.mySock) {\r\n                this.sendString_('0');\r\n            }\r\n            this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    }\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    sendString_(str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Number of response before we consider the connection \"healthy.\"\r\n */\r\nWebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n/**\r\n * Time to wait for the connection te become healthy before giving up.\r\n */\r\nWebSocketConnection.healthyTimeout = 30000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nclass TransportManager {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    constructor(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    static get ALL_TRANSPORTS() {\r\n        return [BrowserPollConnection, WebSocketConnection];\r\n    }\r\n    /**\r\n     * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\r\n     * TransportManager has already set up transports_\r\n     */\r\n    static get IS_TRANSPORT_INITIALIZED() {\r\n        return this.globalTransportInitialized_;\r\n    }\r\n    initTransports_(repoInfo) {\r\n        const isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        let isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            const transports = (this.transports_ = []);\r\n            for (const transport of TransportManager.ALL_TRANSPORTS) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports.push(transport);\r\n                }\r\n            }\r\n            TransportManager.globalTransportInitialized_ = true;\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    initialTransport() {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    upgradeTransport() {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n// Keeps track of whether the TransportManager has already chosen a transport to use\r\nTransportManager.globalTransportInitialized_ = false;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nconst UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nconst MESSAGE_TYPE = 't';\r\nconst MESSAGE_DATA = 'd';\r\nconst CONTROL_SHUTDOWN = 's';\r\nconst CONTROL_RESET = 'r';\r\nconst CONTROL_ERROR = 'e';\r\nconst CONTROL_PONG = 'o';\r\nconst SWITCH_ACK = 'a';\r\nconst END_TRANSMISSION = 'n';\r\nconst PING = 'p';\r\nconst SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nclass Connection {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    constructor(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* RealtimeState.CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    start_() {\r\n        const conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessageReceived = this.connReceiver_(this.conn_);\r\n        const onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(() => {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        const healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(() => {\r\n                this.healthyTimeout_ = null;\r\n                if (!this.isHealthy_) {\r\n                    if (this.conn_ &&\r\n                        this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        this.isHealthy_ = true;\r\n                        this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (this.conn_ &&\r\n                        this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        this.log_('Closing unhealthy connection after timeout.');\r\n                        this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    }\r\n    nextTransportId_() {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    }\r\n    disconnReceiver_(conn) {\r\n        return everConnected => {\r\n            if (conn === this.conn_) {\r\n                this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === this.secondaryConn_) {\r\n                this.log_('Secondary connection lost.');\r\n                this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                this.log_('closing an old connection');\r\n            }\r\n        };\r\n    }\r\n    connReceiver_(conn) {\r\n        return (message) => {\r\n            if (this.state_ !== 2 /* RealtimeState.DISCONNECTED */) {\r\n                if (conn === this.rx_) {\r\n                    this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === this.secondaryConn_) {\r\n                    this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    sendRequest(dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        const msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    }\r\n    tryCleanupConnection() {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    }\r\n    onSecondaryControl_(controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            const cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    }\r\n    onSecondaryMessageReceived_(parsedData) {\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    }\r\n    upgradeIfSecondaryHealthy_() {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    proceedWithUpgrade_() {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    }\r\n    onPrimaryMessageReceived_(parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    }\r\n    onPrimaryResponse_() {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    }\r\n    onControl_(controlData) {\r\n        const cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            const payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                const handshakePayload = Object.assign({}, payload);\r\n                if (this.repoInfo_.isUsingEmulator) {\r\n                    // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\r\n                    handshakePayload.h = this.repoInfo_.host;\r\n                }\r\n                this.onHandshake_(handshakePayload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (let i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    onHandshake_(handshake) {\r\n        const timestamp = handshake.ts;\r\n        const version = handshake.v;\r\n        const host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* RealtimeState.CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    }\r\n    tryStartUpgrade_() {\r\n        const conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    }\r\n    startUpgrade_(conn) {\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessage = this.connReceiver_(this.secondaryConn_);\r\n        const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(() => {\r\n            if (this.secondaryConn_) {\r\n                this.log_('Timed out trying to upgrade.');\r\n                this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    }\r\n    onReset_(host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    }\r\n    onConnectionEstablished_(conn, timestamp) {\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* RealtimeState.CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(() => {\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    }\r\n    sendPingOnPrimaryIfNecessary_() {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    onSecondaryConnectionLost_() {\r\n        const conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    }\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    onConnectionLost_(everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* RealtimeState.CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    }\r\n    onConnectionShutdown_(reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    }\r\n    sendData_(data) {\r\n        if (this.state_ !== 1 /* RealtimeState.CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    }\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    close() {\r\n        if (this.state_ !== 2 /* RealtimeState.DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* RealtimeState.DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    closeConnections_() {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nclass ServerActions {\r\n    put(pathString, data, onComplete, hash) { }\r\n    merge(pathString, data, onComplete, hash) { }\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    refreshAuthToken(token) { }\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    refreshAppCheckToken(token) { }\r\n    onDisconnectPut(pathString, data, onComplete) { }\r\n    onDisconnectMerge(pathString, data, onComplete) { }\r\n    onDisconnectCancel(pathString, onComplete) { }\r\n    reportStats(stats) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nclass EventEmitter {\r\n    constructor(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    trigger(eventType, ...varArgs) {\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            const listeners = [...this.listeners_[eventType]];\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    }\r\n    on(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback, context });\r\n        const eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    }\r\n    off(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        const listeners = this.listeners_[eventType] || [];\r\n        for (let i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    validateEventType_(eventType) {\r\n        assert(this.allowedEvents_.find(et => {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nclass OnlineMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['online']);\r\n        this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', () => {\r\n                if (!this.online_) {\r\n                    this.online_ = true;\r\n                    this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', () => {\r\n                if (this.online_) {\r\n                    this.online_ = false;\r\n                    this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new OnlineMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    }\r\n    currentlyOnline() {\r\n        return this.online_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nconst MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nconst MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nclass Path {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    constructor(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            let copyTo = 0;\r\n            for (let i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    toString() {\r\n        let pathString = '';\r\n        for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    }\r\n}\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    let pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    let pathString = '';\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin = 0) {\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        const childPieces = childPathObj.split('/');\r\n        for (let i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    const outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    const leftKeys = pathSlice(left, 0);\r\n    const rightKeys = pathSlice(right, 0);\r\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        const cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (let i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent of (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    let i = path.pieceNum_;\r\n    let j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nclass ValidationPath {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    constructor(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (let i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n}\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    const last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass VisibilityMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['visible']);\r\n        let hidden;\r\n        let visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, () => {\r\n                const visible = !document[hidden];\r\n                if (visible !== this.visible_) {\r\n                    this.visible_ = visible;\r\n                    this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new VisibilityMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECONNECT_MIN_DELAY = 1000;\r\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nconst INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nclass PersistentConnection extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.onConnectStatus_ = onConnectStatus_;\r\n        this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        this.log_ = logWrapper('p:' + this.id + ':');\r\n        this.interruptReasons_ = {};\r\n        this.listens = new Map();\r\n        this.outstandingPuts_ = [];\r\n        this.outstandingGets_ = [];\r\n        this.outstandingPutCount_ = 0;\r\n        this.outstandingGetCount_ = 0;\r\n        this.onDisconnectRequestQueue_ = [];\r\n        this.connected_ = false;\r\n        this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        this.securityDebugCallback_ = null;\r\n        this.lastSessionId = null;\r\n        this.establishConnectionTimer_ = null;\r\n        this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        this.requestCBHash_ = {};\r\n        this.requestNumber_ = 0;\r\n        this.realtime_ = null;\r\n        this.authToken_ = null;\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = false;\r\n        this.invalidAuthTokenCount_ = 0;\r\n        this.invalidAppCheckTokenCount_ = 0;\r\n        this.firstConnection_ = true;\r\n        this.lastConnectionAttemptTime_ = null;\r\n        this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', this.onOnline_, this);\r\n        }\r\n    }\r\n    sendRequest(action, body, onResponse) {\r\n        const curReqNum = ++this.requestNumber_;\r\n        const msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    }\r\n    get(query) {\r\n        this.initConnection_();\r\n        const deferred = new Deferred();\r\n        const request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        const outstandingGet = {\r\n            action: 'g',\r\n            request,\r\n            onComplete: (message) => {\r\n                const payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        const index = this.outstandingGets_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    }\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        const queryId = query._queryIdentifier;\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), `listen() called twice for same path/queryId.`);\r\n        const listenSpec = {\r\n            onComplete,\r\n            hashFn: currentHashFn,\r\n            query,\r\n            tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    }\r\n    sendGet_(index) {\r\n        const get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, (message) => {\r\n            delete this.outstandingGets_[index];\r\n            this.outstandingGetCount_--;\r\n            if (this.outstandingGetCount_ === 0) {\r\n                this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    }\r\n    sendListen_(listenSpec) {\r\n        const query = listenSpec.query;\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, (message) => {\r\n            const payload = message[ /*data*/'d'];\r\n            const status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            const currentListenSpec = this.listens.get(pathString) &&\r\n                this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static warnOnListenWarnings_(payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                const indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                const indexPath = query._path.toString();\r\n                warn(`Using an unspecified index. Your data will be downloaded and ` +\r\n                    `filtered on the client. Consider adding ${indexSpec} at ` +\r\n                    `${indexPath} to your security rules for better performance.`);\r\n            }\r\n        }\r\n    }\r\n    refreshAuthToken(token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, () => { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    }\r\n    reduceReconnectDelayIfAdminCredential_(credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        const isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    }\r\n    refreshAppCheckToken(token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, () => { });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    tryAuth() {\r\n        if (this.connected_ && this.authToken_) {\r\n            const token = this.authToken_;\r\n            const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\r\n            const requestData = { cred: token };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (this.authToken_ === token) {\r\n                    if (status === 'ok') {\r\n                        this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    tryAppCheck() {\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    unlisten(query, tag) {\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    }\r\n    sendUnlisten_(pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    }\r\n    onDisconnectPut(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'o',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectMerge(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'om',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectCancel(pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    sendOnDisconnect_(action, pathString, data, onComplete) {\r\n        const request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, (response) => {\r\n            if (onComplete) {\r\n                setTimeout(() => {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    }\r\n    put(pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    }\r\n    merge(pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    }\r\n    putInternal(action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        const request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action,\r\n            request,\r\n            onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        const index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    }\r\n    sendPut_(index) {\r\n        const action = this.outstandingPuts_[index].action;\r\n        const request = this.outstandingPuts_[index].request;\r\n        const onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, (message) => {\r\n            this.log_(action + ' response', message);\r\n            delete this.outstandingPuts_[index];\r\n            this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (this.outstandingPutCount_ === 0) {\r\n                this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    }\r\n    reportStats(stats) {\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            const request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, result => {\r\n                const status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    const errorReason = result[ /* data */'d'];\r\n                    this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            const reqNum = message['r'];\r\n            const onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    }\r\n    onDataPush_(action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    }\r\n    onReady_(timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    }\r\n    scheduleConnect_(timeout) {\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(() => {\r\n            this.establishConnectionTimer_ = null;\r\n            this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    }\r\n    initConnection_() {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    }\r\n    onVisible_(visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    }\r\n    onOnline_(online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    }\r\n    onRealtimeDisconnect_() {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                const timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            const timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            let reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    }\r\n    async establishConnection_() {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            const onDataMessage = this.onDataMessage_.bind(this);\r\n            const onReady = this.onReady_.bind(this);\r\n            const onDisconnect = this.onRealtimeDisconnect_.bind(this);\r\n            const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            const lastSessionId = this.lastSessionId;\r\n            let canceled = false;\r\n            let connection = null;\r\n            const closeFn = function () {\r\n                if (connection) {\r\n                    connection.close();\r\n                }\r\n                else {\r\n                    canceled = true;\r\n                    onDisconnect();\r\n                }\r\n            };\r\n            const sendRequestFn = function (msg) {\r\n                assert(connection, \"sendRequest call when we're not connected not allowed.\");\r\n                connection.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            const forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            try {\r\n                // First fetch auth and app check token, and establish connection after\r\n                // fetching the token was successful\r\n                const [authToken, appCheckToken] = await Promise.all([\r\n                    this.authTokenProvider_.getToken(forceRefresh),\r\n                    this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                ]);\r\n                if (!canceled) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    this.authToken_ = authToken && authToken.accessToken;\r\n                    this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                    connection = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect, \r\n                    /* onKill= */ reason => {\r\n                        warn(reason + ' (' + this.repoInfo_.toString() + ')');\r\n                        this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.log_('Failed to get token: ' + error);\r\n                if (!canceled) {\r\n                    if (this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    interrupt(reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    }\r\n    resume(reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    }\r\n    handleTimestamp_(timestamp) {\r\n        const delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    }\r\n    cancelSentTransactions_() {\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            const put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    }\r\n    onListenRevoked_(pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        let queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\r\n        }\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    }\r\n    removeListen_(pathString, queryId) {\r\n        const normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        let listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            const map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    }\r\n    onAuthRevoked_(statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onAppCheckRevoked_(statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onSecurityDebugPacket_(body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    }\r\n    restoreState_() {\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        for (const queries of this.listens.values()) {\r\n            for (const listenSpec of queries.values()) {\r\n                this.sendListen_(listenSpec);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            const request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (let i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    sendConnectStats_() {\r\n        const stats = {};\r\n        let clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    }\r\n    shouldReconnect_() {\r\n        const online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    }\r\n}\r\nPersistentConnection.nextPersistentConnectionId_ = 0;\r\n/**\r\n * Counter for number of connections created. Mainly used for tagging in the logs\r\n */\r\nPersistentConnection.nextConnectionId_ = 0;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass NamedNode {\r\n    constructor(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    static Wrap(name, node) {\r\n        return new NamedNode(name, node);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Index {\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    getCompare() {\r\n        return this.compare.bind(this);\r\n    }\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    indexedValueChanged(oldNode, newNode) {\r\n        const oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        const newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    }\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __EMPTY_NODE;\r\nclass KeyIndex extends Index {\r\n    static get __EMPTY_NODE() {\r\n        return __EMPTY_NODE;\r\n    }\r\n    static set __EMPTY_NODE(val) {\r\n        __EMPTY_NODE = val;\r\n    }\r\n    compare(a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    }\r\n    isDefinedOn(node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    }\r\n    makePost(indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.key';\r\n    }\r\n}\r\nconst KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nclass SortedMapIterator {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    constructor(node, startKey, comparator, isReverse_, resultGenerator_ = null) {\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        let cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getNext() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        let node = this.nodeStack_.pop();\r\n        let result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    hasNext() {\r\n        return this.nodeStack_.length > 0;\r\n    }\r\n    peek() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        const node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nclass LLRBNode {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    constructor(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return this.left.count() + 1 + this.right.count();\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    }\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    min_() {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    minKey() {\r\n        return this.min_().key;\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    maxKey() {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    }\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        let n = this;\r\n        const cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    removeMin_() {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        let n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        let n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    isRed_() {\r\n        return this.color;\r\n    }\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    fixUp_() {\r\n        let n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    moveRedLeft_() {\r\n        let n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    moveRedRight_() {\r\n        let n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    rotateLeft_() {\r\n        const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    rotateRight_() {\r\n        const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    }\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    colorFlip_() {\r\n        const left = this.left.copy(null, null, !this.left.color, null, null);\r\n        const right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    }\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    checkMaxDepth_() {\r\n        const blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    }\r\n    check_() {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        const blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    }\r\n}\r\nLLRBNode.RED = true;\r\nLLRBNode.BLACK = false;\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nclass LLRBEmptyNode {\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        return this;\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    inorderTraversal(action) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return false;\r\n    }\r\n    minKey() {\r\n        return null;\r\n    }\r\n    maxKey() {\r\n        return null;\r\n    }\r\n    check_() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    isRed_() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nclass SortedMap {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    constructor(comparator_, root_ = SortedMap.EMPTY_NODE) {\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    insert(key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    remove(key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    get(key) {\r\n        let cmp;\r\n        let node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    getPredecessorKey(key) {\r\n        let cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    }\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    isEmpty() {\r\n        return this.root_.isEmpty();\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    count() {\r\n        return this.root_.count();\r\n    }\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    minKey() {\r\n        return this.root_.minKey();\r\n    }\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    maxKey() {\r\n        return this.root_.maxKey();\r\n    }\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return this.root_.inorderTraversal(action);\r\n    }\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return this.root_.reverseTraversal(action);\r\n    }\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    getIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    }\r\n    getIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    }\r\n    getReverseIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    }\r\n    getReverseIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    }\r\n}\r\n/**\r\n * Always use the same empty node, to reduce memory.\r\n */\r\nSortedMap.EMPTY_NODE = new LLRBEmptyNode();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nconst priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nconst validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        const val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nclass LeafNode {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    constructor(value_, priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    static set __childrenNodeConstructor(val) {\r\n        __childrenNodeConstructor = val;\r\n    }\r\n    static get __childrenNodeConstructor() {\r\n        return __childrenNodeConstructor;\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return true;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    hasChild() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode) {\r\n        return null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return 0;\r\n    }\r\n    /** @inheritDoc */\r\n    forEachChild(index, action) {\r\n        return false;\r\n    }\r\n    val(exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            const type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    getValue() {\r\n        return this.value_;\r\n    }\r\n    compareTo(other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    }\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    compareToLeafNode_(otherLeaf) {\r\n        const otherLeafType = typeof otherLeaf.value_;\r\n        const thisLeafType = typeof this.value_;\r\n        const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    }\r\n    withIndex() {\r\n        return this;\r\n    }\r\n    isIndexed() {\r\n        return true;\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            const otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n/**\r\n * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n * the same type, the comparison falls back to their value\r\n */\r\nLeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet nodeFromJSON$1;\r\nlet MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nclass PriorityIndex extends Index {\r\n    compare(a, b) {\r\n        const aPriority = a.node.getPriority();\r\n        const bPriority = b.node.getPriority();\r\n        const indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getPriority().isEmpty();\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    }\r\n    makePost(indexValue, name) {\r\n        const priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.priority';\r\n    }\r\n}\r\nconst PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst LOG_2 = Math.log(2);\r\nclass Base12Num {\r\n    constructor(length) {\r\n        const logBase2 = (num) => \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parseInt((Math.log(num) / LOG_2), 10);\r\n        const bitMask = (bits) => parseInt(Array(bits + 1).join('1'), 2);\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        const mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    nextBitIsOne() {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        const result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nconst buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    const buildBalancedTree = function (low, high) {\r\n        const length = high - low;\r\n        let namedNode;\r\n        let key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const middle = parseInt((length / 2), 10) + low;\r\n            const left = buildBalancedTree(low, middle);\r\n            const right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    const buildFrom12Array = function (base12) {\r\n        let node = null;\r\n        let root = null;\r\n        let index = childList.length;\r\n        const buildPennant = function (chunkSize, color) {\r\n            const low = index - chunkSize;\r\n            const high = index;\r\n            index -= chunkSize;\r\n            const childTree = buildBalancedTree(low + 1, high);\r\n            const namedNode = childList[low];\r\n            const key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        const attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (let i = 0; i < base12.count; ++i) {\r\n            const isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            const chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    const base12 = new Base12Num(childList.length);\r\n    const root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet _defaultIndexMap;\r\nconst fallbackObject = {};\r\nclass IndexMap {\r\n    constructor(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\r\n    static get Default() {\r\n        assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n        _defaultIndexMap =\r\n            _defaultIndexMap ||\r\n                new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n        return _defaultIndexMap;\r\n    }\r\n    get(indexKey) {\r\n        const sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    }\r\n    hasIndex(indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    }\r\n    addIndex(indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        const childList = [];\r\n        let sawIndexedValue = false;\r\n        const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        let next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        let newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        const indexName = indexDefinition.toString();\r\n        const newIndexSet = Object.assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        const newIndexes = Object.assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    }\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    addToIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren, indexName) => {\r\n            const index = safeGet(this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    const childList = [];\r\n                    const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    let next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                let newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    removeFromIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren) => {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nlet EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nclass ChildrenNode {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    constructor(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    static get EMPTY_NODE() {\r\n        return (EMPTY_NODE ||\r\n            (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            const child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    }\r\n    /** @inheritDoc */\r\n    hasChild(childName) {\r\n        return this.children_.get(childName) !== null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            const namedNode = new NamedNode(childName, newChildNode);\r\n            let newChildren, newIndexMap;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            const newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            const newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return this.children_.isEmpty();\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return this.children_.count();\r\n    }\r\n    /** @inheritDoc */\r\n    val(exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        const obj = {};\r\n        let numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            const array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                const childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode, index) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            const predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    }\r\n    getFirstChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    }\r\n    getFirstChild(indexDefinition) {\r\n        const minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    getLastChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    }\r\n    getLastChild(indexDefinition) {\r\n        const maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    forEachChild(index, action) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(wrappedNode => {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    }\r\n    getIterator(indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    }\r\n    getIteratorFrom(startPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, key => key);\r\n        }\r\n        else {\r\n            const iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    getReverseIterator(indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    }\r\n    getReverseIteratorFrom(endPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, key => {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            const iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    compareTo(other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    }\r\n    withIndex(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    }\r\n    isIndexed(index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            const otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                const thisIter = this.getIterator(PRIORITY_INDEX);\r\n                const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                let thisCurrent = thisIter.getNext();\r\n                let otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    resolveIndex_(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    }\r\n}\r\nChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\nclass MaxNode extends ChildrenNode {\r\n    constructor() {\r\n        super(new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default);\r\n    }\r\n    compareTo(other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    equals(other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    }\r\n    getPriority() {\r\n        return this;\r\n    }\r\n    getImmediateChild(childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nconst MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority = null) {\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        const jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        const children = [];\r\n        let childrenHavePriority = false;\r\n        const hinzeJsonObj = json;\r\n        each(hinzeJsonObj, (key, child) => {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                const childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority =\r\n                        childrenHavePriority || !childNode.getPriority().isEmpty();\r\n                    children.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        const childSet = buildChildSet(children, NAME_ONLY_COMPARATOR, namedNode => namedNode.name, NAME_COMPARATOR);\r\n        if (childrenHavePriority) {\r\n            const sortedChildSet = buildChildSet(children, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        let node = ChildrenNode.EMPTY_NODE;\r\n        each(json, (key, childData) => {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    const childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node = node.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PathIndex extends Index {\r\n    constructor(indexPath_) {\r\n        super();\r\n        this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n    }\r\n    extractChild(snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    }\r\n    compare(a, b) {\r\n        const aChild = this.extractChild(a.node);\r\n        const bChild = this.extractChild(b.node);\r\n        const indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    }\r\n    maxPost() {\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    }\r\n    toString() {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ValueIndex extends Index {\r\n    compare(a, b) {\r\n        const indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return true;\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.value';\r\n    }\r\n}\r\nconst VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* ChangeType.VALUE */, snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* ChangeType.CHILD_ADDED */, snapshotNode, childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* ChangeType.CHILD_REMOVED */, snapshotNode, childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* ChangeType.CHILD_CHANGED */,\r\n        snapshotNode,\r\n        childName,\r\n        oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* ChangeType.CHILD_MOVED */, snapshotNode, childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nclass IndexedFilter {\r\n    constructor(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        const oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        const oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    }\r\n    filtersNodes() {\r\n        return false;\r\n    }\r\n    getIndexedFilter() {\r\n        return this;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nclass RangedFilter {\r\n    constructor(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n        this.startIsInclusive_ = !params.startAfterSet_;\r\n        this.endIsInclusive_ = !params.endBeforeSet_;\r\n    }\r\n    getStartPost() {\r\n        return this.startPost_;\r\n    }\r\n    getEndPost() {\r\n        return this.endPost_;\r\n    }\r\n    matches(node) {\r\n        const isWithinStart = this.startIsInclusive_\r\n            ? this.index_.compare(this.getStartPost(), node) <= 0\r\n            : this.index_.compare(this.getStartPost(), node) < 0;\r\n        const isWithinEnd = this.endIsInclusive_\r\n            ? this.index_.compare(node, this.getEndPost()) <= 0\r\n            : this.index_.compare(node, this.getEndPost()) < 0;\r\n        return isWithinStart && isWithinEnd;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        let filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        const self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.indexedFilter_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    static getStartPost_(params) {\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    }\r\n    static getEndPost_(params) {\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nclass LimitedFilter {\r\n    constructor(params) {\r\n        this.withinDirectionalStart = (node) => this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\r\n        this.withinDirectionalEnd = (node) => this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\r\n        this.withinStartPost = (node) => {\r\n            const compareRes = this.index_.compare(this.rangedFilter_.getStartPost(), node);\r\n            return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\r\n        };\r\n        this.withinEndPost = (node) => {\r\n            const compareRes = this.index_.compare(node, this.rangedFilter_.getEndPost());\r\n            return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\r\n        };\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n        this.startIsInclusive_ = !params.startAfterSet_;\r\n        this.endIsInclusive_ = !params.endBeforeSet_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        let filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    const next = iterator.getNext();\r\n                    if (!this.withinDirectionalStart(next)) {\r\n                        // if we have not reached the start, skip to the next element\r\n                        continue;\r\n                    }\r\n                    else if (!this.withinDirectionalEnd(next)) {\r\n                        // if we have reached the end, stop adding elements\r\n                        break;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext()) {\r\n                    const next = iterator.getNext();\r\n                    const inRange = count < this.limit_ &&\r\n                        this.withinDirectionalStart(next) &&\r\n                        this.withinDirectionalEnd(next);\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    fullLimitUpdateChild_(snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        let cmp;\r\n        if (this.reverse_) {\r\n            const indexCmp = this.index_.getCompare();\r\n            cmp = (a, b) => indexCmp(b, a);\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        const oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        const newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        const windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        const inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            const oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            let nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            const compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            const remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                const newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                const nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n *\r\n * @internal\r\n */\r\nclass QueryParams {\r\n    constructor() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false; // can only be true if startSet_ is true\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false; // can only be true if endSet_ is true\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    hasStart() {\r\n        return this.startSet_;\r\n    }\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    isViewFromLeft() {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n        }\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    getIndexStartValue() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    getIndexStartName() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    }\r\n    hasEnd() {\r\n        return this.endSet_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    getIndexEndValue() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    getIndexEndName() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    }\r\n    hasLimit() {\r\n        return this.limitSet_;\r\n    }\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    hasAnchoredLimit() {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    }\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    getLimit() {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    loadsAllData() {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    }\r\n    isDefault() {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    }\r\n    copy() {\r\n        const copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.startAfterSet_ = this.startAfterSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.endBeforeSet_ = this.endBeforeSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    }\r\n}\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX || !!key) {\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX || !!key) {\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    const newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    const qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    let orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* REST_QUERY_CONSTANTS.PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* REST_QUERY_CONSTANTS.VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* REST_QUERY_CONSTANTS.KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* REST_QUERY_CONSTANTS.ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        const startParam = queryParams.startAfterSet_\r\n            ? \"startAfter\" /* REST_QUERY_CONSTANTS.START_AFTER */\r\n            : \"startAt\" /* REST_QUERY_CONSTANTS.START_AT */;\r\n        qs[startParam] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[startParam] += ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        const endParam = queryParams.endBeforeSet_\r\n            ? \"endBefore\" /* REST_QUERY_CONSTANTS.END_BEFORE */\r\n            : \"endAt\" /* REST_QUERY_CONSTANTS.END_AT */;\r\n        qs[endParam] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[endParam] += ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* REST_QUERY_CONSTANTS.LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* REST_QUERY_CONSTANTS.LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    const obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n        obj[\"sin\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE */] =\r\n            !queryParams.startAfterSet_;\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n        obj[\"ein\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE */] =\r\n            !queryParams.endBeforeSet_;\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* WIRE_PROTOCOL_CONSTANTS.LIMIT */] = queryParams.limit_;\r\n        let viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* WIRE_PROTOCOL_CONSTANTS.INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nclass ReadonlyRestClient extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        this.listens_ = {};\r\n    }\r\n    reportStats(stats) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    static getListenId_(query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        const thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(this.listens_, listenId) === thisListen) {\r\n                let status;\r\n                if (!error) {\r\n                    status = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status = 'permission_denied';\r\n                }\r\n                else {\r\n                    status = 'rest_error:' + error;\r\n                }\r\n                onComplete(status, null);\r\n            }\r\n        });\r\n    }\r\n    /** @inheritDoc */\r\n    unlisten(query, tag) {\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    }\r\n    get(query) {\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        const pathString = query._path.toString();\r\n        const deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n    /** @inheritDoc */\r\n    refreshAuthToken(token) {\r\n        // no-op since we just always call getToken.\r\n    }\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    restRequest_(pathString, queryStringParameters = {}, callback) {\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            const url = (this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            this.log_('Sending REST request for ' + url);\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (callback && xhr.readyState === 4) {\r\n                    this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    let res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nclass SnapshotHolder {\r\n    constructor() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    getNode(path) {\r\n        return this.rootNode_.getChild(path);\r\n    }\r\n    updateSnapshot(path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        const child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                const value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, (key, tree) => {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            const childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                const safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\r\n            const path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach((tree, key) => {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nclass StatsListener {\r\n    constructor(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    get() {\r\n        const newStats = this.collection_.get();\r\n        const delta = Object.assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, (stat, value) => {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\r\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nclass StatsReporter {\r\n    constructor(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        const timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    reportStats_() {\r\n        const stats = this.statsListener_.get();\r\n        const reportedStats = {};\r\n        let haveStatsToReport = false;\r\n        each(stats, (stat, value) => {\r\n            if (value > 0 && contains(this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AckUserWrite {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    constructor(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    operationForChild(childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            const childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ListenComplete {\r\n    constructor(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Overwrite {\r\n    constructor(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Merge {\r\n    constructor(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            const childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    }\r\n    toString() {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nclass CacheNode {\r\n    constructor(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    isFullyInitialized() {\r\n        return this.fullyInitialized_;\r\n    }\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    isFiltered() {\r\n        return this.filtered_;\r\n    }\r\n    isCompleteForPath(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        const childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    }\r\n    isCompleteForChild(key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    }\r\n    getNode() {\r\n        return this.node_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nclass EventGenerator {\r\n    constructor(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n}\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    const events = [];\r\n    const moves = [];\r\n    changes.forEach(change => {\r\n        if (change.type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* ChangeType.CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* ChangeType.CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* ChangeType.CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* ChangeType.CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* ChangeType.VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    const filteredChanges = changes.filter(change => change.type === eventType);\r\n    filteredChanges.sort((a, b) => eventGeneratorCompareChanges(eventGenerator, a, b));\r\n    filteredChanges.forEach(change => {\r\n        const materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(registration => {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    const aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    const bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache, serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nconst EmptyChildren = () => {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nclass ImmutableTree {\r\n    constructor(value, children = EmptyChildren()) {\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    static fromObject(obj) {\r\n        let tree = new ImmutableTree(null);\r\n        each(obj, (childPath, childSnap) => {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    }\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    isEmpty() {\r\n        return this.value === null && this.children.isEmpty();\r\n    }\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    findRootMostMatchingPathAndValue(relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(relativePath);\r\n                const child = this.children.get(front);\r\n                if (child !== null) {\r\n                    const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        const fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    findRootMostValueAndPath(relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, () => true);\r\n    }\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    subtree(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    set(relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.set(pathPopFront(relativePath), toSet);\r\n            const newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    remove(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                const newChild = child.remove(pathPopFront(relativePath));\r\n                let newChildren;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    get(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    setTree(relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            let newChildren;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    fold(fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    }\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    fold_(pathSoFar, fn) {\r\n        const accum = {};\r\n        this.children.inorderTraversal((childKey, childTree) => {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    }\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    findOnPath(path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    findOnPath_(pathToFollow, pathSoFar, f) {\r\n        const result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(pathToFollow);\r\n                const nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    foreachOnPath(path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    foreachOnPath_(pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            const front = pathGetFront(pathToFollow);\r\n            const nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    foreach(f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    }\r\n    foreach_(currentRelativePath, f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    }\r\n    foreachChild(f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nclass CompoundWrite {\r\n    constructor(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    static empty() {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    }\r\n}\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            const rootMostPath = rootmost.path;\r\n            let value = rootmost.value;\r\n            const relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            const subtree = new ImmutableTree(node);\r\n            const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    let newWrite = compoundWrite;\r\n    each(updates, (childKey, node) => {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        const newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    const children = [];\r\n    const node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        let priorityWrite = null;\r\n        writeTree.children.inorderTraversal((childKey, childTree) => {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path,\r\n        snap,\r\n        writeId,\r\n        visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path,\r\n        children: changedChildren,\r\n        writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (let i = 0; i < writeTree.allWrites.length; i++) {\r\n        const record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    const idx = writeTree.allWrites.findIndex(s => {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    const writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    let removedWriteWasVisible = writeToRemove.visible;\r\n    let removedWriteOverlapsWithOtherWrites = false;\r\n    let i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        const currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            const children = writeToRemove.children;\r\n            each(children, (childName) => {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (const childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    let compoundWrite = CompoundWrite.empty();\r\n    for (let i = 0; i < writes.length; ++i) {\r\n        const write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            const writePath = write.path;\r\n            let relativePath;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        const child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            const deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            const subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                const filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                const mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    let completeChildren = ChildrenNode.EMPTY_NODE;\r\n    const topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const node = compoundWriteApply(compoundWriteChildCompoundWrite(merge, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    const path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    const path = pathChild(treePath, childKey);\r\n    const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    let toIterate;\r\n    const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        const nodes = [];\r\n        const cmp = index.getCompare();\r\n        const iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        let next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ChildChangeAccumulator {\r\n    constructor() {\r\n        this.changeMap = new Map();\r\n    }\r\n    trackChildChange(change) {\r\n        const type = change.type;\r\n        const childKey = change.childName;\r\n        assert(type === \"child_added\" /* ChangeType.CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* ChangeType.CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        const oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            const oldType = oldChange.type;\r\n            if (type === \"child_added\" /* ChangeType.CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* ChangeType.CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* ChangeType.CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* ChangeType.CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* ChangeType.CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* ChangeType.CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* ChangeType.CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* ChangeType.CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changeMap.values());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nclass NoCompleteChildSource_ {\r\n    getCompleteChild(childKey) {\r\n        return null;\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Singleton instance.\r\n */\r\nconst NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nclass WriteTreeCompleteChildSource {\r\n    constructor(writes_, viewCache_, optCompleteServerCache_ = null) {\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    getCompleteChild(childKey) {\r\n        const node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            const serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        const completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        const nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    const accumulator = new ChildChangeAccumulator();\r\n    let newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        const overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        const merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        const ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    const changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    const eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        const isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    const oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        let newEventCache, serverNode;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                const serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                const completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                const completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                const completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                const oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                const childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                let newEventChild;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    const eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    const oldServerSnap = oldViewCache.serverCache;\r\n    let newServerCache;\r\n    const serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        const newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        const childChangePath = pathPopFront(changePath);\r\n        const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        const newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    const newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    const source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    const oldEventSnap = oldViewCache.eventCache;\r\n    let newViewCache, newEventCache;\r\n    const source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            const childChangePath = pathPopFront(changePath);\r\n            const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            let newChild;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                const childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                const newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach((relativePath, childNode) => {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    let viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    const serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\r\n        if (serverNode.hasChild(childKey)) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\r\n        const isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === null;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    const filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    const serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            let changedChildren = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\r\n                changedChildren = changedChildren.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        let changedChildren = new ImmutableTree(null);\r\n        affectedTree.foreach((mergePath, value) => {\r\n            const serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren = changedChildren.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    const oldServerNode = viewCache.serverCache;\r\n    const newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    let complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        const source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        const oldEventCache = viewCache.eventCache.getNode();\r\n        let newEventCache;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            let newNode;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                const serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(path);\r\n            let newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nclass View {\r\n    constructor(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        const params = this.query_._queryParams;\r\n        const indexFilter = new IndexedFilter(params.getIndex());\r\n        const filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        const initialServerCache = initialViewCache.serverCache;\r\n        const initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        const serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        const eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        const newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        const newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    get query() {\r\n        return this.query_;\r\n    }\r\n}\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    const cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        const path = view.query._path;\r\n        view.eventRegistrations_.forEach(registration => {\r\n            const maybeEvent = registration.createCancelEvent(cancelError, path);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        let remaining = [];\r\n        for (let i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            const existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    const oldViewCache = view.viewCache_;\r\n    const result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    const eventSnap = view.viewCache_.eventCache;\r\n    const initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        const eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    const registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nclass SyncPoint {\r\n    constructor() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n}\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    const queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        const view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        let events = [];\r\n        for (const view of syncPoint.views.values()) {\r\n            events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    const queryId = query._queryIdentifier;\r\n    const view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        let eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        let eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        const viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    const queryId = query._queryIdentifier;\r\n    const removed = [];\r\n    let cancelEvents = [];\r\n    const hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        // When you do ref.off(...), we search all views for the registration to remove.\r\n        for (const [viewQueryId, view] of syncPoint.views.entries()) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(viewQueryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        const view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    const result = [];\r\n    for (const view of syncPoint.views.values()) {\r\n        if (!view.query._queryParams.loadsAllData()) {\r\n            result.push(view);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    let serverCache = null;\r\n    for (const view of syncPoint.views.values()) {\r\n        serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    const params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        const queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    for (const view of syncPoint.views.values()) {\r\n        if (view.query._queryParams.loadsAllData()) {\r\n            return view;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nlet syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nclass SyncTree {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    constructor(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n}\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert = false) {\r\n    const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    const needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        let affectedTree = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree = affectedTree.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, (pathString) => {\r\n                affectedTree = affectedTree.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\r\n *  deduping needs to take place. This flag allows toggling of that behavior\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError, skipListenerDedup = false) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    const path = query._path;\r\n    const maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    let cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        const removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        const removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        if (!skipListenerDedup) {\r\n            /**\r\n             * We may have just removed one of many listeners and can short-circuit this whole process\r\n             * We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n             * properly set up.\r\n             */\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            const removingDefault = -1 !==\r\n                removed.findIndex(query => {\r\n                    return query._queryParams.loadsAllData();\r\n                });\r\n            const covered = syncTree.syncPointTree_.findOnPath(path, (relativePath, parentSyncPoint) => syncPointHasCompleteView(parentSyncPoint));\r\n            if (removingDefault && !covered) {\r\n                const subtree = syncTree.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (let i = 0; i < newViews.length; ++i) {\r\n                        const view = newViews[i], newQuery = view.query;\r\n                        const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                        syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                // Otherwise there's nothing below us, so nothing we need to start listening on\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    const defaultTag = null;\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach((queryToRemove) => {\r\n                        const tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const changeTree = ImmutableTree.fromObject(changedChildren);\r\n        const op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration, skipSetupListener = false) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    let foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        const subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild((childName, childSyncPoint) => {\r\n            const completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        const queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        const tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    let events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\r\n        const view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    const includeHiddenSets = true;\r\n    const writeTree = syncTree.pendingWriteTree_;\r\n    const serverCache = syncTree.syncPointTree_.findOnPath(path, (pathSoFar, syncPoint) => {\r\n        const relativePath = newRelativePath(pathSoFar, path);\r\n        const serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    const serverCacheComplete = serverCache != null;\r\n    const serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        const syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        let events = [];\r\n        const childName = pathGetFront(operation.path);\r\n        const childOperation = operation.operationForChild(childName);\r\n        const childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            const childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    const syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let events = [];\r\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\r\n        const childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        const childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    const query = view.query;\r\n    const tag = syncTreeTagForQuery(syncTree, query);\r\n    return {\r\n        hashFn: () => {\r\n            const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: (status) => {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                const error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery(syncTree, query) {\r\n    const queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    const splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    const syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            let views = [];\r\n            if (maybeChildSyncPoint) {\r\n                views = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, (_key, childViews) => {\r\n                views = views.concat(childViews);\r\n            });\r\n            return views;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (let j = 0; j < queries.length; ++j) {\r\n        const removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    const path = query._path;\r\n    const tag = syncTreeTagForQuery(syncTree, query);\r\n    const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    const events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    const subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        const queriesToStop = subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                let queries = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries = queries.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(view => view.query));\r\n                }\r\n                each(childMap, (_key, childQueries) => {\r\n                    queries = queries.concat(childQueries);\r\n                });\r\n                return queries;\r\n            }\r\n        });\r\n        for (let i = 0; i < queriesToStop.length; ++i) {\r\n            const queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ExistingValueProvider {\r\n    constructor(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    }\r\n    node() {\r\n        return this.node_;\r\n    }\r\n}\r\nclass DeferredValueProvider {\r\n    constructor(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    }\r\n    node() {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    }\r\n}\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nconst generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nconst resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nconst resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nconst resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    const delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    const existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    const leaf = existingNode;\r\n    const existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nconst resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nconst resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    const rawPri = node.getPriority().val();\r\n    const priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    let newNode;\r\n    if (node.isLeafNode()) {\r\n        const leafNode = node;\r\n        const value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        const childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nclass Tree {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    constructor(name = '', parent = null, node = { children: {}, childCount: 0 }) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n}\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    let child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        const childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, (child, childTree) => {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, child => {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    let node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    const childEmpty = treeIsEmpty(child);\r\n    const childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nconst INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nconst INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nconst MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nconst isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nconst isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nconst isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nconst isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nconst validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nconst validateFirebaseData = function (errorPrefix, data, path_) {\r\n    const path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        let hasDotValue = false;\r\n        let hasActualChild = false;\r\n        each(data, (key, value) => {\r\n            if (key === '.value') {\r\n                hasDotValue = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue && hasActualChild) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nconst validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    let i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        const keys = pathSlice(curPath);\r\n        for (let j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    let prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nconst validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    const errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    const mergePaths = [];\r\n    each(data, (key, value) => {\r\n        const curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nconst validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nconst validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nconst validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nconst validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    const pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nclass EventQueue {\r\n    constructor() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n}\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    let currList = null;\r\n    for (let i = 0; i < eventDataList.length; i++) {\r\n        const data = eventDataList[i];\r\n        const path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathEquals(eventPath, path));\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathContains(eventPath, changedPath) ||\r\n        pathContains(changedPath, eventPath));\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    let sentAll = true;\r\n    for (let i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        const eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            const eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (let i = 0; i < eventList.events.length; i++) {\r\n        const eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            const eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nconst MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nclass Repo {\r\n    constructor(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    toString() {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    }\r\n}\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, (connectStatus) => {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, (updates) => {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(token => {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(result => {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, () => new StatsReporter(repo.stats_, repo.server_));\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            let infoEvents = [];\r\n            const node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(() => {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: () => { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            repo.server_.listen(query, currentHashFn, tag, (status, data) => {\r\n                const events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: (query, tag) => {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    const offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    const path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    let events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            const taggedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            const taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        const changedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        const snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    let affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, (key, value) => {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    const path = new Path('/.info/' + pathString);\r\n    const newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    const events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will wait until the\r\n *  repo has established a connection and then request the value for `query`.\r\n * If the client is not able to retrieve the query result for another reason,\r\n * it reports an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query, eventRegistration) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(payload => {\r\n        const node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        /**\r\n         * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\r\n         * Add an event registration,\r\n         * Update data at the path,\r\n         * Raise any events,\r\n         * Cleanup the SyncTree\r\n         */\r\n        syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration, true);\r\n        let events;\r\n        if (query._queryParams.loadsAllData()) {\r\n            events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        }\r\n        else {\r\n            const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, query._path, node, tag);\r\n        }\r\n        /*\r\n         * We need to raise events in the scenario where `get()` is called at a parent path, and\r\n         * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\r\n         * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\r\n         * and its corresponding serverCache, including the child location where `onValue` is called. Then,\r\n         * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\r\n         * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\r\n         * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\r\n         * ensure the corresponding child events will get fired.\r\n         */\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n        syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration, null, true);\r\n        return node;\r\n    }, err => {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    const writeId = repoGetNextWriteId(repo);\r\n    const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), (status, errorReason) => {\r\n        const success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    const affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    let empty = true;\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const changedChildren = {};\r\n    each(childrenToMerge, (changedKey, changedValue) => {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        const writeId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n            const success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n            const affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, (changedPath) => {\r\n            const affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), (path, node) => {\r\n        const resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    let events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), (path, snap) => {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        const affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    const newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    const newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, (childName, childNode) => {\r\n                const newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoLog(repo, ...varArgs) {\r\n    let prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log(prefix, ...varArgs);\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(() => {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                const code = (status || 'error').toUpperCase();\r\n                let message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                const error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    const transaction = {\r\n        path,\r\n        update: transactionUpdate,\r\n        onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    const currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    const newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* TransactionStatus.RUN */;\r\n        const queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        const nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        let priorityForNode;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            const currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        const serverValues = repoGenerateServerValues(repo);\r\n        const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node = repo.transactionQueueTree_) {\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        const queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        const allRun = queue.every((transaction) => transaction.status === 0 /* TransactionStatus.RUN */);\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, childNode => {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    const setsToIgnore = queue.map(txn => {\r\n        return txn.currentWriteId;\r\n    });\r\n    const latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    let snapToSend = latestState;\r\n    const latestHash = latestState.hash();\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const txn = queue[i];\r\n        assert(txn.status === 0 /* TransactionStatus.RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* TransactionStatus.SENT */;\r\n        txn.retryCount++;\r\n        const relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    const dataToSend = snapToSend.val(true);\r\n    const pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, (status) => {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status\r\n        });\r\n        let events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            const callbacks = [];\r\n            for (let i = 0; i < queue.length; i++) {\r\n                queue[i].status = 2 /* TransactionStatus.COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(() => queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (let i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* TransactionStatus.SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* TransactionStatus.NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* TransactionStatus.RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* TransactionStatus.NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    const rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    const path = treeGetPath(rootMostTransactionNode);\r\n    const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    const callbacks = [];\r\n    let events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    const txnsToRerun = queue.filter(q => {\r\n        return q.status === 0 /* TransactionStatus.RUN */;\r\n    });\r\n    const setsToIgnore = txnsToRerun.map(q => {\r\n        return q.currentWriteId;\r\n    });\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const transaction = queue[i];\r\n        const relativePath = newRelativePath(path, transaction.path);\r\n        let abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* TransactionStatus.NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* TransactionStatus.RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                const currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                const newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    let newDataNode = nodeFromJSON(newData);\r\n                    const hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    const oldWriteId = transaction.currentWriteId;\r\n                    const serverValues = repoGenerateServerValues(repo);\r\n                    const newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* TransactionStatus.COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(() => queue[i].onComplete(null, false, queue[i].currentInputSnapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(() => queue[i].onComplete(new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    let front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    let transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    const transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort((a, b) => a.order - b.order);\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    const nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (let i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, child => {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        let to = 0;\r\n        for (let from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* TransactionStatus.COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, childNode => {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        const callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        let events = [];\r\n        let lastSent = -1;\r\n        for (let i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* TransactionStatus.SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* TransactionStatus.SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* TransactionStatus.SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* TransactionStatus.RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    let pathStringDecoded = '';\r\n    const pieces = pathString.split('/');\r\n    for (let i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            let piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    const results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (const segment of queryString.split('&')) {\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        const kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(`Invalid query segment '${segment}' in query '${queryString}'`);\r\n        }\r\n    }\r\n    return results;\r\n}\r\nconst parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    const parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, nodeAdmin, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nconst parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    let host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    let secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        let colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        let slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        let questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        const queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        const hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            const dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host,\r\n        port,\r\n        domain,\r\n        subdomain,\r\n        secure,\r\n        scheme,\r\n        pathString,\r\n        namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nconst PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nconst nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    let lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    const lastRandChars = [];\r\n    return function (now) {\r\n        const duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        let i;\r\n        const timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        let id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nclass DataEvent {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    constructor(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    getPath() {\r\n        const ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    }\r\n    getEventType() {\r\n        return this.eventType;\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    }\r\n}\r\nclass CancelEvent {\r\n    constructor(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    getPath() {\r\n        return this.path;\r\n    }\r\n    getEventType() {\r\n        return 'cancel';\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return this.path.toString() + ':cancel';\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nclass CallbackContext {\r\n    constructor(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    onValue(expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    }\r\n    onCancel(error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    }\r\n    get hasCancelCallback() {\r\n        return !!this.cancelCallback;\r\n    }\r\n    matches(other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nclass OnDisconnect {\r\n    /** @hideconstructor */\r\n    constructor(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    cancel() {\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    remove() {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    set(value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    setWithPriority(value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    update(values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nclass QueryImpl {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    constructor(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    get key() {\r\n        if (pathIsEmpty(this._path)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return pathGetBack(this._path);\r\n        }\r\n    }\r\n    get ref() {\r\n        return new ReferenceImpl(this._repo, this._path);\r\n    }\r\n    get _queryIdentifier() {\r\n        const obj = queryParamsGetQueryObject(this._queryParams);\r\n        const id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    }\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\r\n    get _queryObject() {\r\n        return queryParamsGetQueryObject(this._queryParams);\r\n    }\r\n    isEqual(other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        const sameRepo = this._repo === other._repo;\r\n        const samePath = pathEquals(this._path, other._path);\r\n        const sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    }\r\n    toJSON() {\r\n        return this.toString();\r\n    }\r\n    toString() {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    }\r\n}\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    let startNode = null;\r\n    let endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        const tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        const wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nclass ReferenceImpl extends QueryImpl {\r\n    /** @hideconstructor */\r\n    constructor(repo, path) {\r\n        super(repo, path, new QueryParams(), false);\r\n    }\r\n    get parent() {\r\n        const parentPath = pathParent(this._path);\r\n        return parentPath === null\r\n            ? null\r\n            : new ReferenceImpl(this._repo, parentPath);\r\n    }\r\n    get root() {\r\n        let ref = this;\r\n        while (ref.parent !== null) {\r\n            ref = ref.parent;\r\n        }\r\n        return ref;\r\n    }\r\n}\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nclass DataSnapshot {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    constructor(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\r\n    get priority() {\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this._node.getPriority().val();\r\n    }\r\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\r\n    get key() {\r\n        return this.ref.key;\r\n    }\r\n    /** Returns the number of child properties of this `DataSnapshot`. */\r\n    get size() {\r\n        return this._node.numChildren();\r\n    }\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    child(path) {\r\n        const childPath = new Path(path);\r\n        const childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    }\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    exists() {\r\n        return !this._node.isEmpty();\r\n    }\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    exportVal() {\r\n        return this._node.val(true);\r\n    }\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    forEach(action) {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        const childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, (key, node) => {\r\n            return action(new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    }\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    hasChild(path) {\r\n        const childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    }\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    hasChildren() {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return this.exportVal();\r\n    }\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    val() {\r\n        return this._node.val();\r\n    }\r\n}\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    const repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Returns an `OnDisconnect` object - see\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information on how to use it.\r\n *\r\n * @param ref - The reference to add OnDisconnect triggers for.\r\n */\r\nfunction onDisconnect(ref) {\r\n    ref = getModularInstance(ref);\r\n    return new OnDisconnect(ref._repo, ref._path);\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\r\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    const now = repoServerTime(parent._repo);\r\n    const name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    const thennablePushRef = child(parent, name);\r\n    const pushRef = child(parent, name);\r\n    let promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(() => pushRef);\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    const callbackContext = new CallbackContext(() => { });\r\n    const container = new ValueEventRegistration(callbackContext);\r\n    return repoGetValue(query._repo, query, container).then(node => {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nclass ValueEventRegistration {\r\n    constructor(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        return eventType === 'value';\r\n    }\r\n    createEvent(change, query) {\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, null);\r\n        }\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    }\r\n    hasAnyCallback() {\r\n        return this.callbackContext !== null;\r\n    }\r\n}\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nclass ChildEventRegistration {\r\n    constructor(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        let eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    createEvent(change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        const childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    }\r\n    hasAnyCallback() {\r\n        return !!this.callbackContext;\r\n    }\r\n}\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    let cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        const userCallback = callback;\r\n        const onceCallback = (dataSnapshot, previousChildName) => {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    const callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    const container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\r\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\r\n * the respective `on*` callbacks.\r\n *\r\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    let container = null;\r\n    const expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nclass QueryConstraint {\r\n}\r\nclass QueryEndAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        const newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nclass QueryEndBeforeConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        const newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value less than or equal\r\n * to the specified value and a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nclass QueryStartAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        const newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value = null, key) {\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nclass QueryStartAfterConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        const newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nclass QueryLimitToFirstConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nclass QueryLimitToLastConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nclass QueryOrderByChildConstraint extends QueryConstraint {\r\n    constructor(_path) {\r\n        super();\r\n        this._path = _path;\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        const parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        const index = new PathIndex(parsedPath);\r\n        const newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nclass QueryOrderByKeyConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nclass QueryOrderByValueConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nclass QueryEqualToValueConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query, ...queryConstraints) {\r\n    let queryImpl = getModularInstance(query);\r\n    for (const constraint of queryConstraints) {\r\n        queryImpl = constraint._apply(queryImpl);\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase Node.js Admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches `Repo` instances.\r\n */\r\nconst repos = {};\r\n/**\r\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\r\n */\r\nlet useRestClient = false;\r\n/**\r\n * Update an existing `Repo` in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(`${host}:${port}`, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams, \r\n    /*isUsingEmulator=*/ true);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    let dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\r\n    }\r\n    let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    let repoInfo = parsedUrl.repoInfo;\r\n    let isEmulator;\r\n    let dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined' && process.env) {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    const authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    const repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    const appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    let appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    let repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nclass Database {\r\n    /** @hideconstructor */\r\n    constructor(_repoInternal, \r\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a `Database` instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    get _repo() {\r\n        if (!this._instanceStarted) {\r\n            repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n            this._instanceStarted = true;\r\n        }\r\n        return this._repoInternal;\r\n    }\r\n    get _root() {\r\n        if (!this._rootInternal) {\r\n            this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n        }\r\n        return this._rootInternal;\r\n    }\r\n    _delete() {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _checkNotDeleted(apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    }\r\n}\r\nfunction checkTransportInit() {\r\n    if (TransportManager.IS_TRANSPORT_INITIALIZED) {\r\n        warn('Transport has already been initialized. Please call this function before calling ref or setting up a listener');\r\n    }\r\n}\r\n/**\r\n * Force the use of websockets instead of longPolling.\r\n */\r\nfunction forceWebSockets() {\r\n    checkTransportInit();\r\n    BrowserPollConnection.forceDisallow();\r\n}\r\n/**\r\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\r\n */\r\nfunction forceLongPolling() {\r\n    checkTransportInit();\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n}\r\n/**\r\n * Returns the instance of the Realtime Database SDK that is associated\r\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\r\n * with default settings if no instance exists or if the existing instance uses\r\n * a custom database URL.\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\r\n * Database instance is associated with.\r\n * @param url - The URL of the Realtime Database instance to connect to. If not\r\n * provided, the SDK connects to the default instance of the Firebase App.\r\n * @returns The `Database` instance of the provided app.\r\n */\r\nfunction getDatabase(app = getApp(), url) {\r\n    const db = _getProvider(app, 'database').getImmediate({\r\n        identifier: url\r\n    });\r\n    if (!db._instanceStarted) {\r\n        const emulator = getDefaultEmulatorHostnameAndPort('database');\r\n        if (emulator) {\r\n            connectDatabaseEmulator(db, ...emulator);\r\n        }\r\n    }\r\n    return db;\r\n}\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options = {}) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    const repo = db._repoInternal;\r\n    let tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        const token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging(logger, persistent) {\r\n    enableLogging$1(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerDatabase(variant) {\r\n    setSDKVersion(SDK_VERSION$1);\r\n    _registerComponent(new Component('database', (container, { instanceIdentifier: url }) => {\r\n        const app = container.getProvider('app').getImmediate();\r\n        const authProvider = container.getProvider('auth-internal');\r\n        const appCheckProvider = container.getProvider('app-check-internal');\r\n        return repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\r\n    registerVersion(name, version, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of {@link runTransaction}.\r\n */\r\nclass TransactionResult {\r\n    /** @hideconstructor */\r\n    constructor(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    toJSON() {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    }\r\n}\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `runTransaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `runTransaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    const applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    const deferred = new Deferred();\r\n    const promiseComplete = (error, committed, node) => {\r\n        let dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    const unwatcher = onValue(ref, () => { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nPersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nConnection;\r\n/**\r\n * @internal\r\n */\r\nconst hijackHash = function (newHash) {\r\n    const oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nRepoInfo;\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n * @internal\r\n */\r\nconst forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\n/**\r\n * Firebase Realtime Database\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterDatabase();\n\nexport { DataSnapshot, Database, OnDisconnect, QueryConstraint, TransactionResult, QueryImpl as _QueryImpl, QueryParams as _QueryParams, ReferenceImpl as _ReferenceImpl, forceRestClient as _TEST_ACCESS_forceRestClient, hijackHash as _TEST_ACCESS_hijackHash, repoManagerDatabaseFromApp as _repoManagerDatabaseFromApp, setSDKVersion as _setSDKVersion, validatePathString as _validatePathString, validateWritablePath as _validateWritablePath, child, connectDatabaseEmulator, enableLogging, endAt, endBefore, equalTo, forceLongPolling, forceWebSockets, get, getDatabase, goOffline, goOnline, increment, limitToFirst, limitToLast, off, onChildAdded, onChildChanged, onChildMoved, onChildRemoved, onDisconnect, onValue, orderByChild, orderByKey, orderByPriority, orderByValue, push, query, ref, refFromURL, remove, runTransaction, serverTimestamp, set, setPriority, setWithPriority, startAfter, startAt, update };\n","import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n","import '@firebase/database-compat';\n"],"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","NgModule","asyncScheduler","Observable","of","merge","map","share","switchMap","scan","distinctUntilChanged","withLatestFrom","skipWhile","i1","keepUnstableUntilFirst","VERSION","ɵfirebaseAppFactory","ɵcacheInstance","FIREBASE_OPTIONS","FIREBASE_APP_NAME","i2","ɵauthFactory","USE_EMULATOR","USE_EMULATOR$1","SETTINGS","TENANT_ID","LANGUAGE_CODE","USE_DEVICE_LANGUAGE","PERSISTENCE","i3","firebase","isString","value","isFirebaseDataSnapshot","exportVal","isNil","obj","undefined","isFirebaseRef","set","getRef","database","pathRef","ref","checkOperationCases","item","cases","stringCase","firebaseCase","snapshotCase","Error","fromRef","event","listenType","scheduler","subscriber","fn","snapshot","prevKey","schedule","next","complete","err","error","unsubscribe","off","pipe","payload","key","exists","type","listChanges","events","snapshotAction","childEvent$","forEach","push","buildView","positionFor","changes","len","length","i","positionAfter","current","action","currentKeyPosition","afterPreviousKeyPosition","previous","filter","x","splice","slice","data","validateEventsArray","snapshotChanges","query","stateChanges","auditTrail","auditTrail$","waitForLoaded","loadedData","lastKeyToLoad","child","action$","loaded$","loaded","actions","loadedKeys","snap","meta","indexOf","createDataOperationMethod","operation","dataOperation","createRemoveMethod","remove","createListReference","afDatabase","outsideAngularScheduler","schedulers","outsideAngular","refInZone","ngZone","run","update","valueChanges","options","snapshotChanges$","a","idField","Object","assign","val","createObjectSnapshotChanges","createObjectReference","URL","AngularFireDatabase","constructor","name","databaseURL","platformId","zone","_useEmulator","auth","useAuthEmulator","authSettings","tenantId","languageCode","useDeviceLanguage","persistence","_appCheckInstances","useEmulator","app","runOutsideAngular","list","pathOrRef","queryFn","object","createPushId","ɵfac","NgZone","ɵAngularFireSchedulers","AngularFireAuth","AppCheckInstances","ɵprov","args","providedIn","decorators","AngularFireDatabaseModule","registerVersion","full","ɵmod","ɵinj","providers","Provider","ComponentContainer","Component","_validatePathString","onChildMoved","onChildChanged","onChildRemoved","onChildAdded","onValue","get","limitToFirst","limitToLast","orderByChild","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","_ReferenceImpl","_QueryImpl","_QueryParams","_validateWritablePath","setWithPriority","runTransaction","setPriority","OnDisconnect","OnDisconnect$1","forceWebSockets","forceLongPolling","connectDatabaseEmulator","refFromURL","goOffline","goOnline","serverTimestamp","increment","_setSDKVersion","_repoManagerDatabaseFromApp","enableLogging","errorPrefix","validateArgCount","validateCallback","validateContextObject","Deferred","Logger","version","logClient","warn","msg","message","validateBoolean","fnName","argumentName","bool","optional","validateEventType","eventType","_delegate","cancel","onComplete","arguments","result","then","priority","objectToMerge","Array","isArray","newObjectToMerge","TransactionResult","committed","toJSON","DataSnapshot","_database","path","String","hasChild","getPriority","expDataSnapshot","hasChildren","numChildren","size","Reference","Query","on","callback","cancelCallbackOrContext","context","_a","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","previousChildName","call","userCallback","cancelCallback","bind","once","failureCallbackOrContext","deferred","resolve","reject","onlyOnce","promise","limit","toString","isEqual","other","cancelOrContext","_repo","_path","getKey","pathString","getParent","parent","getRoot","root","newVal","values","newPriority","transaction","transactionUpdate","applyLocally","transactionResult","expPromise","expRef","catch","onDisconnect","Database","INTERNAL","delete","_delete","host","port","childRef","url","apiName","ServerValue","TIMESTAMP","delta","initStandalone","customAuthImpl","namespace","nodeAdmin","authProvider","setComponent","instance","freeze","__proto__","registerDatabase","registerComponent","container","instanceIdentifier","getProvider","getImmediate","databaseExp","identifier","setServiceProps","setMultipleInstances","_getProvider","getApp","SDK_VERSION","SDK_VERSION$1","_registerComponent","stringify","jsonEval","contains","assert","isNodeSdk","stringToByteArray","Sha1","base64","deepCopy","base64Encode","isMobileCordova","stringLength","safeGet","isAdmin","isValidFormat","isEmpty","isReactNative","assertionError","querystring","getModularInstance","getDefaultEmulatorHostnameAndPort","createMockUserToken","LogLevel","setSDKVersion","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","LUIDGenerator","id","sha1","str","utf8Bytes","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","arg","apply","logger","firstLog_","enableLogging$1","logger_","persistent","logLevel","VERBOSE","log","logWrapper","prefix","fatal","warnIfPageIsSecure","location","protocol","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","document","readyState","called","wrappedFn","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","reason","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getToken","forceRefresh","Promise","addTokenChangeListener","listener","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","secure","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","internalHost","isCacheableHost","isCustomHost","newHost","toURLString","repoInfoNeedsQueryParam","repoInfo","repoInfoConnectionURL","params","connURL","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","toProcess","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","textContent","myID","myPW","newRequest_","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","serial","add","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript","async","onload","onreadystatechange","rstate","parentNode","onerror","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","ALL_TRANSPORTS","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","h","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","hash","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","eventData","getInitialEvent","find","et","OnlineMonitor","online_","getInstance","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","validationPathCheckValid","validationPathPush","validationPath","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","onResponse","curReqNum","r","initConnection_","request","p","q","_queryObject","outstandingGet","index","sendGet_","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","tryAppCheck","authMethod","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","all","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","console","replace","queries","clientName","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","setMaxNode$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","__childrenNodeConstructor","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","nodeFromJSON$1","MAX_NODE$1","setNodeFromJSON","setMaxNode","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","Default","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","newIndexMap","newImmediateChild","numKeys","allIntegerKeys","array","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON","json","jsonLeaf","children","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","childData","PathIndex","indexPath_","extractChild","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","source","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startIsInclusive_","startAfterSet_","endIsInclusive_","endBeforeSet_","getStartPost","getEndPost","matches","isWithinStart","isWithinEnd","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","withinDirectionalStart","reverse_","withinEndPost","withinStartPost","withinDirectionalEnd","compareRes","rangedFilter_","limit_","getLimit","isViewFromLeft","fullLimitUpdateChild_","inRange","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasLimit","hasAnchoredLimit","queryParamsGetNodeFilter","queryParams","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","startParam","endParam","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","safeToRemove","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","eventCache","eventRegistrations","moves","change","eventGeneratorGenerateEventsForType","registrations","filteredChanges","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","mergeAtPath","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorAckUserWrite","viewProcessorRevertUserWrite","viewProcessorListenComplete","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","viewProcessorCacheHasChild","curViewCache","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor$1","SyncPoint","views","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","viewQueryId","entries","syncPointGetQueryViews","syncPointGetCompleteServerCache","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","referenceConstructor","syncTreeSetReferenceConstructor","syncTreeGetReferenceConstructor","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","maybeChildSyncPoint","childMap","completeView","_key","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","validateFirebaseData","hasDotValue","hasActualChild","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePriority","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","statsReporter_","infoData_","infoSyncTree_","infoEvents","repoUpdateInfo","serverSyncTree_","repoServerTime","offsetNode","offset","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoGetValue","cached","repoLog","repoSetWithPriority","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","resolvedOnDisconnectTree","resolved","repoOnDisconnectCancel","repoOnDisconnectSet","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","repoStartTransaction","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","queueNode","nodeQueue","priorityForNode","currentNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","charAt","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","DataEvent","getEventType","CancelEvent","CallbackContext","snapshotCallback","onCancel","hasCancelCallback","wrapCallback","QueryImpl","_orderByCalled","ReferenceImpl","sameRepo","samePath","sameQueryIdentifier","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","_node","_index","db","_checkNotDeleted","_root","parsedURL","thennablePushRef","pushRef","callbackContext","ValueEventRegistration","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onceCallback","dataSnapshot","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","QueryEndBeforeConstraint","QueryStartAtConstraint","QueryStartAfterConstraint","QueryLimitToFirstConstraint","_limit","QueryLimitToLastConstraint","QueryOrderByChildConstraint","parsedPath","QueryOrderByKeyConstraint","QueryOrderByPriorityConstraint","QueryOrderByValueConstraint","QueryEqualToValueConstraint","queryConstraints","queryImpl","constraint","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","tokenProvider","repoManagerDatabaseFromApp","dbUrl","projectId","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","repoManagerDeleteRepo","appName","appRepos","repoManagerForceRestClient","forceRestClient","_repoInternal","_instanceStarted","_rootInternal","checkTransportInit","getDatabase","emulator","mockUserToken","variant","SERVER_TIMESTAMP","promiseComplete","prototype","simpleListen","echo","onEcho","hijackHash","newHash","oldPut","_TEST_ACCESS_forceRestClient","_TEST_ACCESS_hijackHash","Subscriber","lift","SkipWhileOperator","subscribe","SkipWhileSubscriber","destination","skipping","_next","tryCallPredicate","Boolean","OuterSubscriber","subscribeToResult","project","observables","WithLatestFromOperator","WithLatestFromSubscriber","toRespond","observable","notifyNext","_outerValue","innerValue","outerIndex","found","notifyComplete","_tryProject"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5]}