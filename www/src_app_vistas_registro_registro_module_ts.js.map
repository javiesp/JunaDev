{"version":3,"file":"src_app_vistas_registro_registro_module_ts.js","mappings":"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","sources":["./src/app/vistas/registro/registro-routing.module.ts","./src/app/vistas/registro/registro.module.ts","./src/app/vistas/registro/registro.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegistroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistroPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegistroPageRoutingModule } from './registro-routing.module';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegistroPageRoutingModule\r\n  ],\r\n  declarations: [RegistroPage]\r\n})\r\nexport class RegistroPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { FireserviceService } from 'src/app/servicios/fireservice.service';\r\nimport * as Notiflix from 'notiflix';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.page.html',\r\n  styleUrls: ['./registro.page.scss'],\r\n})\r\nexport class RegistroPage implements OnInit {\r\n  public username:any;\r\n  public password:any;\r\n  public apellido:any;\r\n  public email:any;\r\n\r\n  constructor(\r\n    public fireService:FireserviceService,public router:Router,private alertController:AlertController \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Esta función se encarga del proceso de registro de un nuevo usuario en la aplicación.\r\n  async signup() {\r\n    if (this.username.length >= 1 && this.password.length >= 8 && this.email.includes('@')) {\r\n      try {\r\n        const res = await this.fireService.signup({ email: this.email, password: this.password });\r\n        if (res.user.uid) {\r\n          const data = {\r\n            username: this.username,\r\n            password: this.password,\r\n            apellido: this.apellido,\r\n            email: this.email\r\n            \r\n          };\r\n          this.router.navigate(['/menu-principal']);\r\n          Notiflix.Notify.success('Usuario registrado, sesión iniciada correctamente');\r\n          try {\r\n            await this.fireService.saveDetails(data);\r\n            this.showSuccessAlert();\r\n\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        this.showErrorAlert('Email existente, por favor inicie sesión o recupere contraseña');\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      await this.presentAlert('No se ha guardado el usuario, vuelva a ingresar los datos');\r\n    }\r\n  }\r\n  \r\n  \r\n  async showSuccessAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Cuenta creada',\r\n      message: 'Tu cuenta ha sido registrada con éxito.',\r\n      buttons: ['OK']\r\n    });\r\n  \r\n    await alert.present();\r\n  }\r\n  \r\n  async showErrorAlert(errorMessage) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Error al registrar',\r\n      message: errorMessage,\r\n      buttons: ['OK']\r\n    });\r\n  \r\n    await alert.present();\r\n  }\r\n\r\n    // Función para mostrar el cuadro de alerta\r\n  async presentAlert(mensaje: string) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Alerta',\r\n      message: mensaje,\r\n      buttons: ['OK'],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n}"],"names":["Component","Router","AlertController","FireserviceService","Notiflix","RegistroPage","constructor","fireService","router","alertController","ngOnInit","signup","username","length","password","email","includes","res","user","uid","data","apellido","navigate","Notify","success","saveDetails","showSuccessAlert","err","console","log","showErrorAlert","presentAlert","alert","create","header","message","buttons","present","errorMessage","mensaje","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}